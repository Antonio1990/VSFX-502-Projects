/* Shader description goes here */class displaceAndSurface_test(float	Kd = 1,								Km = 0.1){varying float  hump = 0;varying normal n = 0;  public void displacement(output point P; output normal N) {	n = normalize(N);	hump = 0;	P = P - n * hump * Km;	N = calculatenormal(P);	}    public void surface(output color Ci, Oi) {	n = normalize(N); 	normal nf = faceforward(n, I);	color   surfcolor = Cs;	color  diffusecolor = Kd * diffuse(nf); 	Oi = Os;	Ci = Oi * surfcolor * diffusecolor;    }// The surface() method may be replaced by the following// methods. Doing so will make the shader compatible with// future Pixar lighting tools.// 		public void prelighting (output color Ci, Oi) { }// 		public void lighting    (output color Ci, Oi) { }// 		public void postlighting(output color Ci, Oi) { }// The next method is optional.//		public void opacity(output color Oi) { }}