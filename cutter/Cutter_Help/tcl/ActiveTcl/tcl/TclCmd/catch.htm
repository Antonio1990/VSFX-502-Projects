<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Built-In Commands - catch manual page</title>
</head>
<body>
<table width='100%' border='0' cellspacing='0' cellpadding='0'
bgcolor='EAE2BB'>
<tr>
<td><a target='_blank' href=
'http://www.ActiveState.com/Products/ActiveTcl'><img src=
'../../images/ActiveTcl.gif' border='0' align='left' height='61'
width='64'></a> </td>
<td>
<div align='center' class='heading'>ActiveTcl User Guide</div>
</td>
<td><a target='_blank' href='http://www.ActiveState.com'><img src=
'../../images/AS_logo.gif' border='0' align='right' height='48'
width='112'></a> </td>
</tr>

<tr>
<td class='lineColour' colspan='3'></td>
</tr>
</table>

<br>
<h3><a name="M2">NAME</a></h3>

<p>catch - Evaluate script and trap exceptional returns</p>

<h3><a name="M3">SYNOPSIS</a></h3>

<p><b>catch</b> <i>script</i> ?<i>varName</i>?<br>
</p>

<h3><a name="M4">DESCRIPTION</a></h3>

<p>The <b>catch</b> command may be used to prevent errors from
aborting command interpretation. <b>Catch</b> calls the Tcl
interpreter recursively to execute <i>script</i>, and always
returns without raising an error, regardless of any errors that
might occur while executing <i>script</i>.</p>

<p>If <i>script</i> raises an error, <b>catch</b> will return a
non-zero integer value corresponding to one of the exceptional
return codes (see tcl.h for the definitions of code values). If the
<i>varName</i> argument is given, then the variable it names is set
to the error message from interpreting <i>script</i>.</p>

<p>If <i>script</i> does not raise an error, <b>catch</b> will
return 0 (TCL_OK) and set the variable to the value returned from
<i>script</i>.</p>

<p>Note that <b>catch</b> catches all exceptions, including those
generated by <b><a href="../TclCmd/break.htm">break</a></b> and
<b><a href="../TclCmd/continue.htm">continue</a></b> as well as
errors. The only errors that are not caught are syntax errors found
when the script is compiled. This is because the catch command only
catches errors during runtime. When the catch statement is
compiled, the script is compiled as well and any syntax errors will
generate a Tcl error.</p>

<h3><a name="M5">EXAMPLES</a></h3>

<p>The <b>catch</b> command may be used in an <b><a href=
"../TclCmd/if.htm">if</a></b> to branch based on the success of a
script.</p>

<pre>
if { [catch {open $someFile w} fid] } {
    puts stderr "Could not open $someFile for writing\n$fid"
    exit 1
}
</pre>

<p>The <b>catch</b> command will not catch compiled syntax errors.
The first time proc <b>foo</b> is called, the body will be compiled
and a Tcl error will be generated.</p>

<pre>
proc foo {} {
    catch {expr {1 +- }}
}
</pre>

<h3><a name="M6">SEE ALSO</a></h3>

<p><b><a href="../TclCmd/error.htm">error</a></b>, <b><a href=
"../TclCmd/break.htm">break</a></b>, <b><a href=
"../TclCmd/continue.htm">continue</a></b></p>

<h3><a name="M7">KEYWORDS</a></h3>

<p><a href="../Keywords/C.htm#catch">catch</a>, <a href=
"../Keywords/E.htm#error">error</a></p>

<hr>
<pre>
<a href=
"../copyright.htm">Copyright</a> &copy; 1993-1994 The Regents of the University of California.
<a href=
"../copyright.htm">Copyright</a> &copy; 1994-1996 Sun Microsystems, Inc.
<a href=
"../copyright.htm">Copyright</a> &copy; 1995-1997 Roger E. Critchlow Jr.
</pre>
</body>
</html>

