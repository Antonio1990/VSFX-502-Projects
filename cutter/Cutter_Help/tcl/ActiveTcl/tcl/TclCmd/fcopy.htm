<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Built-In Commands - fcopy manual page</title>
</head>
<body>
<table width='100%' border='0' cellspacing='0' cellpadding='0'
bgcolor='EAE2BB'>
<tr>
<td><a target='_blank' href=
'http://www.ActiveState.com/Products/ActiveTcl'><img src=
'../../images/ActiveTcl.gif' border='0' align='left' height='61'
width='64'></a> </td>
<td>
<div align='center' class='heading'>ActiveTcl User Guide</div>
</td>
<td><a target='_blank' href='http://www.ActiveState.com'><img src=
'../../images/AS_logo.gif' border='0' align='right' height='48'
width='112'></a> </td>
</tr>

<tr>
<td class='lineColour' colspan='3'></td>
</tr>
</table>

<br>
<h3><a name="M2">NAME</a></h3>

<p>fcopy - Copy data from one channel to another.</p>

<h3><a name="M3">SYNOPSIS</a></h3>

<p><b>fcopy</b> <i>inchan</i> <i>outchan</i> ?<b>-size</b>
<i>size</i>? ?<b>-command</b> <i>callback</i>?<br>
</p>

<h3><a name="M4">DESCRIPTION</a></h3>

<p>The <b>fcopy</b> command copies data from one I/O channel,
<i>inchan</i> to another I/O channel, <i>outchan</i>. The
<b>fcopy</b> command leverages the buffering in the Tcl I/O system
to avoid extra copies and to avoid buffering too much data in main
memory when copying large files to slow destinations like network
sockets.</p>

<p>The <b>fcopy</b> command transfers data from <i>inchan</i> until
end of file or <i>size</i> bytes have been transferred. If no
<b>-size</b> argument is given, then the copy goes until end of
file. All the data read from <i>inchan</i> is copied to
<i>outchan</i>. Without the <b>-command</b> option, <b>fcopy</b>
blocks until the copy is complete and returns the number of bytes
written to <i>outchan</i>.</p>

<p>The <b>-command</b> argument makes <b>fcopy</b> work in the
background. In this case it returns immediately and the
<i>callback</i> is invoked later when the copy completes. The
<i>callback</i> is called with one or two additional arguments that
indicates how many bytes were written to <i>outchan</i>. If an
error occurred during the background copy, the second argument is
the error string associated with the error. With a background copy,
it is not necessary to put <i>inchan</i> or <i>outchan</i> into
non-blocking mode; the <b>fcopy</b> command takes care of that
automatically. However, it is necessary to enter the event loop by
using the <b><a href="../TclCmd/vwait.htm">vwait</a></b> command or
by using Tk.</p>

<p>You are not allowed to do other I/O operations with
<i>inchan</i> or <i>outchan</i> during a background fcopy. If
either <i>inchan</i> or <i>outchan</i> get closed while the copy is
in progress, the current copy is stopped and the command callback
is <i>not</i> made. If <i>inchan</i> is closed, then all data
already queued for <i>outchan</i> is written out.</p>

<p>Note that <i>inchan</i> can become readable during a background
copy. You should turn off any <b><a href=
"../TclCmd/fileevent.htm">fileevent</a></b> handlers during a
background copy so those handlers do not interfere with the copy.
Any I/O attempted by a <b><a href=
"../TclCmd/fileevent.htm">fileevent</a></b> handler will get a
"channel busy" error.</p>

<p><b>Fcopy</b> translates end-of-line sequences in <i>inchan</i>
and <i>outchan</i> according to the <b>-translation</b> option for
these channels. See the manual entry for <b><a href=
"../TclCmd/fconfigure.htm">fconfigure</a></b> for details on the
<b>-translation</b> option. The translations mean that the number
of bytes read from <i>inchan</i> can be different than the number
of bytes written to <i>outchan</i>. Only the number of bytes
written to <i>outchan</i> is reported, either as the return value
of a synchronous <b>fcopy</b> or as the argument to the callback
for an asynchronous <b>fcopy</b>.</p>

<p><b>Fcopy</b> obeys the encodings configured for the channels.
This means that the incoming characters are converted internally
first UTF-8 and then into the encoding of the channel <b>fcopy</b>
writes to. See the manual entry for <b><a href=
"../TclCmd/fconfigure.htm">fconfigure</a></b> for details on the
<b>-encoding</b> option. No conversion is done if both channels are
set to encoding "binary". If only the output channel is set to
encoding "binary" the system will write the internal UTF-8
representation of the incoming characters. If only the input
channel is set to encoding "binary" the system will assume that the
incoming bytes are valid UTF-8 characters and convert them
according to the output encoding. The behaviour of the system for
bytes which are not valid UTF-8 characters is undefined in this
case.</p>

<h3><a name="M5">EXAMPLE</a></h3>

<p>This first example shows how the callback gets passed the number
of bytes transferred. It also uses vwait to put the application
into the event loop. Of course, this simplified example could be
done without the command callback.</p>

<pre>
proc Cleanup {in out bytes {error {}}} {
    global total
    set total $bytes
    close $in
    close $out
    if {[string length $error] != 0} {
    # error occurred during the copy
    }
}
set in [open $file1]
set out [socket $server $port]
fcopy $in $out -command [list Cleanup $in $out]
vwait total
</pre>

<p>The second example copies in chunks and tests for end of file in
the command callback</p>

<pre>
proc CopyMore {in out chunk bytes {error {}}} {
    global total done
    incr total $bytes
    if {([string length $error] != 0) || [eof $in] {
    set done $total
    close $in
    close $out
    } else {
    fcopy $in $out -command [list CopyMore $in $out $chunk] \
        -size $chunk
    }
}
set in [open $file1]
set out [socket $server $port]
set chunk 1024
set total 0
fcopy $in $out -command [list CopyMore $in $out $chunk] -size $chunk
vwait done
</pre>

<h3><a name="M6">SEE ALSO</a></h3>

<p><b><a href="../TclCmd/eof.htm">eof</a></b>, <b><a href=
"../TclCmd/fblocked.htm">fblocked</a></b>, <b><a href=
"../TclCmd/fconfigure.htm">fconfigure</a></b></p>

<h3><a name="M7">KEYWORDS</a></h3>

<p><a href="../Keywords/B.htm#blocking">blocking</a>, <a href=
"../Keywords/C.htm#channel">channel</a>, <a href=
"../Keywords/E.htm#end of line">end of line</a>, <a href=
"../Keywords/E.htm#end of file">end of file</a>, <a href=
"../Keywords/N.htm#nonblocking">nonblocking</a>, <a href=
"../Keywords/R.htm#read">read</a>, <a href=
"../Keywords/T.htm#translation">translation</a></p>

<hr>
<pre>
<a href=
"../copyright.htm">Copyright</a> &copy; 1993 The Regents of the University of California.
<a href=
"../copyright.htm">Copyright</a> &copy; 1994-1997 Sun Microsystems, Inc.
<a href=
"../copyright.htm">Copyright</a> &copy; 1995-1997 Roger E. Critchlow Jr.
</pre>
</body>
</html>

