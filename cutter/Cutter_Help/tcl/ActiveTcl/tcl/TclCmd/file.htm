<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Built-In Commands - file manual page</title>
</head>
<body>
<table width='100%' border='0' cellspacing='0' cellpadding='0'
bgcolor='EAE2BB'>
<tr>
<td><a target='_blank' href=
'http://www.ActiveState.com/Products/ActiveTcl'><img src=
'../../images/ActiveTcl.gif' border='0' align='left' height='61'
width='64'></a> </td>
<td>
<div align='center' class='heading'>ActiveTcl User Guide</div>
</td>
<td><a target='_blank' href='http://www.ActiveState.com'><img src=
'../../images/AS_logo.gif' border='0' align='right' height='48'
width='112'></a> </td>
</tr>

<tr>
<td class='lineColour' colspan='3'></td>
</tr>
</table>

<br>
<dl>
<dd><a href="file.htm#M2" name="L372">NAME</a> 

<dl>
<dd>file - Manipulate file names and attributes</dd>
</dl>
</dd>

<dd><a href="file.htm#M3" name="L373">SYNOPSIS</a> 

<dl>
<dd><b>file</b> <i>option</i> <i>name</i> ?<i>arg arg ...</i>?</dd>
</dl>
</dd>

<dd><a href="file.htm#M4" name="L374">DESCRIPTION</a> 

<dl>
<dd><a href="file.htm#M5" name="L375"><b>file atime</b> <i>name</i>
?<b>time</b>?</a></dd>

<dd><a href="file.htm#M6" name="L376"><b>file attributes</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M7" name="L377"><b>file attributes</b>
<i>name</i> ?<b>option</b>?</a></dd>

<dd><a href="file.htm#M8" name="L378"><b>file attributes</b>
<i>name</i> ?<b>option value option value...</b>?</a></dd>

<dd><a href="file.htm#M9" name="L379"><b>file channels
?</b><i>pattern</i>?</a></dd>

<dd><a href="file.htm#M10" name="L380"><b>file copy</b>
?<b>-force</b>? ?<b>-&nbsp;-</b>? <i>source</i>
<i>target</i></a></dd>

<dd><a href="file.htm#M11" name="L381"><b>file copy</b>
?<b>-force</b>? ?<b>-&nbsp;-</b>? <i>source</i> ?<i>source</i> ...?
<i>targetDir</i></a></dd>

<dd><a href="file.htm#M12" name="L382"><b>file delete</b>
?<b>-force</b>? ?<b>-&nbsp;-</b>? <i>pathname</i> ?<i>pathname</i>
... ?</a></dd>

<dd><a href="file.htm#M13" name="L383"><b>file dirname</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M14" name="L384"><b>file executable</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M15" name="L385"><b>file exists</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M16" name="L386"><b>file extension</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M17" name="L387"><b>file isdirectory</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M18" name="L388"><b>file isfile</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M19" name="L389"><b>file join</b> <i>name</i>
?<i>name ...</i>?</a></dd>

<dd><a href="file.htm#M20" name="L390"><b>file link
?</b><i>-linktype</i>? <i>linkName</i> ?<i>target</i>?</a></dd>

<dd><a href="file.htm#M21" name="L391"><b>file lstat</b> <i>name
varName</i></a></dd>

<dd><a href="file.htm#M22" name="L392"><b>file mkdir</b> <i>dir</i>
?<i>dir</i> ...?</a></dd>

<dd><a href="file.htm#M23" name="L393"><b>file mtime</b>
<i>name</i> ?<i>time</i>?</a></dd>

<dd><a href="file.htm#M24" name="L394"><b>file nativename</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M25" name="L395"><b>file normalize</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M26" name="L396"><b>file owned</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M27" name="L397"><b>file pathtype</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M28" name="L398"><b>file readable</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M29" name="L399"><b>file readlink</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M30" name="L400"><b>file rename</b>
?<b>-force</b>? ?<b>-&nbsp;-</b>? <i>source</i>
<i>target</i></a></dd>

<dd><a href="file.htm#M31" name="L401"><b>file rename</b>
?<b>-force</b>? ?<b>-&nbsp;-</b>? <i>source</i> ?<i>source</i> ...?
<i>targetDir</i></a></dd>

<dd><a href="file.htm#M32" name="L402"><b>file rootname</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M33" name="L403"><b>file separator</b>
?<i>name</i>?</a></dd>

<dd><a href="file.htm#M34" name="L404"><b>file size</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M35" name="L405"><b>file split</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M36" name="L406"><b>file stat</b> <i>name
varName</i></a></dd>

<dd><a href="file.htm#M37" name="L407"><b>file system</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M38" name="L408"><b>file tail</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M39" name="L409"><b>file type</b>
<i>name</i></a></dd>

<dd><a href="file.htm#M40" name="L410"><b>file volume</b></a></dd>

<dd><a href="file.htm#M41" name="L411"><b>file writable</b>
<i>name</i></a></dd>
</dl>
</dd>

<dd><a href="file.htm#M42" name="L412">PORTABILITY ISSUES</a> 

<dl>
<dd><a href="file.htm#M43" name="L413"><b>Unix</b></a></dd>
</dl>
</dd>

<dd><a href="file.htm#M44" name="L414">SEE ALSO</a></dd>

<dd><a href="file.htm#M45" name="L415">KEYWORDS</a></dd>
</dl>

<hr>
<h3><a name="M2">NAME</a></h3>

<p>file - Manipulate file names and attributes</p>

<h3><a name="M3">SYNOPSIS</a></h3>

<p><b>file</b> <i>option</i> <i>name</i> ?<i>arg arg ...</i>?<br>
</p>

<h3><a name="M4">DESCRIPTION</a></h3>

<p>This command provides several operations on a file's name or
attributes. <i>Name</i> is the name of a file; if it starts with a
tilde, then tilde substitution is done before executing the command
(see the manual entry for <b><a href=
"../TclCmd/filename.htm">filename</a></b> for details).
<i>Option</i> indicates what to do with the file name. Any unique
abbreviation for <i>option</i> is acceptable. The valid options
are:</p>

<dl>
<dt><a name="M5"><b>file atime</b> <i>name</i>
?<b>time</b>?</a></dt>

<dd>Returns a decimal string giving the time at which file
<i>name</i> was last accessed. If <i>time</i> is specified, it is
an access time to set for the file. The time is measured in the
standard POSIX fashion as seconds from a fixed starting time (often
January 1, 1970). If the file doesn't exist or its access time
cannot be queried or set then an error is generated. On Windows,
FAT file systems do not support access time.</dd>

<dt><a name="M6"><b>file attributes</b> <i>name</i></a></dt>

<dt><a name="M7"><b>file attributes</b> <i>name</i>
?<b>option</b>?</a></dt>

<dt><a name="M8"><b>file attributes</b> <i>name</i> ?<b>option
value option value...</b>?</a></dt>

<dd>
<dl>
<dd>This subcommand returns or sets platform specific values
associated with a file. The first form returns a list of the
platform specific flags and their values. The second form returns
the value for the specific option. The third form sets one or more
of the values. The values are as follows: 

<p>On Unix, <b>-group</b> gets or sets the group name for the file.
A group id can be given to the command, but it returns a group
name. <b>-owner</b> gets or sets the user name of the owner of the
file. The command returns the owner name, but the numerical id can
be passed when setting the owner. <b>-permissions</b> sets or
retrieves the octal code that chmod(1) uses. This command does also
has limited support for setting using the symbolic attributes for
chmod(1), of the form [ugo]?[[+-=][rwxst],[...]], where multiple
symbolic attributes can be separated by commas (example:
<b>u+s,go-rw</b> add sticky bit for user, remove read and write
permissions for group and other). A simplified <b>ls</b> style
string, of the form rwxrwxrwx (must be 9 characters), is also
supported (example: <b>rwxr-xr-t</b> is equivalent to 01755).</p>

<p>On Windows, <b>-archive</b> gives the value or sets or clears
the archive attribute of the file. <b>-hidden</b> gives the value
or sets or clears the hidden attribute of the file.
<b>-longname</b> will expand each path element to its long version.
This attribute cannot be set. <b>-readonly</b> gives the value or
sets or clears the readonly attribute of the file.
<b>-shortname</b> gives a string where every path element is
replaced with its short (8.3) version of the name. This attribute
cannot be set. <b>-system</b> gives or sets or clears the value of
the system attribute of the file.</p>

<p>On Macintosh, <b>-creator</b> gives or sets the Finder creator
type of the file. <b>-hidden</b> gives or sets or clears the hidden
attribute of the file. <b>-readonly</b> gives or sets or clears the
readonly attribute of the file. Note that directories can only be
locked if File Sharing is turned on. <b>-type</b> gives or sets the
Finder file type for the file.</p>
</dd>
</dl>
</dd>

<dt><a name="M9"><b>file channels ?</b><i>pattern</i>?</a></dt>

<dd>If <i>pattern</i> isn't specified, returns a list of names of
all registered open channels in this interpreter. If <i>pattern</i>
is specified, only those names matching <i>pattern</i> are
returned. Matching is determined using the same rules as for <b><a
href="../TclCmd/string.htm">string match</a></b>.</dd>

<dt><a name="M10"><b>file copy</b> ?<b>-force</b>?
?<b>-&nbsp;-</b>? <i>source</i> <i>target</i></a></dt>

<dt><a name="M11"><b>file copy</b> ?<b>-force</b>?
?<b>-&nbsp;-</b>? <i>source</i> ?<i>source</i> ...?
<i>targetDir</i></a></dt>

<dd>
<dl>
<dd>The first form makes a copy of the file or directory
<i>source</i> under the pathname <i>target</i>. If <i>target</i> is
an existing directory, then the second form is used. The second
form makes a copy inside <i>targetDir</i> of each <i>source</i>
file listed. If a directory is specified as a <i>source</i>, then
the contents of the directory will be recursively copied into
<i>targetDir</i>. Existing files will not be overwritten unless the
<b>-force</b> option is specified. When copying within a single
filesystem, <i>file copy</i> will copy soft links (i.e. the links
themselves are copied, not the things they point to). Trying to
overwrite a non-empty directory, overwrite a directory with a file,
or a file with a directory will all result in errors even if
<i>-force</i> was specified. Arguments are processed in the order
specified, halting at the first error, if any. A <b>-&nbsp;-</b>
marks the end of switches; the argument following the
<b>-&nbsp;-</b> will be treated as a <i>source</i> even if it
starts with a <b>-</b>.</dd>
</dl>
</dd>

<dt><a name="M12"><b>file delete</b> ?<b>-force</b>?
?<b>-&nbsp;-</b>? <i>pathname</i> ?<i>pathname</i> ... ?</a></dt>

<dd>Removes the file or directory specified by each <i>pathname</i>
argument. Non-empty directories will be removed only if the
<b>-force</b> option is specified. When operating on symbolic
links, the links themselves will be deleted, not the objects they
point to. Trying to delete a non-existent file is not considered an
error. Trying to delete a read-only file will cause the file to be
deleted, even if the <b>-force</b> flags is not specified. If the
<b>-force</b> option is specified on a directory, Tcl will attempt
both to change permissions and move the current directory 'pwd' out
of the given path if that is necessary to allow the deletion to
proceed. Arguments are processed in the order specified, halting at
the first error, if any. A <b>-&nbsp;-</b> marks the end of
switches; the argument following the <b>-&nbsp;-</b> will be
treated as a <i>pathname</i> even if it starts with a
<b>-</b>.</dd>

<dt><a name="M13"><b>file dirname</b> <i>name</i></a></dt>

<dd>Returns a name comprised of all of the path components in
<i>name</i> excluding the last element. If <i>name</i> is a
relative file name and only contains one path element, then returns
``<b>.</b>'' (or ``<b>:</b>'' on the Macintosh). If <i>name</i>
refers to a root directory, then the root directory is returned.
For example, 

<pre>
<b>file dirname c:/</b>
</pre>

<p>returns <b>c:/</b>.</p>

<p>Note that tilde substitution will only be performed if it is
necessary to complete the command. For example,</p>

<pre>
<b>file dirname ~/src/foo.c</b>
</pre>

<p>returns <b>~/src</b>, whereas</p>

<pre>
<b>file dirname ~</b>
</pre>

<p>returns <b>/home</b> (or something similar).</p>
</dd>

<dt><a name="M14"><b>file executable</b> <i>name</i></a></dt>

<dd>Returns <b>1</b> if file <i>name</i> is executable by the
current user, <b>0</b> otherwise.</dd>

<dt><a name="M15"><b>file exists</b> <i>name</i></a></dt>

<dd>Returns <b>1</b> if file <i>name</i> exists and the current
user has search privileges for the directories leading to it,
<b>0</b> otherwise.</dd>

<dt><a name="M16"><b>file extension</b> <i>name</i></a></dt>

<dd>Returns all of the characters in <i>name</i> after and
including the last dot in the last element of <i>name</i>. If there
is no dot in the last element of <i>name</i> then returns the empty
string.</dd>

<dt><a name="M17"><b>file isdirectory</b> <i>name</i></a></dt>

<dd>Returns <b>1</b> if file <i>name</i> is a directory, <b>0</b>
otherwise.</dd>

<dt><a name="M18"><b>file isfile</b> <i>name</i></a></dt>

<dd>Returns <b>1</b> if file <i>name</i> is a regular file,
<b>0</b> otherwise.</dd>

<dt><a name="M19"><b>file join</b> <i>name</i> ?<i>name
...</i>?</a></dt>

<dd>Takes one or more file names and combines them, using the
correct path separator for the current platform. If a particular
<i>name</i> is relative, then it will be joined to the previous
file name argument. Otherwise, any earlier arguments will be
discarded, and joining will proceed from the current argument. For
example, 

<pre>
<b>file join a b /foo bar</b>
</pre>

<p>returns <b>/foo/bar</b>.</p>

<p>Note that any of the names can contain separators, and that the
result is always canonical for the current platform: <b>/</b> for
Unix and Windows, and <b>:</b> for Macintosh.</p>
</dd>

<dt><a name="M20"><b>file link ?</b><i>-linktype</i>?
<i>linkName</i> ?<i>target</i>?</a></dt>

<dd>If only one argument is given, that argument is assumed to be
<i>linkName</i>, and this command returns the value of the link
given by <i>linkName</i> (i.e. the name of the file it points to).
If <i>linkName</i> isn't a link or its value cannot be read (as,
for example, seems to be the case with hard links, which look just
like ordinary files), then an error is returned. If 2 arguments are
given, then these are assumed to be <i>linkName</i> and
<i>target</i>. If <i>linkName</i> already exists, or if
<i>target</i> doesn't exist, an error will be returned. Otherwise,
Tcl creates a new link called <i>linkName</i> which points to the
existing filesystem object at <i>target</i>, where the type of the
link is platform-specific (on Unix a symbolic link will be the
default). This is useful for the case where the user wishes to
create a link in a cross-platform way, and doesn't care what type
of link is created. If the user wishes to make a link of a specific
type only, (and signal an error if for some reason that is not
possible), then the optional <i>-linktype</i> argument should be
given. Accepted values for <i>-linktype</i> are "-symbolic" and
"-hard". When creating links on filesystems that either do not
support any links, or do not support the specific type requested,
an error message will be returned. In particular Windows 95, 98 and
ME do not support any links at present, but most Unix platforms
support both symbolic and hard links (the latter for files only),
MacOS supports symbolic links and Windows NT/2000/XP (on NTFS
drives) support symbolic directory links and hard file links.</dd>

<dt><a name="M21"><b>file lstat</b> <i>name varName</i></a></dt>

<dd>Same as <b>stat</b> option (see below) except uses the
<i>lstat</i> kernel call instead of <i>stat</i>. This means that if
<i>name</i> refers to a symbolic link the information returned in
<i>varName</i> is for the link rather than the file it refers to.
On systems that don't support symbolic links this option behaves
exactly the same as the <b>stat</b> option.</dd>

<dt><a name="M22"><b>file mkdir</b> <i>dir</i> ?<i>dir</i>
...?</a></dt>

<dd>Creates each directory specified. For each pathname <i>dir</i>
specified, this command will create all non-existing parent
directories as well as <i>dir</i> itself. If an existing directory
is specified, then no action is taken and no error is returned.
Trying to overwrite an existing file with a directory will result
in an error. Arguments are processed in the order specified,
halting at the first error, if any.</dd>

<dt><a name="M23"><b>file mtime</b> <i>name</i>
?<i>time</i>?</a></dt>

<dd>Returns a decimal string giving the time at which file
<i>name</i> was last modified. If <i>time</i> is specified, it is a
modification time to set for the file (equivalent to Unix
<b>touch</b>). The time is measured in the standard POSIX fashion
as seconds from a fixed starting time (often January 1, 1970). If
the file doesn't exist or its modified time cannot be queried or
set then an error is generated.</dd>

<dt><a name="M24"><b>file nativename</b> <i>name</i></a></dt>

<dd>Returns the platform-specific name of the file. This is useful
if the filename is needed to pass to a platform-specific call, such
as exec under Windows or AppleScript on the Macintosh.</dd>

<dt><a name="M25"><b>file normalize</b> <i>name</i></a></dt>

<dd>
<dl>
<dd>Returns a unique normalised path representation for the
file-system object (file, directory, link, etc), whose string value
can be used as a unique identifier for it. A normalized path is an
absolute path which has all '../', './' removed. Also it is one
which is in the ``standard'' format for the native platform. On
MacOS, Unix, this means the segments leading up to the path must be
free of symbolic links/aliases (but the very last path component
may be a symbolic link), and on Windows it also means means we want
the long form with that form's case-dependence (which gives us a
unique, case-dependent path). The one exception concerning the last
link in the path is necessary, because Tcl or the user may wish to
operate on the actual symbolic link itself (for example 'file
delete', 'file rename', 'file copy' are defined to operate on
symbolic links, not on the things that they point to).</dd>
</dl>
</dd>

<dt><a name="M26"><b>file owned</b> <i>name</i></a></dt>

<dd>Returns <b>1</b> if file <i>name</i> is owned by the current
user, <b>0</b> otherwise.</dd>

<dt><a name="M27"><b>file pathtype</b> <i>name</i></a></dt>

<dd>Returns one of <b>absolute</b>, <b>relative</b>,
<b>volumerelative</b>. If <i>name</i> refers to a specific file on
a specific volume, the path type will be <b>absolute</b>. If
<i>name</i> refers to a file relative to the current working
directory, then the path type will be <b>relative</b>. If
<i>name</i> refers to a file relative to the current working
directory on a specified volume, or to a specific file on the
current working volume, then the file type is
<b>volumerelative</b>.</dd>

<dt><a name="M28"><b>file readable</b> <i>name</i></a></dt>

<dd>Returns <b>1</b> if file <i>name</i> is readable by the current
user, <b>0</b> otherwise.</dd>

<dt><a name="M29"><b>file readlink</b> <i>name</i></a></dt>

<dd>Returns the value of the symbolic link given by <i>name</i>
(i.e. the name of the file it points to). If <i>name</i> isn't a
symbolic link or its value cannot be read, then an error is
returned. On systems that don't support symbolic links this option
is undefined.</dd>

<dt><a name="M30"><b>file rename</b> ?<b>-force</b>?
?<b>-&nbsp;-</b>? <i>source</i> <i>target</i></a></dt>

<dt><a name="M31"><b>file rename</b> ?<b>-force</b>?
?<b>-&nbsp;-</b>? <i>source</i> ?<i>source</i> ...?
<i>targetDir</i></a></dt>

<dd>
<dl>
<dd>The first form takes the file or directory specified by
pathname <i>source</i> and renames it to <i>target</i>, moving the
file if the pathname <i>target</i> specifies a name in a different
directory. If <i>target</i> is an existing directory, then the
second form is used. The second form moves each <i>source</i> file
or directory into the directory <i>targetDir</i>. Existing files
will not be overwritten unless the <b>-force</b> option is
specified. When operating inside a single filesystem, Tcl will
rename symbolic links rather than the things that they point to.
Trying to overwrite a non-empty directory, overwrite a directory
with a file, or a file with a directory will all result in errors.
Arguments are processed in the order specified, halting at the
first error, if any. A <b>-&nbsp;-</b> marks the end of switches;
the argument following the <b>-&nbsp;-</b> will be treated as a
<i>source</i> even if it starts with a <b>-</b>.</dd>
</dl>
</dd>

<dt><a name="M32"><b>file rootname</b> <i>name</i></a></dt>

<dd>Returns all of the characters in <i>name</i> up to but not
including the last ``.'' character in the last component of name.
If the last component of <i>name</i> doesn't contain a dot, then
returns <i>name</i>.</dd>

<dt><a name="M33"><b>file separator</b> ?<i>name</i>?</a></dt>

<dd>If no argument is given, returns the character which is used to
separate path segments for native files on this platform. If a path
is given, the filesystem responsible for that path is asked to
return its separator character. If no file system accepts
<i>name</i>, an error is generated.</dd>

<dt><a name="M34"><b>file size</b> <i>name</i></a></dt>

<dd>Returns a decimal string giving the size of file <i>name</i> in
bytes. If the file doesn't exist or its size cannot be queried then
an error is generated.</dd>

<dt><a name="M35"><b>file split</b> <i>name</i></a></dt>

<dd>Returns a list whose elements are the path components in
<i>name</i>. The first element of the list will have the same path
type as <i>name</i>. All other elements will be relative. Path
separators will be discarded unless they are needed ensure that an
element is unambiguously relative. For example, under Unix 

<pre>
file split /foo/~bar/baz
</pre>

<p>returns <b>/ foo ./~bar baz</b> to ensure that later commands
that use the third component do not attempt to perform tilde
substitution.</p>
</dd>

<dt><a name="M36"><b>file stat</b> <i>name varName</i></a></dt>

<dd>Invokes the <b>stat</b> kernel call on <i>name</i>, and uses
the variable given by <i>varName</i> to hold information returned
from the kernel call. <i>VarName</i> is treated as an array
variable, and the following elements of that variable are set:
<b>atime</b>, <b>ctime</b>, <b>dev</b>, <b>gid</b>, <b>ino</b>,
<b>mode</b>, <b>mtime</b>, <b>nlink</b>, <b>size</b>, <b>type</b>,
<b>uid</b>. Each element except <b>type</b> is a decimal string
with the value of the corresponding field from the <b>stat</b>
return structure; see the manual entry for <b>stat</b> for details
on the meanings of the values. The <b>type</b> element gives the
type of the file in the same form returned by the command <b>file
type</b>. This command returns an empty string.</dd>

<dt><a name="M37"><b>file system</b> <i>name</i></a></dt>

<dd>Returns a list of two elements, the first of which is the name
of the filesystem to use for the file, and the second an arbitrary
string representing the filesystem-specific nature or type of the
location within that filesystem. If a filesystem only supports one
type of file, the second element may be null. For example the
native files have a first element 'native', and a second element
which is a platform-specific type name for the file's system (e.g.
'NTFS', 'FAT', etc), or possibly the empty string if no further
information is available or if this is not implemented. A generic
virtual file system might return the list 'vfs ftp' to represent a
file on a remote ftp site mounted as a virtual filesystem through
an extension called 'vfs'. If the file does not belong to any
filesystem, an error is generated.</dd>

<dt><a name="M38"><b>file tail</b> <i>name</i></a></dt>

<dd>Returns all of the characters in <i>name</i> after the last
directory separator. If <i>name</i> contains no separators then
returns <i>name</i>.</dd>

<dt><a name="M39"><b>file type</b> <i>name</i></a></dt>

<dd>Returns a string giving the type of file <i>name</i>, which
will be one of <b>file</b>, <b>directory</b>,
<b>characterSpecial</b>, <b>blockSpecial</b>, <b>fifo</b>,
<b>link</b>, or <b><a href=
"../TclCmd/socket.htm">socket</a></b>.</dd>

<dt><a name="M40"><b>file volume</b></a></dt>

<dd>Returns the absolute paths to the volumes mounted on the
system, as a proper Tcl list. On the Macintosh, this will be a list
of the mounted drives, both local and network. N.B. if two drives
have the same name, they will both appear on the volume list, but
there is currently no way, from Tcl, to access any but the first of
these drives. On UNIX, the command will always return "/", since
all filesystems are locally mounted. On Windows, it will return a
list of the available local drives (e.g. {a:/ c:/}).</dd>

<dt><a name="M41"><b>file writable</b> <i>name</i></a></dt>

<dd>Returns <b>1</b> if file <i>name</i> is writable by the current
user, <b>0</b> otherwise.</dd>
</dl>

<h3><a name="M42">PORTABILITY ISSUES</a></h3>

<dl>
<dt><a name="M43"><b>Unix</b></a></dt>

<dd>These commands always operate using the real user and group
identifiers, not the effective ones.</dd>
</dl>

<h3><a name="M44">SEE ALSO</a></h3>

<p><b><a href="../TclCmd/filename.htm">filename</a></b>, <b><a
href="../TclCmd/open.htm">open</a></b>, <b><a href=
"../TclCmd/close.htm">close</a></b>, <b><a href=
"../TclCmd/eof.htm">eof</a></b>, <b><a href=
"../TclCmd/gets.htm">gets</a></b>, <b><a href=
"../TclCmd/tell.htm">tell</a></b>, <b><a href=
"../TclCmd/seek.htm">seek</a></b>, <b><a href=
"../TclCmd/fblocked.htm">fblocked</a></b>, <b><a href=
"../TclCmd/flush.htm">flush</a></b></p>

<h3><a name="M45">KEYWORDS</a></h3>

<p><a href="../Keywords/A.htm#attributes">attributes</a>, <a href=
"../Keywords/C.htm#copy files">copy files</a>, <a href=
"../Keywords/D.htm#delete files">delete files</a>, <a href=
"../Keywords/D.htm#directory">directory</a>, <a href=
"../Keywords/F.htm#file">file</a>, <a href=
"../Keywords/M.htm#move files">move files</a>, <a href=
"../Keywords/N.htm#name">name</a>, <a href=
"../Keywords/R.htm#rename files">rename files</a>, <a href=
"../Keywords/S.htm#stat">stat</a></p>

<hr>
<pre>
<a href=
"../copyright.htm">Copyright</a> &copy; 1993 The Regents of the University of California.
<a href=
"../copyright.htm">Copyright</a> &copy; 1994-1996 Sun Microsystems, Inc.
<a href=
"../copyright.htm">Copyright</a> &copy; 1995-1997 Roger E. Critchlow Jr.
</pre>
</body>
</html>

