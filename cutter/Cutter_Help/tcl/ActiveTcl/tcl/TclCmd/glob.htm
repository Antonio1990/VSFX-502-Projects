<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Built-In Commands - glob manual page</title>
</head>
<body>
<table width='100%' border='0' cellspacing='0' cellpadding='0'
bgcolor='EAE2BB'>
<tr>
<td><a target='_blank' href=
'http://www.ActiveState.com/Products/ActiveTcl'><img src=
'../../images/ActiveTcl.gif' border='0' align='left' height='61'
width='64'></a> </td>
<td>
<div align='center' class='heading'>ActiveTcl User Guide</div>
</td>
<td><a target='_blank' href='http://www.ActiveState.com'><img src=
'../../images/AS_logo.gif' border='0' align='right' height='48'
width='112'></a> </td>
</tr>

<tr>
<td class='lineColour' colspan='3'></td>
</tr>
</table>

<br>
<dl>
<dd><a href="glob.htm#M2" name="L498">NAME</a> 

<dl>
<dd>glob - Return names of files that match patterns</dd>
</dl>
</dd>

<dd><a href="glob.htm#M3" name="L499">SYNOPSIS</a> 

<dl>
<dd><b>glob</b> ?<i>switches</i>? <i>pattern</i> ?<i>pattern
...</i>?</dd>
</dl>
</dd>

<dd><a href="glob.htm#M4" name="L500">DESCRIPTION</a> 

<dl>
<dd><a href="glob.htm#M5" name="L501"><b>-directory</b>
<i>directory</i></a></dd>

<dd><a href="glob.htm#M6" name="L502"><b>-join</b></a></dd>

<dd><a href="glob.htm#M7" name="L503"><b>-nocomplain</b></a></dd>

<dd><a href="glob.htm#M8" name="L504"><b>-path</b>
<i>pathPrefix</i></a></dd>

<dd><a href="glob.htm#M9" name="L505"><b>-tails</b></a></dd>

<dd><a href="glob.htm#M10" name="L506"><b>-types</b>
<i>typeList</i></a></dd>

<dd><a href="glob.htm#M11" name="L507"><b>-&nbsp;-</b></a></dd>
</dl>

<dl>
<dd><a href="glob.htm#M12" name="L508"><b>?</b></a></dd>

<dd><a href="glob.htm#M13" name="L509"><b>*</b></a></dd>

<dd><a href="glob.htm#M14" name=
"L510"><b>[</b><i>chars</i><b>]</b></a></dd>

<dd><a href="glob.htm#M15" name="L511"><b>\</b><i>x</i></a></dd>

<dd><a href="glob.htm#M16" name=
"L512"><b>{</b><i>a</i><b>,</b><i>b</i><b>,</b><i>...</i>}</a></dd>
</dl>
</dd>

<dd><a href="glob.htm#M17" name="L513">PORTABILITY ISSUES</a> 

<dl>
<dd><a href="glob.htm#M18" name="L514"><b>Windows</b></a></dd>

<dd><a href="glob.htm#M19" name="L515"><b>Macintosh</b></a></dd>
</dl>
</dd>

<dd><a href="glob.htm#M20" name="L516">SEE ALSO</a></dd>

<dd><a href="glob.htm#M21" name="L517">KEYWORDS</a></dd>
</dl>

<hr>
<h3><a name="M2">NAME</a></h3>

<p>glob - Return names of files that match patterns</p>

<h3><a name="M3">SYNOPSIS</a></h3>

<p><b>glob</b> ?<i>switches</i>? <i>pattern</i> ?<i>pattern
...</i>?<br>
</p>

<h3><a name="M4">DESCRIPTION</a></h3>

<p>This command performs file name ``globbing'' in a fashion
similar to the csh shell. It returns a list of the files whose
names match any of the <i>pattern</i> arguments.</p>

<p>If the initial arguments to <b>glob</b> start with <b>-</b> then
they are treated as switches. The following switches are currently
supported:</p>

<dl>
<dt><a name="M5"><b>-directory</b> <i>directory</i></a></dt>

<dd>Search for files which match the given patterns starting in the
given <i>directory</i>. This allows searching of directories whose
name contains glob-sensitive characters without the need to quote
such characters explicitly. This option may not be used in
conjunction with <b>-path</b>, which is used to allow searching for
complete file paths whose names may contain glob-sensitive
characters.</dd>

<dt><a name="M6"><b>-join</b></a></dt>

<dd>The remaining pattern arguments are treated as a single pattern
obtained by joining the arguments with directory separators.</dd>

<dt><a name="M7"><b>-nocomplain</b></a></dt>

<dd>Allows an empty list to be returned without error; without this
switch an error is returned if the result list would be empty.</dd>

<dt><a name="M8"><b>-path</b> <i>pathPrefix</i></a></dt>

<dd>Search for files with the given <i>pathPrefix</i> where the
rest of the name matches the given patterns. This allows searching
for files with names similar to a given file (as opposed to a
directory) even when the names contain glob-sensitive characters.
This option may not be used in conjunction with <b>-directory</b>.
For example, to find all files with the same root name as $path,
but differing extensions, you should use <b>glob -path [file
rootname $path] .*</b> which will work even if $path contains
numerous glob-sensitive characters.</dd>

<dt><a name="M9"><b>-tails</b></a></dt>

<dd>Only return the part of each file found which follows the last
directory named in any <b>-directory</b> or <b>-path</b> path
specification. Thus <b>glob -tails -directory $dir *</b> is
equivalent to <b>set pwd [pwd] ; cd $dir ; glob *; cd $pwd</b>. For
<b>-path</b> specifications, the returned names will include the
last path segment, so <b>glob -tails -path [file rootname
~/foo.tex] .*</b> will return paths like <b>foo.aux foo.bib
foo.tex</b> etc.</dd>

<dt><a name="M10"><b>-types</b> <i>typeList</i></a></dt>

<dd>Only list files or directories which match <i>typeList</i>,
where the items in the list have two forms. The first form is like
the -type option of the Unix find command: <i>b</i> (block special
file), <i>c</i> (character special file), <i>d</i> (directory),
<i>f</i> (plain file), <i>l</i> (symbolic link), <i>p</i> (named
pipe), or <i>s</i> (socket), where multiple types may be specified
in the list. <b>Glob</b> will return all files which match at least
one of the types given. 

<p>The second form specifies types where all the types given must
match. These are <i>r</i>, <i>w</i>, <i>x</i> as file permissions,
and <i>readonly</i>, <i>hidden</i> as special permission cases. On
the Macintosh, MacOS types and creators are also supported, where
any item which is four characters long is assumed to be a MacOS
type (e.g. <b><a href="../TkCmd/text.htm">TEXT</a></b>). Items
which are of the form <i>{macintosh type XXXX}</i> or <i>{macintosh
creator XXXX}</i> will match types or creators respectively.
Unrecognized types, or specifications of multiple MacOS
types/creators will signal an error.</p>

<p>The two forms may be mixed, so <b>-types {d f r w}</b> will find
all regular files OR directories that have both read AND write
permissions. The following are equivalent:</p>

<pre>
<b>glob -type d *</b>
<b>glob */</b>
</pre>

<p>except that the first case doesn't return the trailing ``/'' and
is more platform independent.</p>
</dd>

<dt><a name="M11"><b>-&nbsp;-</b></a></dt>

<dd>Marks the end of switches. The argument following this one will
be treated as a <i>pattern</i> even if it starts with a
<b>-</b>.</dd>
</dl>

<p>The <i>pattern</i> arguments may contain any of the following
special characters:</p>

<dl>
<dt><a name="M12"><b>?</b></a></dt>

<dd>Matches any single character.</dd>

<dt><a name="M13"><b>*</b></a></dt>

<dd>Matches any sequence of zero or more characters.</dd>

<dt><a name="M14"><b>[</b><i>chars</i><b>]</b></a></dt>

<dd>Matches any single character in <i>chars</i>. If <i>chars</i>
contains a sequence of the form <i>a</i><b>-</b><i>b</i> then any
character between <i>a</i> and <i>b</i> (inclusive) will
match.</dd>

<dt><a name="M15"><b>\</b><i>x</i></a></dt>

<dd>Matches the character <i>x</i>.</dd>

<dt><a name=
"M16"><b>{</b><i>a</i><b>,</b><i>b</i><b>,</b><i>...</i>}</a></dt>

<dd>Matches any of the strings <i>a</i>, <i>b</i>, etc.</dd>
</dl>

<p>On Unix, as with csh, a ``.'' at the beginning of a file's name
or just after a ``/'' must be matched explicitly or with a {}
construct, unless the ``-types hidden'' flag is given (since ``.''
at the beginning of a file's name indicates that it is hidden). On
other platforms, files beginning with a ``.'' are handled no
differently to any others, except the special directories ``.'' and
``..'' which must be matched explicitly (this is to avoid a
recursive pattern like ``glob -join * * * *'' from recursing up the
directory hierarchy as well as down). In addition, all ``/''
characters must be matched explicitly.</p>

<p>If the first character in a <i>pattern</i> is ``~'' then it
refers to the home directory for the user whose name follows the
``~''. If the ``~'' is followed immediately by ``/'' then the value
of the HOME environment variable is used.</p>

<p>The <b>glob</b> command differs from csh globbing in two ways.
First, it does not sort its result list (use the <b><a href=
"../TclCmd/lsort.htm">lsort</a></b> command if you want the list
sorted). Second, <b>glob</b> only returns the names of files that
actually exist; in csh no check for existence is made unless a
pattern contains a ?, *, or [] construct.</p>

<h3><a name="M17">PORTABILITY ISSUES</a></h3>

<p>Unlike other Tcl commands that will accept both network and
native style names (see the <b><a href=
"../TclCmd/filename.htm">filename</a></b> manual entry for details
on how native and network names are specified), the <b>glob</b>
command only accepts native names.</p>

<dl>
<dt><a name="M18"><b>Windows</b></a></dt>

<dd>For Windows UNC names, the servername and sharename components
of the path may not contain ?, *, or [] constructs. On Windows NT,
if <i>pattern</i> is of the form
``<b>~</b><i>username</i><b>@</b><i>domain</i>'' it refers to the
home directory of the user whose account information resides on the
specified NT domain server. Otherwise, user account information is
obtained from the local computer. On Windows 95 and 98, <b>glob</b>
accepts patterns like ``.../'' and ``..../'' for successively
higher up parent directories. Since the backslash character has a
special meaning to the glob command, glob patterns containing
Windows style path separators need special care. The pattern
<i>C:\\foo\\*</i> is interpreted as <i>C:\foo\*</i> where <i>\f</i>
will match the single character <i>f</i> and <i>\*</i> will match
the single character <i>*</i> and will not be interpreted as a
wildcard character. One solution to this problem is to use the Unix
style forward slash as a path separator. Windows style paths can be
converted to Unix style paths with the command <b>file join
$path</b> (or <b>file normalize $path</b> in Tcl 8.4).</dd>

<dt><a name="M19"><b>Macintosh</b></a></dt>

<dd>When using the options, <b>-directory</b>, <b>-join</b> or
<b>-path</b>, glob assumes the directory separator for the entire
pattern is the standard ``:''. When not using these options, glob
examines each pattern argument and uses ``/'' unless the pattern
contains a ``:''.</dd>
</dl>

<h3><a name="M20">SEE ALSO</a></h3>

<p><b><a href="../TclCmd/file.htm">file</a></b></p>

<h3><a name="M21">KEYWORDS</a></h3>

<p><a href="../Keywords/E.htm#exist">exist</a>, <a href=
"../Keywords/F.htm#file">file</a>, <a href=
"../Keywords/G.htm#glob">glob</a>, <a href=
"../Keywords/P.htm#pattern">pattern</a></p>

<hr>
<pre>
<a href=
"../copyright.htm">Copyright</a> &copy; 1993 The Regents of the University of California.
<a href=
"../copyright.htm">Copyright</a> &copy; 1994-1996 Sun Microsystems, Inc.
<a href=
"../copyright.htm">Copyright</a> &copy; 1995-1997 Roger E. Critchlow Jr.
</pre>
</body>
</html>

