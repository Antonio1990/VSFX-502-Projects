<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Bundled Packages - msgcat manual page</title>
</head>
<body>
<table width='100%' border='0' cellspacing='0' cellpadding='0'
bgcolor='EAE2BB'>
<tr>
<td><a target='_blank' href=
'http://www.ActiveState.com/Products/ActiveTcl'><img src=
'../../images/ActiveTcl.gif' border='0' align='left' height='61'
width='64'></a> </td>
<td>
<div align='center' class='heading'>ActiveTcl User Guide</div>
</td>
<td><a target='_blank' href='http://www.ActiveState.com'><img src=
'../../images/AS_logo.gif' border='0' align='right' height='48'
width='112'></a> </td>
</tr>

<tr>
<td class='lineColour' colspan='3'></td>
</tr>
</table>

<br>
<dl>
<dd><a href="msgcat.htm#M2" name="L810">NAME</a> 

<dl>
<dd>msgcat - Tcl message catalog</dd>
</dl>
</dd>

<dd><a href="msgcat.htm#M3" name="L811">SYNOPSIS</a> 

<dl>
<dd><b>package require Tcl 8.2</b></dd>

<dd><b>package require msgcat 1.3</b></dd>

<dd><b>::msgcat::mc</b> <i>src-string</i> ?<i>arg arg ...</i>?</dd>

<dd><b>::msgcat::mcmax ?</b><i>src-string src-string ...</i>?</dd>

<dd><b>::msgcat::mclocale</b> ?<i>newLocale</i>?</dd>

<dd><b>::msgcat::mcpreferences</b></dd>

<dd><b>::msgcat::mcload</b> <i>dirname</i></dd>

<dd><b>::msgcat::mcset</b> <i>locale src-string</i>
?<i>translate-string</i>?</dd>

<dd><b>::msgcat::mcmset</b> <i>locale src-trans-list</i></dd>

<dd><b>::msgcat::mcunknown</b> <i>locale src-string</i></dd>
</dl>
</dd>

<dd><a href="msgcat.htm#M4" name="L812">DESCRIPTION</a></dd>

<dd><a href="msgcat.htm#M5" name="L813">COMMANDS</a> 

<dl>
<dd><a href="msgcat.htm#M6" name="L814"><b>::msgcat::mc</b>
<i>src-string</i> ?<i>arg arg ...</i>?</a></dd>
</dl>

<dl>
<dd><a href="msgcat.htm#M7" name="L815"><b>::msgcat::mcmax
?</b><i>src-string src-string ...</i>?</a></dd>

<dd><a href="msgcat.htm#M8" name="L816"><b>::msgcat::mclocale</b>
?<i>newLocale</i>?</a></dd>

<dd><a href="msgcat.htm#M9" name=
"L817"><b>::msgcat::mcpreferences</b></a></dd>

<dd><a href="msgcat.htm#M10" name="L818"><b>::msgcat::mcload</b>
<i>dirname</i></a></dd>

<dd><a href="msgcat.htm#M11" name="L819"><b>::msgcat::mcset</b>
<i>locale src-string</i> ?<i>translate-string</i>?</a></dd>

<dd><a href="msgcat.htm#M12" name="L820"><b>::msgcat::mcmset</b>
<i>locale src-trans-list</i></a></dd>

<dd><a href="msgcat.htm#M13" name="L821"><b>::msgcat::mcunknown</b>
<i>locale src-string</i></a></dd>
</dl>
</dd>

<dd><a href="msgcat.htm#M14" name="L822">LOCALE
SPECIFICATION</a></dd>

<dd><a href="msgcat.htm#M15" name="L823">NAMESPACES AND MESSAGE
CATALOGS</a></dd>

<dd><a href="msgcat.htm#M16" name="L824">LOCATION AND FORMAT OF
MESSAGE FILES</a></dd>

<dd><a href="msgcat.htm#M17" name="L825">RECOMMENDED MESSAGE SETUP
FOR PACKAGES</a></dd>

<dd><a href="msgcat.htm#M18" name="L826">POSITIONAL CODES FOR
FORMAT AND SCAN COMMANDS</a></dd>

<dd><a href="msgcat.htm#M19" name="L827">CREDITS</a></dd>

<dd><a href="msgcat.htm#M20" name="L828">SEE ALSO</a></dd>

<dd><a href="msgcat.htm#M21" name="L829">KEYWORDS</a></dd>
</dl>

<hr>
<h3><a name="M2">NAME</a></h3>

<p>msgcat - Tcl message catalog</p>

<h3><a name="M3">SYNOPSIS</a></h3>

<p><b>package require Tcl 8.2</b><br>
<b>package require msgcat 1.3</b><br>
<b>::msgcat::mc</b> <i>src-string</i> ?<i>arg arg ...</i>?<br>
<b>::msgcat::mcmax ?</b><i>src-string src-string ...</i>?<br>
<b>::msgcat::mclocale</b> ?<i>newLocale</i>?<br>
<b>::msgcat::mcpreferences</b><br>
<b>::msgcat::mcload</b> <i>dirname</i><br>
<b>::msgcat::mcset</b> <i>locale src-string</i>
?<i>translate-string</i>?<br>
<b>::msgcat::mcmset</b> <i>locale src-trans-list</i><br>
<b>::msgcat::mcunknown</b> <i>locale src-string</i><br>
</p>

<h3><a name="M4">DESCRIPTION</a></h3>

<p>The <b>msgcat</b> package provides a set of functions that can
be used to manage multi-lingual user interfaces. Text strings are
defined in a ``message catalog'' which is independent from the
application, and which can be edited or localized without modifying
the application source code. New languages or locales are provided
by adding a new file to the message catalog.</p>

<p>Use of the message catalog is optional by any application or
package, but is encouraged if the application or package wishes to
be enabled for multi-lingual applications.</p>

<h3><a name="M5">COMMANDS</a></h3>

<dl>
<dt><a name="M6"><b>::msgcat::mc</b> <i>src-string</i> ?<i>arg arg
...</i>?</a></dt>

<dd>Returns a translation of <i>src-string</i> according to the
user's current locale. If additional arguments past
<i>src-string</i> are given, the <b><a href=
"../TclCmd/format.htm">format</a></b> command is used to substitute
the additional arguments in the translation of <i>src-string</i>.
<b>::msgcat::mc</b> will search the messages defined in the current
namespace for a translation of <i>src-string</i>; if none is found,
it will search in the parent of the current namespace, and so on
until it reaches the global namespace. If no translation string
exists, <b>::msgcat::mcunknown</b> is called and the string
returned from <b>::msgcat::mcunknown</b> is returned.</dd>
</dl>

<p><b>::msgcat::mc</b> is the main function used to localize an
application. Instead of using an English string directly, an
application can pass the English string through <b>::msgcat::mc</b>
and use the result. If an application is written for a single
language in this fashion, then it is easy to add support for
additional languages later simply by defining new message catalog
entries.</p>

<dl>
<dt><a name="M7"><b>::msgcat::mcmax ?</b><i>src-string src-string
...</i>?</a></dt>

<dd>Given several source strings, <b>::msgcat::mcmax</b> returns
the length of the longest translated string. This is useful when
designing localized GUIs, which may require that all buttons, for
example, be a fixed width (which will be the width of the widest
button).</dd>

<dt><a name="M8"><b>::msgcat::mclocale</b>
?<i>newLocale</i>?</a></dt>

<dd>This function sets the locale to <i>newLocale</i>. If
<i>newLocale</i> is omitted, the current locale is returned,
otherwise the current locale is set to <i>newLocale</i>. msgcat
stores and compares the locale in a case-insensitive manner, and
returns locales in lowercase. The initial locale is determined by
the locale specified in the user's environment. See <b>LOCALE
SPECIFICATION</b> below for a description of the locale string
format.</dd>

<dt><a name="M9"><b>::msgcat::mcpreferences</b></a></dt>

<dd>Returns an ordered list of the locales preferred by the user,
based on the user's language specification. The list is ordered
from most specific to least preference. The list is derived from
the current locale set in msgcat by <b>msgcat::mclocale</b>, and
cannot be set independently. For example, if the current locale is
en_US_funky, then <b>msgcat::mcpreferences</b> returns {en_US_funky
en_US en}.</dd>

<dt><a name="M10"><b>::msgcat::mcload</b> <i>dirname</i></a></dt>

<dd>Searches the specified directory for files that match the
language specifications returned by <b>::msgcat::mcpreferences</b>
(note that these are all lowercase), extended by the file extension
``.msg''. Each matching file is read in order, assuming a UTF-8
encoding. The file contents are then evaluated as a Tcl script.
This means that non-Latin characters may be present in the message
file either directly in their UTF-8 encoded form, or by use of the
backslash-u quoting recognized by Tcl evaluation. The number of
message files which matched the specification and were loaded is
returned.</dd>

<dt><a name="M11"><b>::msgcat::mcset</b> <i>locale src-string</i>
?<i>translate-string</i>?</a></dt>

<dd>Sets the translation for <i>src-string</i> to
<i>translate-string</i> in the specified <i>locale</i> and the
current namespace. If <i>translate-string</i> is not specified,
<i>src-string</i> is used for both. The function returns
<i>translate-string</i>.</dd>

<dt><a name="M12"><b>::msgcat::mcmset</b> <i>locale
src-trans-list</i></a></dt>

<dd>Sets the translation for multiple source strings in
<i>src-trans-list</i> in the specified <i>locale</i> and the
current namespace. <i>src-trans-list</i> must have an even number
of elements and is in the form {<i>src-string translate-string</i>
?<i>src-string translate-string ...</i>?} <b>msgcat::mcmset</b> can
be significantly faster than multiple invocations of
<b>msgcat::mcset</b>. The function returns the number of
translations set.</dd>

<dt><a name="M13"><b>::msgcat::mcunknown</b> <i>locale
src-string</i></a></dt>

<dd>This routine is called by <b>::msgcat::mc</b> in the case when
a translation for <i>src-string</i> is not defined in the current
locale. The default action is to return <i>src-string</i>. This
procedure can be redefined by the application, for example to log
error messages for each unknown string. The
<b>::msgcat::mcunknown</b> procedure is invoked at the same stack
context as the call to <b>::msgcat::mc</b>. The return value of
<b>::msgcat::mcunknown</b> is used as the return value for the call
to <b>::msgcat::mc</b>.</dd>
</dl>

<h3><a name="M14">LOCALE SPECIFICATION</a></h3>

<p>The locale is specified to <b>msgcat</b> by a locale string
passed to <b>::msgcat::mclocale</b>. The locale string consists of
a language code, an optional country code, and an optional
system-specific code, each separated by ``_''. The country and
language codes are specified in standards ISO-639 and ISO-3166. For
example, the locale ``en'' specifies English and ``en_US''
specifies U.S. English.</p>

<p>When the msgcat package is first loaded, the locale is
initialized according to the user's environment. The variables
<b>env(LC_ALL)</b>, <b>env(LC_MESSAGES)</b>, and <b>env(LANG)</b>
are examined in order. The first of them to have a non-empty value
is used to determine the initial locale. The value is parsed
according to the XPG4 pattern</p>

<pre>
language[_country][.codeset][@modifier]
</pre>

<p>to extract its parts. The initial locale is then set by calling
<b>msgcat::mclocale</b> with the argument</p>

<pre>
language[_country][_modifier]
</pre>

<p>On Windows, if none of those environment variables is set,
msgcat will attempt to extract locale information from the
registry. If all these attempts to discover an initial locale from
the user's environment fail, msgcat defaults to an initial locale
of ``C''.</p>

<p>When a locale is specified by the user, a ``best match'' search
is performed during string translation. For example, if a user
specifies en_GB_Funky, the locales ``en_GB_Funky'', ``en_GB'', and
``en'' are searched in order until a matching translation string is
found. If no translation string is available, then
<b>::msgcat::unknown</b> is called.</p>

<h3><a name="M15">NAMESPACES AND MESSAGE CATALOGS</a></h3>

<p>Strings stored in the message catalog are stored relative to the
namespace from which they were added. This allows multiple packages
to use the same strings without fear of collisions with other
packages. It also allows the source string to be shorter and less
prone to typographical error.</p>

<p>For example, executing the code</p>

<pre>
mcset en hello "hello from ::"
namespace eval foo {mcset en hello "hello from ::foo"}
puts [mc hello]
namespace eval foo {puts [mc hello]}
</pre>

<p>will print</p>

<pre>
hello from ::
hello from ::foo
</pre>

<p>When searching for a translation of a message, the message
catalog will search first the current namespace, then the parent of
the current namespace, and so on until the global namespace is
reached. This allows child namespaces to "inherit" messages from
their parent namespace.</p>

<p>For example, executing (in the ``en'' locale) the code</p>

<pre>
mcset en m1 ":: message1"
mcset en m2 ":: message2"
mcset en m3 ":: message3"
namespace eval ::foo {
    mcset en m2 "::foo message2"
    mcset en m3 "::foo message3"
}
namespace eval ::foo::bar {
    mcset en m3 "::foo::bar message3"
}
puts "[mc m1]; [mc m2]; [mc m3]"
namespace eval ::foo {puts "[mc m1]; [mc m2]; [mc m3]"}
namespace eval ::foo::bar {puts "[mc m1]; [mc m2]; [mc m3]"}
</pre>

<p>will print</p>

<pre>
:: message1; :: message2; :: message3
:: message1; ::foo message2; ::foo message3
:: message1; ::foo message2; ::foo::bar message3
</pre>

<h3><a name="M16">LOCATION AND FORMAT OF MESSAGE FILES</a></h3>

<p>Message files can be located in any directory, subject to the
following conditions:</p>

<dl>
<dt>[1]</dt>

<dd>All message files for a package are in the same directory.</dd>

<dt>[2]</dt>

<dd>The message file name is a msgcat locale specifier (all
lowercase) followed by ``.msg''. For example: 

<pre>
es.msg    -- spanish
en_gb.msg -- United Kingdom English
</pre>
</dd>

<dt>[3]</dt>

<dd>The file contains a series of calls to <b>mcset</b> and
<b>mcmset</b>, setting the necessary translation strings for the
language, likely enclosed in a <b>namespace eval</b> so that all
source strings are tied to the namespace of the package. For
example, a short <b>es.msg</b> might contain: 

<pre>
namespace eval ::mypackage {
    ::msgcat::mcset es "Free Beer!" "Cerveza Gracias!"
}
</pre>
</dd>
</dl>

<h3><a name="M17">RECOMMENDED MESSAGE SETUP FOR PACKAGES</a></h3>

<p>If a package is installed into a subdirectory of the
<b>tcl_pkgPath</b> and loaded via <b>package require</b>, the
following procedure is recommended.</p>

<dl>
<dt>[1]</dt>

<dd>During package installation, create a subdirectory <b>msgs</b>
under your package directory.</dd>

<dt>[2]</dt>

<dd>Copy your *.msg files into that directory.</dd>

<dt>[3]</dt>

<dd>Add the following command to your package initialization
script: 

<pre>
# load language files, stored in msgs subdirectory
::msgcat::mcload [file join [file dirname [info script]] msgs]
</pre>
</dd>
</dl>

<h3><a name="M18">POSITIONAL CODES FOR FORMAT AND SCAN
COMMANDS</a></h3>

<p>It is possible that a message string used as an argument to
<b><a href="../TclCmd/format.htm">format</a></b> might have
positionally dependent parameters that might need to be
repositioned. For example, it might be syntactically desirable to
rearrange the sentence structure while translating.</p>

<pre>
format "We produced %d units in location %s" $num $city
format "In location %s we produced %d units" $city $num
</pre>

<p>This can be handled by using the positional parameters:</p>

<pre>
format "We produced %1\$d units in location %2\$s" $num $city
format "In location %2\$s we produced %1\$d units" $num $city
</pre>

<p>Similarly, positional parameters can be used with <b><a href=
"../TclCmd/scan.htm">scan</a></b> to extract values from
internationalized strings.</p>

<h3><a name="M19">CREDITS</a></h3>

<p>The message catalog code was developed by Mark Harrison.</p>

<h3><a name="M20">SEE ALSO</a></h3>

<p><b><a href="../TclCmd/format.htm">format</a></b>, <b><a href=
"../TclCmd/scan.htm">scan</a></b>, <b><a href=
"../TclCmd/namespace.htm">namespace</a></b>, <b><a href=
"../TclCmd/package.htm">package</a></b></p>

<h3><a name="M21">KEYWORDS</a></h3>

<p><a href=
"../Keywords/I.htm#internationalization">internationalization</a>,
<a href="../Keywords/I.htm#i18n">i18n</a>, <a href=
"../Keywords/L.htm#localization">localization</a>, <a href=
"../Keywords/L.htm#l10n">l10n</a>, <a href=
"../Keywords/M.htm#message">message</a>, <a href=
"../Keywords/T.htm#text">text</a>, <a href=
"../Keywords/T.htm#translation">translation</a></p>

<hr>
<pre>
<a href="../copyright.htm">Copyright</a> &copy; 1998 Mark Harrison.
<a href=
"../copyright.htm">Copyright</a> &copy; 1995-1997 Roger E. Critchlow Jr.
</pre>
</body>
</html>

