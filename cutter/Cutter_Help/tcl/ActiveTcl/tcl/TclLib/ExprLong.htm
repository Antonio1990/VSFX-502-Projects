<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Library Procedures - Tcl_ExprLong manual page</title>
</head>
<body>
<table width='100%' border='0' cellspacing='0' cellpadding='0'
bgcolor='EAE2BB'>
<tr>
<td><a target='_blank' href=
'http://www.ActiveState.com/Products/ActiveTcl'><img src=
'../../images/ActiveTcl.gif' border='0' align='left' height='61'
width='64'></a> </td>
<td>
<div align='center' class='heading'>ActiveTcl User Guide</div>
</td>
<td><a target='_blank' href='http://www.ActiveState.com'><img src=
'../../images/AS_logo.gif' border='0' align='right' height='48'
width='112'></a> </td>
</tr>

<tr>
<td class='lineColour' colspan='3'></td>
</tr>
</table>

<br>
<h3><a name="M2">NAME</a></h3>

<p>Tcl_ExprLong, Tcl_ExprDouble, Tcl_ExprBoolean, Tcl_ExprString -
evaluate an expression</p>

<h3><a name="M3">SYNOPSIS</a></h3>

<p><b>#include &lt;tcl.h&gt;</b><br>
int<br>
<b>Tcl_ExprLong</b>(<i>interp, string, longPtr</i>)<br>
int<br>
<b>Tcl_ExprDouble</b>(<i>interp, string, doublePtr</i>)<br>
int<br>
<b>Tcl_ExprBoolean</b>(<i>interp, string, booleanPtr</i>)<br>
int<br>
<b>Tcl_ExprString</b>(<i>interp, string</i>)<br>
</p>

<h3><a name="M4">ARGUMENTS</a></h3>

<dl>
<dt><a href="../TclLib/Interp.htm">Tcl_Interp</a> <b>*interp</b>
(in)</dt>

<dd>Interpreter in whose context to evaluate <i>string</i> or
<i>objPtr</i>.</dd>

<dt>CONST char <b>*string</b> (in)</dt>

<dd>Expression to be evaluated.</dd>

<dt>long <b>*longPtr</b> (out)</dt>

<dd>Pointer to location in which to store the integer value of the
expression.</dd>

<dt>int <b>*doublePtr</b> (out)</dt>

<dd>Pointer to location in which to store the floating-point value
of the expression.</dd>

<dt>int <b>*booleanPtr</b> (out)</dt>

<dd>Pointer to location in which to store the 0/1 boolean value of
the expression.</dd>
</dl>

<h3><a name="M5">DESCRIPTION</a></h3>

<p>These four procedures all evaluate the expression given by the
<i>string</i> argument and return the result in one of four
different forms. The expression can have any of the forms accepted
by the <b><a href="../TclCmd/expr.htm">expr</a></b> command. Note
that these procedures have been largely replaced by the
object-based procedures <b><a href=
"../TclLib/ExprLongObj.htm">Tcl_ExprLongObj</a></b>, <b><a href=
"../TclLib/ExprLongObj.htm">Tcl_ExprDoubleObj</a></b>, <b><a href=
"../TclLib/ExprLongObj.htm">Tcl_ExprBooleanObj</a></b>, and <b><a
href="../TclLib/ExprLongObj.htm">Tcl_ExprObj</a></b>. Those
object-based procedures evaluate an expression held in a Tcl object
instead of a string. The object argument can retain an internal
representation that is more efficient to execute.</p>

<p>The <i>interp</i> argument refers to an interpreter used to
evaluate the expression (e.g. for variables and nested Tcl
commands) and to return error information.</p>

<p>For all of these procedures the return value is a standard Tcl
result: <b>TCL_OK</b> means the expression was successfully
evaluated, and <b>TCL_ERROR</b> means that an error occurred while
evaluating the expression. If <b>TCL_ERROR</b> is returned then the
interpreter's result will hold a message describing the error. If
an error occurs while executing a Tcl command embedded in the
expression then that error will be returned.</p>

<p>If the expression is successfully evaluated, then its value is
returned in one of four forms, depending on which procedure is
invoked. <b>Tcl_ExprLong</b> stores an integer value at
<i>*longPtr</i>. If the expression's actual value is a
floating-point number, then it is truncated to an integer. If the
expression's actual value is a non-numeric string then an error is
returned.</p>

<p><b>Tcl_ExprDouble</b> stores a floating-point value at
<i>*doublePtr</i>. If the expression's actual value is an integer,
it is converted to floating-point. If the expression's actual value
is a non-numeric string then an error is returned.</p>

<p><b>Tcl_ExprBoolean</b> stores a 0/1 integer value at
<i>*booleanPtr</i>. If the expression's actual value is an integer
or floating-point number, then they store 0 at <i>*booleanPtr</i>
if the value was zero and 1 otherwise. If the expression's actual
value is a non-numeric string then it must be one of the values
accepted by <b><a href=
"../TclLib/GetInt.htm">Tcl_GetBoolean</a></b> such as ``yes'' or
``no'', or else an error occurs.</p>

<p><b>Tcl_ExprString</b> returns the value of the expression as a
string stored in the interpreter's result. If the expression's
actual value is an integer then <b>Tcl_ExprString</b> converts it
to a string using <b>sprintf</b> with a ``%d'' converter. If the
expression's actual value is a floating-point number, then
<b>Tcl_ExprString</b> calls <b><a href=
"../TclLib/PrintDbl.htm">Tcl_PrintDouble</a></b> to convert it to a
string.</p>

<h3><a name="M6">SEE ALSO</a></h3>

<p><b><a href="../TclLib/ExprLongObj.htm">Tcl_ExprLongObj</a></b>,
<b><a href="../TclLib/ExprLongObj.htm">Tcl_ExprDoubleObj</a></b>,
<b><a href="../TclLib/ExprLongObj.htm">Tcl_ExprBooleanObj</a></b>,
<b><a href="../TclLib/ExprLongObj.htm">Tcl_ExprObj</a></b></p>

<h3><a name="M7">KEYWORDS</a></h3>

<p><a href="../Keywords/B.htm#boolean">boolean</a>, <a href=
"../Keywords/D.htm#double">double</a>, <a href=
"../Keywords/E.htm#evaluate">evaluate</a>, <a href=
"../Keywords/E.htm#expression">expression</a>, <a href=
"../Keywords/I.htm#integer">integer</a>, <a href=
"../Keywords/O.htm#object">object</a>, <a href=
"../Keywords/S.htm#string">string</a></p>

<hr>
<pre>
<a href=
"../copyright.htm">Copyright</a> &copy; 1989-1993 The Regents of the University of California.
<a href=
"../copyright.htm">Copyright</a> &copy; 1994-1997 Sun Microsystems, Inc.
<a href=
"../copyright.htm">Copyright</a> &copy; 1995-1997 Roger E. Critchlow Jr.
</pre>
</body>
</html>

