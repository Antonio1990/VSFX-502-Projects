<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tcl Library Procedures - Tcl_GetIndexFromObj manual
page</title>
</head>
<body>
<table width='100%' border='0' cellspacing='0' cellpadding='0'
bgcolor='EAE2BB'>
<tr>
<td><a target='_blank' href=
'http://www.ActiveState.com/Products/ActiveTcl'><img src=
'../../images/ActiveTcl.gif' border='0' align='left' height='61'
width='64'></a> </td>
<td>
<div align='center' class='heading'>ActiveTcl User Guide</div>
</td>
<td><a target='_blank' href='http://www.ActiveState.com'><img src=
'../../images/AS_logo.gif' border='0' align='right' height='48'
width='112'></a> </td>
</tr>

<tr>
<td class='lineColour' colspan='3'></td>
</tr>
</table>

<br>
<h3><a name="M2">NAME</a></h3>

<p>Tcl_GetIndexFromObj, Tcl_GetIndexFromObjStruct - lookup string
in table of keywords</p>

<h3><a name="M3">SYNOPSIS</a></h3>

<p><b>#include &lt;tcl.h&gt;</b><br>
int<br>
<b>Tcl_GetIndexFromObj</b>(<i>interp, objPtr, tablePtr, msg,
flags,<br>
indexPtr</i>)<br>
int<br>
<b>Tcl_GetIndexFromObjStruct</b>(<i>interp, objPtr, structTablePtr,
offset,<br>
msg, flags, indexPtr</i>)<br>
</p>

<h3><a name="M4">ARGUMENTS</a></h3>

<dl>
<dt><a href="../TclLib/Interp.htm">Tcl_Interp</a> <b>*interp</b>
(in)</dt>

<dd>Interpreter to use for error reporting; if NULL, then no
message is provided on errors.</dd>

<dt>Tcl_Obj <b>*objPtr</b> (in/out)</dt>

<dd>The string value of this object is used to search through
<i>tablePtr</i>. The internal representation is modified to hold
the index of the matching table entry.</dd>

<dt>CONST char <b>**tablePtr</b> (in)</dt>

<dd>An array of null-terminated ASCII strings. The end of the array
is marked by a NULL string pointer.</dd>

<dt>CONST VOID <b>*structTablePtr</b> (in)</dt>

<dd>An array of arbitrary type, typically some <b>struct</b> type.
The first member of the structure must be a null-terminated ASCII
string. The size of the structure is given by <i>offset</i>.</dd>

<dt>int <b>offset</b> (in)</dt>

<dd>The offset to add to structTablePtr to get to the next entry.
The end of the array is marked by a NULL string pointer.</dd>

<dt>CONST char <b>*msg</b> (in)</dt>

<dd>Null-terminated string describing what is being looked up, such
as <b><a href="../TkCmd/option.htm">option</a></b>. This string is
included in error messages.</dd>

<dt>int <b>flags</b> (in)</dt>

<dd>OR-ed combination of bits providing additional information for
operation. The only bit that is currently defined is
<b>TCL_EXACT</b>.</dd>

<dt>int <b>*indexPtr</b> (out)</dt>

<dd>The index of the string in <i>tablePtr</i> that matches the
value of <i>objPtr</i> is returned here.</dd>
</dl>

<h3><a name="M5">DESCRIPTION</a></h3>

<p>This procedure provides an efficient way for looking up
keywords, switch names, option names, and similar things where the
value of an object must be one of a predefined set of values.
<i>ObjPtr</i> is compared against each of the strings in
<i>tablePtr</i> to find a match. A match occurs if <i>objPtr</i>'s
string value is identical to one of the strings in <i>tablePtr</i>,
or if it is a unique abbreviation for exactly one of the strings in
<i>tablePtr</i> and the <b>TCL_EXACT</b> flag was not specified; in
either case the index of the matching entry is stored at
<i>*indexPtr</i> and TCL_OK is returned.</p>

<p>If there is no matching entry, TCL_ERROR is returned and an
error message is left in <i>interp</i>'s result if <i>interp</i>
isn't NULL. <i>Msg</i> is included in the error message to indicate
what was being looked up. For example, if <i>msg</i> is <b><a href=
"../TkCmd/option.htm">option</a></b> the error message will have a
form like <b>bad option "firt": must be first, second, or
third</b>.</p>

<p>If <b>Tcl_GetIndexFromObj</b> completes successfully it modifies
the internal representation of <i>objPtr</i> to hold the address of
the table and the index of the matching entry. If
<b>Tcl_GetIndexFromObj</b> is invoked again with the same
<i>objPtr</i> and <i>tablePtr</i> arguments (e.g. during a
reinvocation of a Tcl command), it returns the matching index
immediately without having to redo the lookup operation. Note:
<b>Tcl_GetIndexFromObj</b> assumes that the entries in
<i>tablePtr</i> are static: they must not change between
invocations. If the value of <i>objPtr</i> is the empty string,
<b>Tcl_GetIndexFromObj</b> will treat it as a non-matching value
and return TCL_ERROR.</p>

<p><b>Tcl_GetIndexFromObjStruct</b> works just like
<b>Tcl_GetIndexFromObj</b>, except that instead of treating
<i>tablePtr</i> as an array of string pointers, it treats it as the
first in a series of string ptrs that are spaced apart by
<i>offset</i> bytes. This is particularly useful when processing
things like <b>Tk_ConfigurationSpec</b>, whose string keys are in
the same place in each of several array elements.</p>

<h3><a name="M6">SEE ALSO</a></h3>

<p><b><a href=
"../TclLib/WrongNumArgs.htm">Tcl_WrongNumArgs</a></b></p>

<h3><a name="M7">KEYWORDS</a></h3>

<p><a href="../Keywords/I.htm#index">index</a>, <a href=
"../Keywords/O.htm#object">object</a>, <a href=
"../Keywords/T.htm#table lookup">table lookup</a></p>

<hr>
<pre>
<a href=
"../copyright.htm">Copyright</a> &copy; 1997 Sun Microsystems, Inc.
<a href=
"../copyright.htm">Copyright</a> &copy; 1995-1997 Roger E. Critchlow Jr.
</pre>
</body>
</html>

