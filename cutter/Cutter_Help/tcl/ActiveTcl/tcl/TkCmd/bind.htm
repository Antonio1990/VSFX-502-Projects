<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tk Built-In Commands - bind manual page</title>
</head>
<body>
<table width='100%' border='0' cellspacing='0' cellpadding='0'
bgcolor='EAE2BB'>
<tr>
<td><a target='_blank' href=
'http://www.ActiveState.com/Products/ActiveTcl'><img src=
'../../images/ActiveTcl.gif' border='0' align='left' height='61'
width='64'></a> </td>
<td>
<div align='center' class='heading'>ActiveTcl User Guide</div>
</td>
<td><a target='_blank' href='http://www.ActiveState.com'><img src=
'../../images/AS_logo.gif' border='0' align='right' height='48'
width='112'></a> </td>
</tr>

<tr>
<td class='lineColour' colspan='3'></td>
</tr>
</table>

<br>
<dl>
<dd><a href="bind.htm#M2" name="L51">NAME</a> 

<dl>
<dd>bind - Arrange for X events to invoke Tcl scripts</dd>
</dl>
</dd>

<dd><a href="bind.htm#M3" name="L52">SYNOPSIS</a> 

<dl>
<dd><b>bind</b> <i>tag</i></dd>

<dd><b>bind</b> <i>tag sequence</i></dd>

<dd><b>bind</b> <i>tag sequence script</i></dd>

<dd><b>bind</b> <i>tag sequence</i> <b>+</b><i>script</i></dd>
</dl>
</dd>

<dd><a href="bind.htm#M4" name="L53">INTRODUCTION</a></dd>

<dd><a href="bind.htm#M5" name="L54">EVENT PATTERNS</a></dd>

<dd><a href="bind.htm#M6" name="L55">MODIFIERS</a></dd>

<dd><a href="bind.htm#M7" name="L56">EVENT TYPES</a> 

<dl>
<dd><a href="bind.htm#M8" name="L57"><b>Activate</b></a></dd>

<dd><a href="bind.htm#M9" name="L58"><b>Deactivate</b></a></dd>

<dd><a href="bind.htm#M10" name="L59"><b>MouseWheel</b></a></dd>
</dl>
</dd>

<dd><a href="bind.htm#M11" name="L60">BINDING SCRIPTS AND
SUBSTITUTIONS</a> 

<dl>
<dd><a href="bind.htm#M12" name="L61"><b>%%</b></a></dd>

<dd><a href="bind.htm#M13" name="L62"><b>%#</b></a></dd>

<dd><a href="bind.htm#M14" name="L63"><b>%a</b></a></dd>

<dd><a href="bind.htm#M15" name="L64"><b>%b</b></a></dd>

<dd><a href="bind.htm#M16" name="L65"><b>%c</b></a></dd>

<dd><a href="bind.htm#M17" name="L66"><b>%d</b></a></dd>

<dd><a href="bind.htm#M18" name="L67"><b>%f</b></a></dd>

<dd><a href="bind.htm#M19" name="L68"><b>%h</b></a></dd>

<dd><a href="bind.htm#M20" name="L69"><b>%i</b></a></dd>

<dd><a href="bind.htm#M21" name="L70"><b>%k</b></a></dd>

<dd><a href="bind.htm#M22" name="L71"><b>%m</b></a></dd>

<dd><a href="bind.htm#M23" name="L72"><b>%o</b></a></dd>

<dd><a href="bind.htm#M24" name="L73"><b>%p</b></a></dd>

<dd><a href="bind.htm#M25" name="L74"><b>%s</b></a></dd>

<dd><a href="bind.htm#M26" name="L75"><b>%t</b></a></dd>

<dd><a href="bind.htm#M27" name="L76"><b>%w</b></a></dd>

<dd><a href="bind.htm#M28" name="L77"><b>%x</b></a></dd>

<dd><a href="bind.htm#M29" name="L78"><b>%y</b></a></dd>

<dd><a href="bind.htm#M30" name="L79"><b>%A</b></a></dd>

<dd><a href="bind.htm#M31" name="L80"><b>%B</b></a></dd>

<dd><a href="bind.htm#M32" name="L81"><b>%D</b></a></dd>

<dd><a href="bind.htm#M33" name="L82"><b>%E</b></a></dd>

<dd><a href="bind.htm#M34" name="L83"><b>%K</b></a></dd>

<dd><a href="bind.htm#M35" name="L84"><b>%N</b></a></dd>

<dd><a href="bind.htm#M36" name="L85"><b>%R</b></a></dd>

<dd><a href="bind.htm#M37" name="L86"><b>%S</b></a></dd>

<dd><a href="bind.htm#M38" name="L87"><b>%T</b></a></dd>

<dd><a href="bind.htm#M39" name="L88"><b>%W</b></a></dd>

<dd><a href="bind.htm#M40" name="L89"><b>%X</b></a></dd>

<dd><a href="bind.htm#M41" name="L90"><b>%Y</b></a></dd>
</dl>
</dd>

<dd><a href="bind.htm#M42" name="L91">MULTIPLE MATCHES</a></dd>

<dd><a href="bind.htm#M43" name="L92">MULTI-EVENT SEQUENCES AND
IGNORED EVENTS</a></dd>

<dd><a href="bind.htm#M44" name="L93">ERRORS</a></dd>

<dd><a href="bind.htm#M45" name="L94">SEE ALSO</a></dd>

<dd><a href="bind.htm#M46" name="L95">KEYWORDS</a></dd>
</dl>

<hr>
<h3><a name="M2">NAME</a></h3>

<p>bind - Arrange for X events to invoke Tcl scripts</p>

<h3><a name="M3">SYNOPSIS</a></h3>

<p><b>bind</b> <i>tag</i><br>
<b>bind</b> <i>tag sequence</i><br>
<b>bind</b> <i>tag sequence script</i><br>
<b>bind</b> <i>tag sequence</i> <b>+</b><i>script</i><br>
</p>

<h3><a name="M4">INTRODUCTION</a></h3>

<p>The <b>bind</b> command associates Tcl scripts with X events. If
all three arguments are specified, <b>bind</b> will arrange for
<i>script</i> (a Tcl script) to be evaluated whenever the event(s)
given by <i>sequence</i> occur in the window(s) identified by
<i>tag</i>. If <i>script</i> is prefixed with a ``+'', then it is
appended to any existing binding for <i>sequence</i>; otherwise
<i>script</i> replaces any existing binding. If <i>script</i> is an
empty string then the current binding for <i>sequence</i> is
destroyed, leaving <i>sequence</i> unbound. In all of the cases
where a <i>script</i> argument is provided, <b>bind</b> returns an
empty string.</p>

<p>If <i>sequence</i> is specified without a <i>script</i>, then
the script currently bound to <i>sequence</i> is returned, or an
empty string is returned if there is no binding for
<i>sequence</i>. If neither <i>sequence</i> nor <i>script</i> is
specified, then the return value is a list whose elements are all
the sequences for which there exist bindings for <i>tag</i>.</p>

<p>The <i>tag</i> argument determines which window(s) the binding
applies to. If <i>tag</i> begins with a dot, as in <b>.a.b.c</b>,
then it must be the path name for a window; otherwise it may be an
arbitrary string. Each window has an associated list of tags, and a
binding applies to a particular window if its tag is among those
specified for the window. Although the <b><a href=
"../TkCmd/bindtags.htm">bindtags</a></b> command may be used to
assign an arbitrary set of binding tags to a window, the default
binding tags provide the following behavior:</p>

<dl>
<dd>If a tag is the name of an internal window the binding applies
to that window. 

<p>If the tag is the name of a toplevel window the binding applies
to the toplevel window and all its internal windows.</p>

<p>If the tag is the name of a class of widgets, such as <b><a
href="../TkCmd/button.htm">Button</a></b>, the binding applies to
all widgets in that class;</p>

<p>If <i>tag</i> has the value <b>all</b>, the binding applies to
all windows in the application.</p>
</dd>
</dl>

<h3><a name="M5">EVENT PATTERNS</a></h3>

<p>The <i>sequence</i> argument specifies a sequence of one or more
event patterns, with optional white space between the patterns.
Each event pattern may take one of three forms. In the simplest
case it is a single printing ASCII character, such as <b>a</b> or
<b>[</b>. The character may not be a space character or the
character <b>&lt;</b>. This form of pattern matches a
<b>KeyPress</b> event for the particular character. The second form
of pattern is longer but more general. It has the following
syntax:</p>

<pre>
<b>&lt;</b><i>modifier-modifier-type-detail</i><b>&gt;</b>
</pre>

<p>The entire event pattern is surrounded by angle brackets. Inside
the angle brackets are zero or more modifiers, an event type, and
an extra piece of information (<i>detail</i>) identifying a
particular button or keysym. Any of the fields may be omitted, as
long as at least one of <i>type</i> and <i>detail</i> is present.
The fields must be separated by white space or dashes.</p>

<p>The third form of pattern is used to specify a user-defined,
named virtual event. It has the following syntax:</p>

<pre>
<b>&lt;&lt;</b><i>name</i><b>&gt;&gt;</b>
</pre>

<p>The entire virtual event pattern is surrounded by double angle
brackets. Inside the angle brackets is the user-defined name of the
virtual event. Modifiers, such as <b>Shift</b> or <b>Control</b>,
may not be combined with a virtual event to modify it. Bindings on
a virtual event may be created before the virtual event is defined,
and if the definition of a virtual event changes dynamically, all
windows bound to that virtual event will respond immediately to the
new definition.</p>

<h3><a name="M6">MODIFIERS</a></h3>

<p>Modifiers consist of any of the following values:</p>

<pre>
<b>Control</b> <b>Mod2, M2</b>
<b>Shift</b>    <b>Mod3, M3</b> 
<b>Lock</b> <b>Mod4, M4</b>
<b>Button1, B1</b>  <b>Mod5, M5</b> 
<b>Button2, B2</b>  <b>Meta, M</b>
<b>Button3, B3</b>  <b>Alt</b>
<b>Button4, B4</b>  <b>Double</b>
<b>Button5, B5</b>  <b>Triple</b>
<b>Mod1, M1</b> <b>Quadruple</b>
</pre>

<p>Where more than one value is listed, separated by commas, the
values are equivalent. Most of the modifiers have the obvious X
meanings. For example, <b>Button1</b> requires that button 1 be
depressed when the event occurs. For a binding to match a given
event, the modifiers in the event must include all of those
specified in the event pattern. An event may also contain
additional modifiers not specified in the binding. For example, if
button 1 is pressed while the shift and control keys are down, the
pattern <b>&lt;Control-Button-1&gt;</b> will match the event, but
<b>&lt;Mod1-Button-1&gt;</b> will not. If no modifiers are
specified, then any combination of modifiers may be present in the
event.</p>

<p><b>Meta</b> and <b>M</b> refer to whichever of the <b>M1</b>
through <b>M5</b> modifiers is associated with the meta key(s) on
the keyboard (keysyms <b>Meta_R</b> and <b>Meta_L</b>). If there
are no meta keys, or if they are not associated with any modifiers,
then <b>Meta</b> and <b>M</b> will not match any events. Similarly,
the <b>Alt</b> modifier refers to whichever modifier is associated
with the alt key(s) on the keyboard (keysyms <b>Alt_L</b> and
<b>Alt_R</b>).</p>

<p>The <b>Double</b>, <b>Triple</b> and <b>Quadruple</b> modifiers
are a convenience for specifying double mouse clicks and other
repeated events. They cause a particular event pattern to be
repeated 2, 3 or 4 times, and also place a time and space
requirement on the sequence: for a sequence of events to match a
<b>Double</b>, <b>Triple</b> or <b>Quadruple</b> pattern, all of
the events must occur close together in time and without
substantial mouse motion in between. For example,
<b>&lt;Double-Button-1&gt;</b> is equivalent to
<b>&lt;Button-1&gt;&lt;Button-1&gt;</b> with the extra time and
space requirement.</p>

<h3><a name="M7">EVENT TYPES</a></h3>

<p>The <i>type</i> field may be any of the standard X event types,
with a few extra abbreviations. The <i>type</i> field will also
accept a couple non-standard X event types that were added to
better support the Macintosh and Windows platforms. Below is a list
of all the valid types; where two names appear together, they are
synonyms.</p>

<pre>
<b>Activate    Destroy Map
ButtonPress, Button Enter   MapRequest
ButtonRelease   Expose  Motion
Circulate   FocusIn MouseWheel  
CirculateRequest    FocusOut    Property
Colormap    Gravity Reparent
Configure   KeyPress, Key   ResizeRequest
ConfigureRequest    KeyRelease  Unmap
Create  Leave   Visibility
Deactivate</b>
</pre>

<p>Most of the above events have the same fields and behaviors as
events in the X Windowing system. You can find more detailed
descriptions of these events in any X window programming book. A
couple of the events are extensions to the X event system to
support features unique to the Macintosh and Windows platforms. We
provide a little more detail on these events here. These
include:</p>

<dl>
<dt><a name="M8"><b>Activate</b></a></dt>

<dt><a name="M9"><b>Deactivate</b></a></dt>

<dd>These two events are sent to every sub-window of a toplevel
when they change state. In addition to the focus Window, the
Macintosh platform and Windows platforms have a notion of an active
window (which often has but is not required to have the focus). On
the Macintosh, widgets in the active window have a different
appearance than widgets in deactive windows. The <b>Activate</b>
event is sent to all the sub-windows in a toplevel when it changes
from being deactive to active. Likewise, the <b>Deactive</b> event
is sent when the window's state changes from active to deactive.
There are no useful percent substitutions you would make when
binding to these events.</dd>

<dt><a name="M10"><b>MouseWheel</b></a></dt>

<dd>Some mice on the Windows platform support a mouse wheel which
is used for scrolling documents without using the scrollbars. By
rolling the wheel, the system will generate <b>MouseWheel</b>
events that the application can use to scroll. Like <b>Key</b>
events the event is always routed to the window that currently has
focus. When the event is received you can use the <b>%D</b>
substitution to get the <i>delta</i> field for the event which is a
integer value of motion that the mouse wheel has moved. The
smallest value for which the system will report is defined by the
OS. On Windows 95 &amp; 98 machines this value is at least 120
before it is reported. However, higher resolution devices may be
available in the future. The sign of the value determines which
direction your widget should scroll. Positive values should scroll
up and negative values should scroll down.</dd>
</dl>

<p>The last part of a long event specification is <i>detail</i>. In
the case of a <b>ButtonPress</b> or <b>ButtonRelease</b> event, it
is the number of a button (1-5). If a button number is given, then
only an event on that particular button will match; if no button
number is given, then an event on any button will match. Note:
giving a specific button number is different than specifying a
button modifier; in the first case, it refers to a button being
pressed or released, while in the second it refers to some other
button that is already depressed when the matching event occurs. If
a button number is given then <i>type</i> may be omitted: if will
default to <b>ButtonPress</b>. For example, the specifier
<b>&lt;1&gt;</b> is equivalent to <b>&lt;ButtonPress-1&gt;</b>.</p>

<p>If the event type is <b>KeyPress</b> or <b>KeyRelease</b>, then
<i>detail</i> may be specified in the form of an X keysym. Keysyms
are textual specifications for particular keys on the keyboard;
they include all the alphanumeric ASCII characters (e.g. ``a'' is
the keysym for the ASCII character ``a''), plus descriptions for
non-alphanumeric characters (``comma'' is the keysym for the comma
character), plus descriptions for all the non-ASCII keys on the
keyboard (``Shift_L'' is the keysm for the left shift key, and
``F1'' is the keysym for the F1 function key, if it exists). The
complete list of keysyms is not presented here; it is available in
other X documentation and may vary from system to system. If
necessary, you can use the <b>%K</b> notation described below to
print out the keysym name for a particular key. If a keysym
<i>detail</i> is given, then the <i>type</i> field may be omitted;
it will default to <b>KeyPress</b>. For example,
<b>&lt;Control-comma&gt;</b> is equivalent to
<b>&lt;Control-KeyPress-comma&gt;</b>.</p>

<h3><a name="M11">BINDING SCRIPTS AND SUBSTITUTIONS</a></h3>

<p>The <i>script</i> argument to <b>bind</b> is a Tcl script, which
will be executed whenever the given event sequence occurs.
<i>Command</i> will be executed in the same interpreter that the
<b>bind</b> command was executed in, and it will run at global
level (only global variables will be accessible). If <i>script</i>
contains any <b>%</b> characters, then the script will not be
executed directly. Instead, a new script will be generated by
replacing each <b>%</b>, and the character following it, with
information from the current event. The replacement depends on the
character following the <b>%</b>, as defined in the list below.
Unless otherwise indicated, the replacement string is the decimal
value of the given field from the current event. Some of the
substitutions are only valid for certain types of events; if they
are used for other types of events the value substituted is
undefined.</p>

<dl>
<dt><a name="M12"><b>%%</b></a></dt>

<dd>Replaced with a single percent.</dd>

<dt><a name="M13"><b>%#</b></a></dt>

<dd>The number of the last client request processed by the server
(the <i>serial</i> field from the event). Valid for all event
types.</dd>

<dt><a name="M14"><b>%a</b></a></dt>

<dd>The <i>above</i> field from the event, formatted as a
hexadecimal number. Valid only for <b>Configure</b> events.</dd>

<dt><a name="M15"><b>%b</b></a></dt>

<dd>The number of the button that was pressed or released. Valid
only for <b>ButtonPress</b> and <b>ButtonRelease</b> events.</dd>

<dt><a name="M16"><b>%c</b></a></dt>

<dd>The <i>count</i> field from the event. Valid only for
<b>Expose</b> events.</dd>

<dt><a name="M17"><b>%d</b></a></dt>

<dd>The <i>detail</i> field from the event. The <b>%d</b> is
replaced by a string identifying the detail. For <b>Enter</b>,
<b>Leave</b>, <b>FocusIn</b>, and <b>FocusOut</b> events, the
string will be one of the following: 

<pre>
<b>NotifyAncestor  NotifyNonlinearVirtual
NotifyDetailNone    NotifyPointer
NotifyInferior  NotifyPointerRoot
NotifyNonlinear NotifyVirtual</b>
</pre>

<p>For <b>ConfigureRequest</b> events, the string will be one
of:</p>

<pre>
<b>Above   Opposite
Below   None
BottomIf    TopIf</b>
</pre>

<p>For events other than these, the substituted string is
undefined.</p>
</dd>

<dt><a name="M18"><b>%f</b></a></dt>

<dd>The <i>focus</i> field from the event (<b>0</b> or <b>1</b>).
Valid only for <b>Enter</b> and <b>Leave</b> events.</dd>

<dt><a name="M19"><b>%h</b></a></dt>

<dd>The <i>height</i> field from the event. Valid for the
<b>Configure</b>, <b>ConfigureRequest</b>, <b>Create</b>,
<b>ResizeRequest</b>, and <b>Expose</b> events.</dd>

<dt><a name="M20"><b>%i</b></a></dt>

<dd>The <i>window</i> field from the event, represented as a
hexadecimal integer.</dd>

<dt><a name="M21"><b>%k</b></a></dt>

<dd>The <i>keycode</i> field from the event. Valid only for
<b>KeyPress</b> and <b>KeyRelease</b> events.</dd>

<dt><a name="M22"><b>%m</b></a></dt>

<dd>The <i>mode</i> field from the event. The substituted string is
one of <b>NotifyNormal</b>, <b>NotifyGrab</b>, <b>NotifyUngrab</b>,
or <b>NotifyWhileGrabbed</b>. Valid only for <b>Enter</b>,
<b>FocusIn</b>, <b>FocusOut</b>, and <b>Leave</b> events.</dd>

<dt><a name="M23"><b>%o</b></a></dt>

<dd>The <i>override_redirect</i> field from the event. Valid only
for <b>Map</b>, <b>Reparent</b>, and <b>Configure</b> events.</dd>

<dt><a name="M24"><b>%p</b></a></dt>

<dd>The <i>place</i> field from the event, substituted as one of
the strings <b>PlaceOnTop</b> or <b>PlaceOnBottom</b>. Valid only
for <b>Circulate</b> and <b>CirculateRequest</b> events.</dd>

<dt><a name="M25"><b>%s</b></a></dt>

<dd>The <i>state</i> field from the event. For <b>ButtonPress</b>,
<b>ButtonRelease</b>, <b>Enter</b>, <b>KeyPress</b>,
<b>KeyRelease</b>, <b>Leave</b>, and <b>Motion</b> events, a
decimal string is substituted. For <b>Visibility</b>, one of the
strings <b>VisibilityUnobscured</b>,
<b>VisibilityPartiallyObscured</b>, and
<b>VisibilityFullyObscured</b> is substituted.</dd>

<dt><a name="M26"><b>%t</b></a></dt>

<dd>The <i>time</i> field from the event. Valid only for events
that contain a <i>time</i> field.</dd>

<dt><a name="M27"><b>%w</b></a></dt>

<dd>The <i>width</i> field from the event. Valid only for
<b>Configure</b>, <b>ConfigureRequest</b>, <b>Create</b>,
<b>ResizeRequest</b>, and <b>Expose</b> events.</dd>

<dt><a name="M28"><b>%x</b></a></dt>

<dd>The <i>x</i> field from the event. Valid only for events
containing an <i>x</i> field.</dd>

<dt><a name="M29"><b>%y</b></a></dt>

<dd>The <i>y</i> field from the event. Valid only for events
containing a <i>y</i> field.</dd>

<dt><a name="M30"><b>%A</b></a></dt>

<dd>Substitutes the UNICODE character corresponding to the event,
or the empty string if the event doesn't correspond to a UNICODE
character (e.g. the shift key was pressed). <b>XmbLookupString</b>
(or <b>XLookupString</b> when input method support is turned off)
does all the work of translating from the event to a UNICODE
character. Valid only for <b>KeyPress</b> and <b>KeyRelease</b>
events.</dd>

<dt><a name="M31"><b>%B</b></a></dt>

<dd>The <i>border_width</i> field from the event. Valid only for
<b>Configure</b>, <b>ConfigureRequest</b>, and <b>Create</b>
events.</dd>

<dt><a name="M32"><b>%D</b></a></dt>

<dd>This reports the <i>delta</i> value of a <b>MouseWheel</b>
event. The <i>delta</i> value represents the rotation units the
mouse wheel has been moved. On Windows 95 &amp; 98 systems the
smallest value for the delta is 120. Future systems may support
higher resolution values for the delta. The sign of the value
represents the direction the mouse wheel was scrolled.</dd>

<dt><a name="M33"><b>%E</b></a></dt>

<dd>The <i>send_event</i> field from the event. Valid for all event
types.</dd>

<dt><a name="M34"><b>%K</b></a></dt>

<dd>The keysym corresponding to the event, substituted as a textual
string. Valid only for <b>KeyPress</b> and <b>KeyRelease</b>
events.</dd>

<dt><a name="M35"><b>%N</b></a></dt>

<dd>The keysym corresponding to the event, substituted as a decimal
number. Valid only for <b>KeyPress</b> and <b>KeyRelease</b>
events.</dd>

<dt><a name="M36"><b>%R</b></a></dt>

<dd>The <i>root</i> window identifier from the event. Valid only
for events containing a <i>root</i> field.</dd>

<dt><a name="M37"><b>%S</b></a></dt>

<dd>The <i>subwindow</i> window identifier from the event,
formatted as a hexadecimal number. Valid only for events containing
a <i>subwindow</i> field.</dd>

<dt><a name="M38"><b>%T</b></a></dt>

<dd>The <i>type</i> field from the event. Valid for all event
types.</dd>

<dt><a name="M39"><b>%W</b></a></dt>

<dd>The path name of the window to which the event was reported
(the <i>window</i> field from the event). Valid for all event
types.</dd>

<dt><a name="M40"><b>%X</b></a></dt>

<dd>The <i>x_root</i> field from the event. If a virtual-root
window manager is being used then the substituted value is the
corresponding x-coordinate in the virtual root. Valid only for
<b>ButtonPress</b>, <b>ButtonRelease</b>, <b>KeyPress</b>,
<b>KeyRelease</b>, and <b>Motion</b> events.</dd>

<dt><a name="M41"><b>%Y</b></a></dt>

<dd>The <i>y_root</i> field from the event. If a virtual-root
window manager is being used then the substituted value is the
corresponding y-coordinate in the virtual root. Valid only for
<b>ButtonPress</b>, <b>ButtonRelease</b>, <b>KeyPress</b>,
<b>KeyRelease</b>, and <b>Motion</b> events.</dd>
</dl>

<p>The replacement string for a %-replacement is formatted as a
proper Tcl list element. This means that it will be surrounded with
braces if it contains spaces, or special characters such as
<b>$</b> and <b>{</b> may be preceded by backslashes. This
guarantees that the string will be passed through the Tcl parser
when the binding script is evaluated. Most replacements are numbers
or well-defined strings such as <b>Above</b>; for these
replacements no special formatting is ever necessary. The most
common case where reformatting occurs is for the <b>%A</b>
substitution. For example, if <i>script</i> is</p>

<pre>
<b>insert %A</b>
</pre>

<p>and the character typed is an open square bracket, then the
script actually executed will be</p>

<pre>
<b>insert \[</b>
</pre>

<p>This will cause the <b>insert</b> to receive the original
replacement string (open square bracket) as its first argument. If
the extra backslash hadn't been added, Tcl would not have been able
to parse the script correctly.</p>

<h3><a name="M42">MULTIPLE MATCHES</a></h3>

<p>It is possible for several bindings to match a given X event. If
the bindings are associated with different <i>tag</i>'s, then each
of the bindings will be executed, in order. By default, a binding
for the widget will be executed first, followed by a class binding,
a binding for its toplevel, and an <b>all</b> binding. The <b><a
href="../TkCmd/bindtags.htm">bindtags</a></b> command may be used
to change this order for a particular window or to associate
additional binding tags with the window.</p>

<p>The <b><a href="../TclCmd/continue.htm">continue</a></b> and
<b><a href="../TclCmd/break.htm">break</a></b> commands may be used
inside a binding script to control the processing of matching
scripts. If <b><a href="../TclCmd/continue.htm">continue</a></b> is
invoked, then the current binding script is terminated but Tk will
continue processing binding scripts associated with other
<i>tag</i>'s. If the <b><a href="../TclCmd/break.htm">break</a></b>
command is invoked within a binding script, then that script
terminates and no other scripts will be invoked for the event.</p>

<p>If more than one binding matches a particular event and they
have the same <i>tag</i>, then the most specific binding is chosen
and its script is evaluated. The following tests are applied, in
order, to determine which of several matching sequences is more
specific: (a) an event pattern that specifies a specific button or
key is more specific than one that doesn't; (b) a longer sequence
(in terms of number of events matched) is more specific than a
shorter sequence; (c) if the modifiers specified in one pattern are
a subset of the modifiers in another pattern, then the pattern with
more modifiers is more specific. (d) a virtual event whose physical
pattern matches the sequence is less specific than the same
physical pattern that is not associated with a virtual event. (e)
given a sequence that matches two or more virtual events, one of
the virtual events will be chosen, but the order is undefined.</p>

<p>If the matching sequences contain more than one event, then
tests (c)-(e) are applied in order from the most recent event to
the least recent event in the sequences. If these tests fail to
determine a winner, then the most recently registered sequence is
the winner.</p>

<p>If there are two (or more) virtual events that are both
triggered by the same sequence, and both of those virtual events
are bound to the same window tag, then only one of the virtual
events will be triggered, and it will be picked at random:</p>

<pre>
event add &lt;&lt;Paste&gt;&gt; &lt;Control-y&gt;
event add &lt;&lt;Paste&gt;&gt; &lt;Button-2&gt;
event add &lt;&lt;Scroll&gt;&gt; &lt;Button-2&gt;
bind Entry &lt;&lt;Paste&gt;&gt; {puts Paste}
bind Entry &lt;&lt;Scroll&gt;&gt; {puts Scroll}
</pre>

<p>If the user types Control-y, the <b>&lt;&lt;Paste&gt;&gt;</b>
binding will be invoked, but if the user presses button 2 then one
of either the <b>&lt;&lt;Paste&gt;&gt;</b> or the
<b>&lt;&lt;Scroll&gt;&gt;</b> bindings will be invoked, but exactly
which one gets invoked is undefined.</p>

<p>If an X event does not match any of the existing bindings, then
the event is ignored. An unbound event is not considered to be an
error.</p>

<h3><a name="M43">MULTI-EVENT SEQUENCES AND IGNORED EVENTS</a></h3>

<p>When a <i>sequence</i> specified in a <b>bind</b> command
contains more than one event pattern, then its script is executed
whenever the recent events (leading up to and including the current
event) match the given sequence. This means, for example, that if
button 1 is clicked repeatedly the sequence
<b>&lt;Double-ButtonPress-1&gt;</b> will match each button press
but the first. If extraneous events that would prevent a match
occur in the middle of an event sequence then the extraneous events
are ignored unless they are <b>KeyPress</b> or <b>ButtonPress</b>
events. For example, <b>&lt;Double-ButtonPress-1&gt;</b> will match
a sequence of presses of button 1, even though there will be
<b>ButtonRelease</b> events (and possibly <b>Motion</b> events)
between the <b>ButtonPress</b> events. Furthermore, a
<b>KeyPress</b> event may be preceded by any number of other
<b>KeyPress</b> events for modifier keys without the modifier keys
preventing a match. For example, the event sequence <b>aB</b> will
match a press of the <b>a</b> key, a release of the <b>a</b> key, a
press of the <b>Shift</b> key, and a press of the <b>b</b> key: the
press of <b>Shift</b> is ignored because it is a modifier key.
Finally, if several <b>Motion</b> events occur in a row, only the
last one is used for purposes of matching binding sequences.</p>

<h3><a name="M44">ERRORS</a></h3>

<p>If an error occurs in executing the script for a binding then
the <b><a href="../TclCmd/bgerror.htm">bgerror</a></b> mechanism is
used to report the error. The <b><a href=
"../TclCmd/bgerror.htm">bgerror</a></b> command will be executed at
global level (outside the context of any Tcl procedure).</p>

<h3><a name="M45">SEE ALSO</a></h3>

<p><b><a href="../TclCmd/bgerror.htm">bgerror</a></b>, <b><a href=
"../TkCmd/keysyms.htm">keysyms</a></b></p>

<h3><a name="M46">KEYWORDS</a></h3>

<p><a href="../Keywords/F.htm#form">form</a>, <a href=
"../Keywords/M.htm#manual">manual</a></p>

<hr>
<pre>
<a href=
"../copyright.htm">Copyright</a> &copy; 1990 The Regents of the University of California.
<a href=
"../copyright.htm">Copyright</a> &copy; 1994-1996 Sun Microsystems, Inc.
<a href=
"../copyright.htm">Copyright</a> &copy; 1998 by Scriptics Corporation.
<a href=
"../copyright.htm">Copyright</a> &copy; 1995-1997 Roger E. Critchlow Jr.
</pre>
</body>
</html>

