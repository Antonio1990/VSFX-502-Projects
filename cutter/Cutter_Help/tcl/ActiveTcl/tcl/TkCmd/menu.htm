<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tk Built-In Commands - menu manual page</title>
</head>
<body>
<table width='100%' border='0' cellspacing='0' cellpadding='0'
bgcolor='EAE2BB'>
<tr>
<td><a target='_blank' href=
'http://www.ActiveState.com/Products/ActiveTcl'><img src=
'../../images/ActiveTcl.gif' border='0' align='left' height='61'
width='64'></a> </td>
<td>
<div align='center' class='heading'>ActiveTcl User Guide</div>
</td>
<td><a target='_blank' href='http://www.ActiveState.com'><img src=
'../../images/AS_logo.gif' border='0' align='right' height='48'
width='112'></a> </td>
</tr>

<tr>
<td class='lineColour' colspan='3'></td>
</tr>
</table>

<br>
<dl>
<dd><a href="menu.htm#M2" name="L744">NAME</a> 

<dl>
<dd>menu, tk_menuSetFocus - Create and manipulate menu widgets</dd>
</dl>
</dd>

<dd><a href="menu.htm#M3" name="L745">SYNOPSIS</a> 

<dl>
<dd><b>menu</b> <i>pathName</i> ?<i>options</i>?</dd>

<dd><b>tk_menuSetFocus</b> <i>pathName</i></dd>
</dl>
</dd>

<dd><a href="menu.htm#M4" name="L746">STANDARD OPTIONS</a> 

<dl>
<dd><a href="options.htm#M"></a></dd>

<dd><a href="options.htm#M"></a></dd>

<dd><a href="options.htm#M-activebackground">-activebackground,
activeBackground, Foreground</a></dd>

<dd><a href="options.htm#M-activeborderwidth">-activeborderwidth,
activeBorderWidth, BorderWidth</a></dd>

<dd><a href="options.htm#M-activeforeground">-activeforeground,
activeForeground, Background</a></dd>

<dd><a href="options.htm#M-background">-background or -bg,
background, Background</a></dd>

<dd><a href="options.htm#M-borderwidth">-borderwidth or -bd,
borderWidth, BorderWidth</a></dd>

<dd><a href="options.htm#M-cursor">-cursor, cursor, Cursor</a></dd>

<dd><a href="options.htm#M-disabledforeground">-disabledforeground,
disabledForeground, DisabledForeground</a></dd>

<dd><a href="options.htm#M-font">-font, font, Font</a></dd>

<dd><a href="options.htm#M-foreground">-foreground or -fg,
foreground, Foreground</a></dd>

<dd><a href="options.htm#M-relief">-relief, relief, Relief</a></dd>

<dd><a href="options.htm#M-takefocus">-takefocus, takeFocus,
TakeFocus</a></dd>
</dl>
</dd>

<dd><a href="menu.htm#M7" name="L749">WIDGET-SPECIFIC OPTIONS</a> 

<dl>
<dd><a href="menu.htm#M8" name="L750">-postcommand, postCommand,
Command</a></dd>

<dd><a href="menu.htm#M9" name="L751">-selectcolor, selectColor,
Background</a></dd>

<dd><a href="menu.htm#M10" name="L752">-tearoff, tearOff,
TearOff</a></dd>

<dd><a href="menu.htm#M11" name="L753">-tearoffcommand,
tearOffCommand, TearOffCommand</a></dd>

<dd><a href="menu.htm#M12" name="L754">-title, title,
Title</a></dd>

<dd><a href="menu.htm#M13" name="L755">-type, type, Type</a></dd>
</dl>
</dd>

<dd><a href="menu.htm#M14" name="L756">INTRODUCTION</a></dd>

<dd><a href="menu.htm#M15" name="L757">COMMAND ENTRIES</a></dd>

<dd><a href="menu.htm#M16" name="L758">SEPARATOR ENTRIES</a></dd>

<dd><a href="menu.htm#M17" name="L759">CHECKBUTTON ENTRIES</a></dd>

<dd><a href="menu.htm#M18" name="L760">RADIOBUTTON ENTRIES</a></dd>

<dd><a href="menu.htm#M19" name="L761">CASCADE ENTRIES</a></dd>

<dd><a href="menu.htm#M20" name="L762">TEAR-OFF ENTRIES</a></dd>

<dd><a href="menu.htm#M21" name="L763">MENUBARS</a></dd>

<dd><a href="menu.htm#M22" name="L764">SPECIAL MENUS IN
MENUBARS</a></dd>

<dd><a href="menu.htm#M23" name="L765">CLONES</a></dd>

<dd><a href="menu.htm#M24" name="L766">WIDGET COMMAND</a> 

<dl>
<dd><a href="menu.htm#M25" name="L767"><i>number</i></a></dd>

<dd><a href="menu.htm#M26" name="L768"><b>active</b></a></dd>

<dd><a href="menu.htm#M27" name="L769"><b>end</b></a></dd>

<dd><a href="menu.htm#M28" name="L770"><b>last</b></a></dd>

<dd><a href="menu.htm#M29" name="L771"><b>none</b></a></dd>

<dd><a href="menu.htm#M30" name=
"L772"><b>@</b><i>number</i></a></dd>

<dd><a href="menu.htm#M31" name="L773"><i>pattern</i></a></dd>
</dl>

<dl>
<dd><a href="menu.htm#M32" name="L774"><i>pathName</i>
<b>activate</b> <i>index</i></a></dd>

<dd><a href="menu.htm#M33" name="L775"><i>pathName</i> <b>add</b>
<i>type</i> ?<i>option value option value ...</i>?</a> 

<dl>
<dd><a href="menu.htm#M34" name="L776"><b>-activebackground</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M35" name="L777"><b>-activeforeground</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M36" name="L778"><b>-accelerator</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M37" name="L779"><b>-background</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M38" name="L780"><b>-bitmap</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M39" name="L781"><b>-columnbreak</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M40" name="L782"><b>-command</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M41" name="L783"><b>-compound</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M42" name="L784"><b>-font</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M43" name="L785"><b>-foreground</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M44" name="L786"><b>-hidemargin</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M45" name="L787"><b>-image</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M46" name="L788"><b>-indicatoron</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M47" name="L789"><b>-label</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M48" name="L790"><b>-menu</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M49" name="L791"><b>-offvalue</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M50" name="L792"><b>-onvalue</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M51" name="L793"><b>-selectcolor</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M52" name="L794"><b>-selectimage</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M53" name="L795"><b>-state</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M54" name="L796"><b>-underline</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M55" name="L797"><b>-value</b>
<i>value</i></a></dd>

<dd><a href="menu.htm#M56" name="L798"><b>-variable</b>
<i>value</i></a></dd>
</dl>
</dd>

<dd><a href="menu.htm#M57" name="L799"><i>pathName</i> <b>cget</b>
<i>option</i></a></dd>

<dd><a href="menu.htm#M58" name="L800"><i>pathName</i> <b>clone</b>
<i>newPathname ?cloneType?</i></a></dd>

<dd><a href="menu.htm#M59" name="L801"><i>pathName</i>
<b>configure</b> ?<i>option</i>? ?<i>value option value
...</i>?</a></dd>

<dd><a href="menu.htm#M60" name="L802"><i>pathName</i>
<b>delete</b> <i>index1</i> ?<i>index2</i>?</a></dd>

<dd><a href="menu.htm#M61" name="L803"><i>pathName</i>
<b>entrycget</b> <i>index option</i></a></dd>

<dd><a href="menu.htm#M62" name="L804"><i>pathName</i>
<b>entryconfigure</b> <i>index</i> ?<i>options</i>?</a></dd>

<dd><a href="menu.htm#M63" name="L805"><i>pathName</i> <b>index</b>
<i>index</i></a></dd>

<dd><a href="menu.htm#M64" name="L806"><i>pathName</i>
<b>insert</b> <i>index</i> <i>type</i> ?<i>option value option
value ...</i>?</a></dd>

<dd><a href="menu.htm#M65" name="L807"><i>pathName</i>
<b>invoke</b> <i>index</i></a></dd>

<dd><a href="menu.htm#M66" name="L808"><i>pathName</i> <b>post</b>
<i>x y</i></a></dd>

<dd><a href="menu.htm#M67" name="L809"><i>pathName</i>
<b>postcascade</b> <i>index</i></a></dd>

<dd><a href="menu.htm#M68" name="L810"><i>pathName</i> <b>type</b>
<i>index</i></a></dd>

<dd><a href="menu.htm#M69" name="L811">.VS</a></dd>

<dd><a href="menu.htm#M70" name="L812"><i>pathName</i>
<b>yposition</b> <i>index</i></a></dd>
</dl>
</dd>

<dd><a href="menu.htm#M71" name="L813">MENU CONFIGURATIONS</a> 

<dl>
<dd><a href="menu.htm#M72" name="L814"><b>Pulldown Menus in
Menubar</b></a></dd>

<dd><a href="menu.htm#M73" name="L815"><b>Pulldown Menus in Menu
Buttons</b></a></dd>

<dd><a href="menu.htm#M74" name="L816"><b>Popup Menus</b></a></dd>

<dd><a href="menu.htm#M75" name="L817"><b>Option Menus</b></a></dd>

<dd><a href="menu.htm#M76" name="L818"><b>Torn-off
Menus</b></a></dd>
</dl>
</dd>

<dd><a href="menu.htm#M77" name="L819">DEFAULT BINDINGS</a></dd>

<dd><a href="menu.htm#M78" name="L820">BUGS</a></dd>

<dd><a href="menu.htm#M79" name="L821">KEYWORDS</a></dd>
</dl>

<hr>
<h3><a name="M2">NAME</a></h3>

<p>menu, tk_menuSetFocus - Create and manipulate menu widgets</p>

<h3><a name="M3">SYNOPSIS</a></h3>

<p><b>menu</b> <i>pathName</i> ?<i>options</i>?<br>
<b>tk_menuSetFocus</b> <i>pathName</i><br>
</p>

<h3><a name="M4">STANDARD OPTIONS</a></h3>

<dl>
<dt><b><a href="options.htm#M"></a></b></dt>

<dt><b><a href="options.htm#M"></a></b></dt>

<dt><b><a href="options.htm#M-activebackground">-activebackground,
activeBackground, Foreground</a></b></dt>

<dt><b><a href=
"options.htm#M-activeborderwidth">-activeborderwidth,
activeBorderWidth, BorderWidth</a></b></dt>

<dt><b><a href="options.htm#M-activeforeground">-activeforeground,
activeForeground, Background</a></b></dt>

<dt><b><a href="options.htm#M-background">-background or -bg,
background, Background</a></b></dt>

<dt><b><a href="options.htm#M-borderwidth">-borderwidth or -bd,
borderWidth, BorderWidth</a></b></dt>

<dt><b><a href="options.htm#M-cursor">-cursor, cursor,
Cursor</a></b></dt>

<dt><b><a href=
"options.htm#M-disabledforeground">-disabledforeground,
disabledForeground, DisabledForeground</a></b></dt>

<dt><b><a href="options.htm#M-font">-font, font, Font</a></b></dt>

<dt><b><a href="options.htm#M-foreground">-foreground or -fg,
foreground, Foreground</a></b></dt>

<dt><b><a href="options.htm#M-relief">-relief, relief,
Relief</a></b></dt>

<dt><b><a href="options.htm#M-takefocus">-takefocus, takeFocus,
TakeFocus</a></b></dt>
</dl>

<h3><a name="M7">WIDGET-SPECIFIC OPTIONS</a></h3>

<dl>
<dt>Command-Line Name: <b><a name="M8">-postcommand</a></b></dt>

<dt>Database Name: <b>postCommand</b></dt>

<dt>Database Class: <b>Command</b></dt>

<dd>If this option is specified then it provides a Tcl command to
execute each time the menu is posted. The command is invoked by the
<b>post</b> widget command before posting the menu. Note that in
8.0 on Macintosh and Windows, all commands in a menu systems are
executed before any are posted. This is due to the limitations in
the individual platforms' menu managers.</dd>

<dt>Command-Line Name: <b><a name="M9">-selectcolor</a></b></dt>

<dt>Database Name: <b>selectColor</b></dt>

<dt>Database Class: <b>Background</b></dt>

<dd>For menu entries that are check buttons or radio buttons, this
option specifies the color to display in the indicator when the
check button or radio button is selected.</dd>

<dt>Command-Line Name: <b><a name="M10">-tearoff</a></b></dt>

<dt>Database Name: <b>tearOff</b></dt>

<dt>Database Class: <b>TearOff</b></dt>

<dd>This option must have a proper boolean value, which specifies
whether or not the menu should include a tear-off entry at the top.
If so, it will exist as entry 0 of the menu and the other entries
will number starting at 1. The default menu bindings arrange for
the menu to be torn off when the tear-off entry is invoked.</dd>

<dt>Command-Line Name: <b><a name=
"M11">-tearoffcommand</a></b></dt>

<dt>Database Name: <b>tearOffCommand</b></dt>

<dt>Database Class: <b>TearOffCommand</b></dt>

<dd>If this option has a non-empty value, then it specifies a Tcl
command to invoke whenever the menu is torn off. The actual command
will consist of the value of this option, followed by a space,
followed by the name of the menu window, followed by a space,
followed by the name of the name of the torn off menu window. For
example, if the option's is ``<b>a b</b>'' and menu <b>.x.y</b> is
torn off to create a new menu <b>.x.tearoff1</b>, then the command
``<b>a b .x.y .x.tearoff1</b>'' will be invoked.</dd>

<dt>Command-Line Name: <b><a name="M12">-title</a></b></dt>

<dt>Database Name: <b>title</b></dt>

<dt>Database Class: <b>Title</b></dt>

<dd>The string will be used to title the window created when this
menu is torn off. If the title is NULL, then the window will have
the title of the menubutton or the text of the cascade item from
which this menu was invoked.</dd>

<dt>Command-Line Name: <b><a name="M13">-type</a></b></dt>

<dt>Database Name: <b>type</b></dt>

<dt>Database Class: <b>Type</b></dt>

<dd>This option can be one of <b>menubar</b>, <b>tearoff</b>, or
<b>normal</b>, and is set when the menu is created. While the
string returned by the configuration database will change if this
option is changed, this does not affect the menu widget's behavior.
This is used by the cloning mechanism and is not normally set
outside of the Tk library.</dd>
</dl>

<h3><a name="M14">INTRODUCTION</a></h3>

<p>The <b>menu</b> command creates a new top-level window (given by
the <i>pathName</i> argument) and makes it into a menu widget.
Additional options, described above, may be specified on the
command line or in the option database to configure aspects of the
menu such as its colors and font. The <b>menu</b> command returns
its <i>pathName</i> argument. At the time this command is invoked,
there must not exist a window named <i>pathName</i>, but
<i>pathName</i>'s parent must exist.</p>

<p>A menu is a widget that displays a collection of one-line
entries arranged in one or more columns. There exist several
different types of entries, each with different properties. Entries
of different types may be combined in a single menu. Menu entries
are not the same as entry widgets. In fact, menu entries are not
even distinct widgets; the entire menu is one widget.</p>

<p>Menu entries are displayed with up to three separate fields. The
main field is a label in the form of a text string, a bitmap, or an
image, controlled by the <b>-label</b>, <b>-bitmap</b>, and
<b>-image</b> options for the entry. If the <b>-accelerator</b>
option is specified for an entry then a second textual field is
displayed to the right of the label. The accelerator typically
describes a keystroke sequence that may be typed in the application
to cause the same result as invoking the menu entry. The third
field is an <i>indicator</i>. The indicator is present only for
checkbutton or radiobutton entries. It indicates whether the entry
is selected or not, and is displayed to the left of the entry's
string.</p>

<p>In normal use, an entry becomes active (displays itself
differently) whenever the mouse pointer is over the entry. If a
mouse button is released over the entry then the entry is
<i>invoked</i>. The effect of invocation is different for each type
of entry; these effects are described below in the sections on
individual entries.</p>

<p>Entries may be <i>disabled</i>, which causes their labels and
accelerators to be displayed with dimmer colors. The default menu
bindings will not allow a disabled entry to be activated or
invoked. Disabled entries may be re-enabled, at which point it
becomes possible to activate and invoke them again.</p>

<p>Whenever a menu's active entry is changed, a
&lt;&lt;MenuSelect&gt;&gt; virtual event is send to the menu. The
active item can then be queried from the menu, and an action can be
taken, such as setting context-sensitive help text for the
entry.</p>

<h3><a name="M15">COMMAND ENTRIES</a></h3>

<p>The most common kind of menu entry is a command entry, which
behaves much like a button widget. When a command entry is invoked,
a Tcl command is executed. The Tcl command is specified with the
<b>-command</b> option.</p>

<h3><a name="M16">SEPARATOR ENTRIES</a></h3>

<p>A separator is an entry that is displayed as a horizontal
dividing line. A separator may not be activated or invoked, and it
has no behavior other than its display appearance.</p>

<h3><a name="M17">CHECKBUTTON ENTRIES</a></h3>

<p>A checkbutton menu entry behaves much like a checkbutton widget.
When it is invoked it toggles back and forth between the selected
and deselected states. When the entry is selected, a particular
value is stored in a particular global variable (as determined by
the <b>-onvalue</b> and <b>-variable</b> options for the entry);
when the entry is deselected another value (determined by the
<b>-offvalue</b> option) is stored in the global variable. An
indicator box is displayed to the left of the label in a
checkbutton entry. If the entry is selected then the indicator's
center is displayed in the color given by the <b>-selectcolor</b>
option for the entry; otherwise the indicator's center is displayed
in the background color for the menu. If a <b>-command</b> option
is specified for a checkbutton entry, then its value is evaluated
as a Tcl command each time the entry is invoked; this happens after
toggling the entry's selected state.</p>

<h3><a name="M18">RADIOBUTTON ENTRIES</a></h3>

<p>A radiobutton menu entry behaves much like a radiobutton widget.
Radiobutton entries are organized in groups of which only one entry
may be selected at a time. Whenever a particular entry becomes
selected it stores a particular value into a particular global
variable (as determined by the <b>-value</b> and <b>-variable</b>
options for the entry). This action causes any previously-selected
entry in the same group to deselect itself. Once an entry has
become selected, any change to the entry's associated variable will
cause the entry to deselect itself. Grouping of radiobutton entries
is determined by their associated variables: if two entries have
the same associated variable then they are in the same group. An
indicator diamond is displayed to the left of the label in each
radiobutton entry. If the entry is selected then the indicator's
center is displayed in the color given by the <b>-selectcolor</b>
option for the entry; otherwise the indicator's center is displayed
in the background color for the menu. If a <b>-command</b> option
is specified for a radiobutton entry, then its value is evaluated
as a Tcl command each time the entry is invoked; this happens after
selecting the entry.</p>

<h3><a name="M19">CASCADE ENTRIES</a></h3>

<p>A cascade entry is one with an associated menu (determined by
the <b>-menu</b> option). Cascade entries allow the construction of
cascading menus. The <b>postcascade</b> widget command can be used
to post and unpost the associated menu just next to of the cascade
entry. The associated menu must be a child of the menu containing
the cascade entry (this is needed in order for menu traversal to
work correctly).</p>

<p>A cascade entry posts its associated menu by invoking a Tcl
command of the form</p>

<pre>
<i>menu</i> <b>post</b> <i>x y</i>
</pre>

<p>where <i>menu</i> is the path name of the associated menu, and
<i>x</i> and <i>y</i> are the root-window coordinates of the
upper-right corner of the cascade entry. On Unix, the lower-level
menu is unposted by executing a Tcl command with the form</p>

<pre>
<i>menu</i> <b>unpost</b>
</pre>

<p>where <i>menu</i> is the name of the associated menu. On other
platforms, the platform's native code takes care of unposting the
menu.</p>

<p>If a <b>-command</b> option is specified for a cascade entry
then it is evaluated as a Tcl command whenever the entry is
invoked. This is not supported on Windows.</p>

<h3><a name="M20">TEAR-OFF ENTRIES</a></h3>

<p>A tear-off entry appears at the top of the menu if enabled with
the <b>tearOff</b> option. It is not like other menu entries in
that it cannot be created with the <b>add</b> widget command and
cannot be deleted with the <b>delete</b> widget command. When a
tear-off entry is created it appears as a dashed line at the top of
the menu. Under the default bindings, invoking the tear-off entry
causes a torn-off copy to be made of the menu and all of its
submenus.</p>

<h3><a name="M21">MENUBARS</a></h3>

<p>Any menu can be set as a menubar for a toplevel window (see
<b><a href="../TkCmd/toplevel.htm">toplevel</a></b> command for
syntax). On the Macintosh, whenever the toplevel is in front, this
menu's cascade items will appear in the menubar across the top of
the main monitor. On Windows and Unix, this menu's items will be
displayed in a menubar accross the top of the window. These menus
will behave according to the interface guidelines of their
platforms. For every menu set as a menubar, a clone menu is made.
See the <b>CLONES</b> section for more information.</p>

<p>As noted, menubars may behave differently on different
platforms. One example of this concerns the handling of
checkbuttons and radiobuttons within the menu. While it is
permitted to put these menu elements on menubars, they may not be
drawn with indicators on some platforms, due to system
restrictions.</p>

<h3><a name="M22">SPECIAL MENUS IN MENUBARS</a></h3>

<p>Certain menus in a menubar will be treated specially. On the
Macintosh, access to the special Apple and Help menus is provided.
On Windows, access to the Windows System menu in each window is
provided. On X Windows, a special right-justified help menu is
provided. In all cases, these menus must be created with the
command name of the menubar menu concatenated with the special
name. So for a menubar named .menubar, on the Macintosh, the
special menus would be .menubar.apple and .menubar.help; on
Windows, the special menu would be .menubar.system; on X Windows,
the help menu would be .menubar.help.</p>

<p>When Tk sees an Apple menu on the Macintosh, that menu's
contents make up the first items of the Apple menu on the screen
whenever the window containing the menubar is in front. The menu is
the first one that the user sees and has a title which is an Apple
logo. After all of the Tk-defined items, the menu will have a
separator, followed by all of the items in the user's Apple Menu
Items folder. Since the System uses a different menu definition
procedure for the Apple menu than Tk uses for its menus, and the
system APIs do not fully support everything Tk tries to do, the
menu item will only have its text displayed. No font attributes,
images, bitmaps, or colors will be displayed. In addition, a menu
with a tearoff item will have the tearoff item displayed as
"(TearOff)".</p>

<p>When Tk see a Help menu on the Macintosh, the menu's contents
are appended to the standard help menu on the right of the user's
menubar whenever the user's menubar is in front. The first items in
the menu are provided by Apple. Similar to the Apple Menu,
cusomization in this menu is limited to what the system
provides.</p>

<p>When Tk sees a System menu on Windows, its items are appended to
the system menu that the menubar is attached to. This menu has an
icon representing a spacebar, and can be invoked with the mouse or
by typing Alt+Spacebar. Due to limitations in the Windows API, any
font changes, colors, images, bitmaps, or tearoff images will not
appear in the system menu.</p>

<p>When Tk see a Help menu on X Windows, the menu is moved to be
last in the menubar and is right justified.</p>

<h3><a name="M23">CLONES</a></h3>

<p>When a menu is set as a menubar for a toplevel window, or when a
menu is torn off, a clone of the menu is made. This clone is a menu
widget in its own right, but it is a child of the original. Changes
in the configuration of the original are reflected in the clone.
Additionally, any cascades that are pointed to are also cloned so
that menu traversal will work right. Clones are destroyed when
either the tearoff or menubar goes away, or when the original menu
is destroyed.</p>

<h3><a name="M24">WIDGET COMMAND</a></h3>

<p>The <b>menu</b> command creates a new Tcl command whose name is
<i>pathName</i>. This command may be used to invoke various
operations on the widget. It has the following general form:</p>

<pre>
<i>pathName option</i> ?<i>arg arg ...</i>?
</pre>

<p><i>Option</i> and the <i>arg</i>s determine the exact behavior
of the command.</p>

<p>Many of the widget commands for a menu take as one argument an
indicator of which entry of the menu to operate on. These
indicators are called <i>index</i>es and may be specified in any of
the following forms:</p>

<dl>
<dt><a name="M25"><i>number</i></a></dt>

<dd>Specifies the entry numerically, where 0 corresponds to the
top-most entry of the menu, 1 to the entry below it, and so
on.</dd>

<dt><a name="M26"><b>active</b></a></dt>

<dd>Indicates the entry that is currently active. If no entry is
active then this form is equivalent to <b>none</b>. This form may
not be abbreviated.</dd>

<dt><a name="M27"><b>end</b></a></dt>

<dd>Indicates the bottommost entry in the menu. If there are no
entries in the menu then this form is equivalent to <b>none</b>.
This form may not be abbreviated.</dd>

<dt><a name="M28"><b>last</b></a></dt>

<dd>Same as <b>end</b>.</dd>

<dt><a name="M29"><b>none</b></a></dt>

<dd>Indicates ``no entry at all''; this is used most commonly with
the <b>activate</b> option to deactivate all the entries in the
menu. In most cases the specification of <b>none</b> causes nothing
to happen in the widget command. This form may not be
abbreviated.</dd>

<dt><a name="M30"><b>@</b><i>number</i></a></dt>

<dd>In this form, <i>number</i> is treated as a y-coordinate in the
menu's window; the entry closest to that y-coordinate is used. For
example, ``<b>@0</b>'' indicates the top-most entry in the
window.</dd>

<dt><a name="M31"><i>pattern</i></a></dt>

<dd>If the index doesn't satisfy one of the above forms then this
form is used. <i>Pattern</i> is pattern-matched against the label
of each entry in the menu, in order from the top down, until a
matching entry is found. The rules of <b><a href=
"../TclLib/StrMatch.htm">Tcl_StringMatch</a></b> are used.</dd>
</dl>

<p>The following widget commands are possible for menu widgets:</p>

<dl>
<dt><a name="M32"><i>pathName</i> <b>activate</b>
<i>index</i></a></dt>

<dd>Change the state of the entry indicated by <i>index</i> to
<b>active</b> and redisplay it using its active colors. Any
previously-active entry is deactivated. If <i>index</i> is
specified as <b>none</b>, or if the specified entry is disabled,
then the menu ends up with no active entry. Returns an empty
string.</dd>

<dt><a name="M33"><i>pathName</i> <b>add</b> <i>type</i> ?<i>option
value option value ...</i>?</a></dt>

<dd>Add a new entry to the bottom of the menu. The new entry's type
is given by <i>type</i> and must be one of <b>cascade</b>,
<b>checkbutton</b>, <b>command</b>, <b>radiobutton</b>, or
<b>separator</b>, or a unique abbreviation of one of the above. If
additional arguments are present, they specify any of the following
options: 

<dl>
<dt><a name="M34"><b>-activebackground</b> <i>value</i></a></dt>

<dd>Specifies a background color to use for displaying this entry
when it is active. If this option is specified as an empty string
(the default), then the <b>activeBackground</b> option for the
overall menu is used. If the <b>tk_strictMotif</b> variable has
been set to request strict Motif compliance, then this option is
ignored and the <b>-background</b> option is used in its place.
This option is not available for separator or tear-off
entries.</dd>

<dt><a name="M35"><b>-activeforeground</b> <i>value</i></a></dt>

<dd>Specifies a foreground color to use for displaying this entry
when it is active. If this option is specified as an empty string
(the default), then the <b>activeForeground</b> option for the
overall menu is used. This option is not available for separator or
tear-off entries.</dd>

<dt><a name="M36"><b>-accelerator</b> <i>value</i></a></dt>

<dd>Specifies a string to display at the right side of the menu
entry. Normally describes an accelerator keystroke sequence that
may be typed to invoke the same function as the menu entry. This
option is not available for separator or tear-off entries.</dd>

<dt><a name="M37"><b>-background</b> <i>value</i></a></dt>

<dd>Specifies a background color to use for displaying this entry
when it is in the normal state (neither active nor disabled). If
this option is specified as an empty string (the default), then the
<b>background</b> option for the overall menu is used. This option
is not available for separator or tear-off entries.</dd>

<dt><a name="M38"><b>-bitmap</b> <i>value</i></a></dt>

<dd>Specifies a bitmap to display in the menu instead of a textual
label, in any of the forms accepted by <b><a href=
"../TkLib/GetBitmap.htm">Tk_GetBitmap</a></b>. This option
overrides the <b>-label</b> option but may be reset to an empty
string to enable a textual label to be displayed. If a
<b>-image</b> option has been specified, it overrides
<b>-bitmap</b>. This option is not available for separator or
tear-off entries.</dd>

<dt><a name="M39"><b>-columnbreak</b> <i>value</i></a></dt>

<dd>When this option is zero, the appears below the previous entry.
When this option is one, the menu appears at the top of a new
column in the menu.</dd>

<dt><a name="M40"><b>-command</b> <i>value</i></a></dt>

<dd>Specifies a Tcl command to execute when the menu entry is
invoked. Not available for separator or tear-off entries.</dd>

<dt><a name="M41"><b>-compound</b> <i>value</i></a></dt>

<dd>Specifies whether the menu entry should display both an image
and text, and if so, where the image should be placed relative to
the text. Valid values for this option are <b>bottom</b>,
<b>center</b>, <b>left</b>, <b>none</b>, <b>right</b> and
<b>top</b>. The default value is <b>none</b>, meaning that the
button will display either an image or text, depending on the
values of the <b>-image</b> and <b>-bitmap</b> options.</dd>

<dt><a name="M42"><b>-font</b> <i>value</i></a></dt>

<dd>Specifies the font to use when drawing the label or accelerator
string in this entry. If this option is specified as an empty
string (the default) then the <b><a href=
"../TkCmd/font.htm">font</a></b> option for the overall menu is
used. This option is not available for separator or tear-off
entries.</dd>

<dt><a name="M43"><b>-foreground</b> <i>value</i></a></dt>

<dd>Specifies a foreground color to use for displaying this entry
when it is in the normal state (neither active nor disabled). If
this option is specified as an empty string (the default), then the
<b>foreground</b> option for the overall menu is used. This option
is not available for separator or tear-off entries.</dd>

<dt><a name="M44"><b>-hidemargin</b> <i>value</i></a></dt>

<dd>Specifies whether the standard margins should be drawn for this
menu entry. This is useful when creating palette with images in
them, i.e., color palettes, pattern palettes, etc. 1 indicates that
the margin for the entry is hidden; 0 means that the margin is
used.</dd>

<dt><a name="M45"><b>-image</b> <i>value</i></a></dt>

<dd>Specifies an image to display in the menu instead of a text
string or bitmap The image must have been created by some previous
invocation of <b><a href="../TkCmd/image.htm">image create</a></b>.
This option overrides the <b>-label</b> and <b>-bitmap</b> options
but may be reset to an empty string to enable a textual or bitmap
label to be displayed. This option is not available for separator
or tear-off entries.</dd>

<dt><a name="M46"><b>-indicatoron</b> <i>value</i></a></dt>

<dd>Available only for checkbutton and radiobutton entries.
<i>Value</i> is a boolean that determines whether or not the
indicator should be displayed.</dd>

<dt><a name="M47"><b>-label</b> <i>value</i></a></dt>

<dd>Specifies a string to display as an identifying label in the
menu entry. Not available for separator or tear-off entries.</dd>

<dt><a name="M48"><b>-menu</b> <i>value</i></a></dt>

<dd>Available only for cascade entries. Specifies the path name of
the submenu associated with this entry. The submenu must be a child
of the menu.</dd>

<dt><a name="M49"><b>-offvalue</b> <i>value</i></a></dt>

<dd>Available only for checkbutton entries. Specifies the value to
store in the entry's associated variable when the entry is
deselected.</dd>

<dt><a name="M50"><b>-onvalue</b> <i>value</i></a></dt>

<dd>Available only for checkbutton entries. Specifies the value to
store in the entry's associated variable when the entry is
selected.</dd>

<dt><a name="M51"><b>-selectcolor</b> <i>value</i></a></dt>

<dd>Available only for checkbutton and radiobutton entries.
Specifies the color to display in the indicator when the entry is
selected. If the value is an empty string (the default) then the
<b>selectColor</b> option for the menu determines the indicator
color.</dd>

<dt><a name="M52"><b>-selectimage</b> <i>value</i></a></dt>

<dd>Available only for checkbutton and radiobutton entries.
Specifies an image to display in the entry (in place of the
<b>-image</b> option) when it is selected. <i>Value</i> is the name
of an image, which must have been created by some previous
invocation of <b><a href="../TkCmd/image.htm">image create</a></b>.
This option is ignored unless the <b>-image</b> option has been
specified.</dd>

<dt><a name="M53"><b>-state</b> <i>value</i></a></dt>

<dd>Specifies one of three states for the entry: <b>normal</b>,
<b>active</b>, or <b>disabled</b>. In normal state the entry is
displayed using the <b>foreground</b> option for the menu and the
<b>background</b> option from the entry or the menu. The active
state is typically used when the pointer is over the entry. In
active state the entry is displayed using the
<b>activeForeground</b> option for the menu along with the
<b>activebackground</b> option from the entry. Disabled state means
that the entry should be insensitive: the default bindings will
refuse to activate or invoke the entry. In this state the entry is
displayed according to the <b>disabledForeground</b> option for the
menu and the <b>background</b> option from the entry. This option
is not available for separator entries.</dd>

<dt><a name="M54"><b>-underline</b> <i>value</i></a></dt>

<dd>Specifies the integer index of a character to underline in the
entry. This option is also queried by the default bindings and used
to implement keyboard traversal. 0 corresponds to the first
character of the text displayed in the entry, 1 to the next
character, and so on. If a bitmap or image is displayed in the
entry then this option is ignored. This option is not available for
separator or tear-off entries.</dd>

<dt><a name="M55"><b>-value</b> <i>value</i></a></dt>

<dd>Available only for radiobutton entries. Specifies the value to
store in the entry's associated variable when the entry is
selected. If an empty string is specified, then the <b>-label</b>
option for the entry as the value to store in the variable.</dd>

<dt><a name="M56"><b>-variable</b> <i>value</i></a></dt>

<dd>Available only for checkbutton and radiobutton entries.
Specifies the name of a global value to set when the entry is
selected. For checkbutton entries the variable is also set when the
entry is deselected. For radiobutton entries, changing the variable
causes the currently-selected entry to deselect itself.</dd>
</dl>

<p>The <b>add</b> widget command returns an empty string.</p>
</dd>

<dt><a name="M57"><i>pathName</i> <b>cget</b>
<i>option</i></a></dt>

<dd>Returns the current value of the configuration option given by
<i>option</i>. <i>Option</i> may have any of the values accepted by
the <b>menu</b> command.</dd>

<dt><a name="M58"><i>pathName</i> <b>clone</b> <i>newPathname
?cloneType?</i></a></dt>

<dd>Makes a clone of the current menu named <i>newPathName</i>.
This clone is a menu in its own right, but any changes to the clone
are propogated to the original menu and vice versa.
<i>cloneType</i> can be <b>normal</b>, <b>menubar</b>, or
<b>tearoff</b>. Should not normally be called outside of the Tk
library. See the <b>CLONES</b> section for more information.</dd>

<dt><a name="M59"><i>pathName</i> <b>configure</b> ?<i>option</i>?
?<i>value option value ...</i>?</a></dt>

<dd>Query or modify the configuration options of the widget. If no
<i>option</i> is specified, returns a list describing all of the
available options for <i>pathName</i> (see <b><a href=
"../TkLib/ConfigWidg.htm">Tk_ConfigureInfo</a></b> for information
on the format of this list). If <i>option</i> is specified with no
<i>value</i>, then the command returns a list describing the one
named option (this list will be identical to the corresponding
sublist of the value returned if no <i>option</i> is specified). If
one or more <i>option-value</i> pairs are specified, then the
command modifies the given widget option(s) to have the given
value(s); in this case the command returns an empty string.
<i>Option</i> may have any of the values accepted by the
<b>menu</b> command.</dd>

<dt><a name="M60"><i>pathName</i> <b>delete</b> <i>index1</i>
?<i>index2</i>?</a></dt>

<dd>Delete all of the menu entries between <i>index1</i> and
<i>index2</i> inclusive. If <i>index2</i> is omitted then it
defaults to <i>index1</i>. Attempts to delete a tear-off menu entry
are ignored (instead, you should change the <b>tearOff</b> option
to remove the tear-off entry).</dd>

<dt><a name="M61"><i>pathName</i> <b>entrycget</b> <i>index
option</i></a></dt>

<dd>Returns the current value of a configuration option for the
entry given by <i>index</i>. <i>Option</i> may have any of the
values accepted by the <b>add</b> widget command.</dd>

<dt><a name="M62"><i>pathName</i> <b>entryconfigure</b>
<i>index</i> ?<i>options</i>?</a></dt>

<dd>This command is similar to the <b>configure</b> command, except
that it applies to the options for an individual entry, whereas
<b>configure</b> applies to the options for the menu as a whole.
<i>Options</i> may have any of the values accepted by the
<b>add</b> widget command. If <i>options</i> are specified, options
are modified as indicated in the command and the command returns an
empty string. If no <i>options</i> are specified, returns a list
describing the current options for entry <i>index</i> (see <b><a
href="../TkLib/ConfigWidg.htm">Tk_ConfigureInfo</a></b> for
information on the format of this list).</dd>

<dt><a name="M63"><i>pathName</i> <b>index</b>
<i>index</i></a></dt>

<dd>Returns the numerical index corresponding to <i>index</i>, or
<b>none</b> if <i>index</i> was specified as <b>none</b>.</dd>

<dt><a name="M64"><i>pathName</i> <b>insert</b> <i>index</i>
<i>type</i> ?<i>option value option value ...</i>?</a></dt>

<dd>Same as the <b>add</b> widget command except that it inserts
the new entry just before the entry given by <i>index</i>, instead
of appending to the end of the menu. The <i>type</i>,
<i>option</i>, and <i>value</i> arguments have the same
interpretation as for the <b>add</b> widget command. It is not
possible to insert new menu entries before the tear-off entry, if
the menu has one.</dd>

<dt><a name="M65"><i>pathName</i> <b>invoke</b>
<i>index</i></a></dt>

<dd>Invoke the action of the menu entry. See the sections on the
individual entries above for details on what happens. If the menu
entry is disabled then nothing happens. If the entry has a command
associated with it then the result of that command is returned as
the result of the <b>invoke</b> widget command. Otherwise the
result is an empty string. Note: invoking a menu entry does not
automatically unpost the menu; the default bindings normally take
care of this before invoking the <b>invoke</b> widget command.</dd>

<dt><a name="M66"><i>pathName</i> <b>post</b> <i>x y</i></a></dt>

<dd>Arrange for the menu to be displayed on the screen at the
root-window coordinates given by <i>x</i> and <i>y</i>. These
coordinates are adjusted if necessary to guarantee that the entire
menu is visible on the screen. This command normally returns an
empty string. If the <b>postCommand</b> option has been specified,
then its value is executed as a Tcl script before posting the menu
and the result of that script is returned as the result of the
<b>post</b> widget command. If an error returns while executing the
command, then the error is returned without posting the menu.</dd>

<dt><a name="M67"><i>pathName</i> <b>postcascade</b>
<i>index</i></a></dt>

<dd>Posts the submenu associated with the cascade entry given by
<i>index</i>, and unposts any previously posted submenu. If
<i>index</i> doesn't correspond to a cascade entry, or if
<i>pathName</i> isn't posted, the command has no effect except to
unpost any currently posted submenu.</dd>

<dt><a name="M68"><i>pathName</i> <b>type</b> <i>index</i></a></dt>

<dd>Returns the type of the menu entry given by <i>index</i>. This
is the <i>type</i> argument passed to the <b>add</b> widget command
when the entry was created, such as <b>command</b> or
<b>separator</b>, or <b>tearoff</b> for a tear-off entry.</dd>

<dt><a name="M69">.VS</a></dt>

<dd><i>pathName</i> <b>unpost</b> Unmap the window so that it is no
longer displayed. If a lower-level cascaded menu is posted, unpost
that menu. Returns an empty string. This subcommand does not work
on Windows and the Macintosh, as those platforms have their own way
of unposting menus.</dd>

<dt><a name="M70"><i>pathName</i> <b>yposition</b>
<i>index</i></a></dt>

<dd>Returns a decimal string giving the y-coordinate within the
menu window of the topmost pixel in the entry specified by
<i>index</i>.</dd>
</dl>

<h3><a name="M71">MENU CONFIGURATIONS</a></h3>

<p>The default bindings support four different ways of using
menus:</p>

<dl>
<dt><a name="M72"><b>Pulldown Menus in Menubar</b></a></dt>

<dd>This is the most command case. You create a menu widget that
will become the menu bar. You then add cascade entries to this
menu, specifying the pull down menus you wish to use in your menu
bar. You then create all of the pulldowns. Once you have done this,
specify the menu using the <b>-menu</b> option of the toplevel's
widget command. See the <b><a href=
"../TkCmd/toplevel.htm">toplevel</a></b> manual entry for
details.</dd>

<dt><a name="M73"><b>Pulldown Menus in Menu Buttons</b></a></dt>

<dd>This is the compatable way to do menu bars. You create one
menubutton widget for each top-level menu, and typically you
arrange a series of menubuttons in a row in a menubar window. You
also create the top-level menus and any cascaded submenus, and tie
them together with <b>-menu</b> options in menubuttons and cascade
menu entries. The top-level menu must be a child of the menubutton,
and each submenu must be a child of the menu that refers to it.
Once you have done this, the default bindings will allow users to
traverse and invoke the tree of menus via its menubutton; see the
<b><a href="../TkCmd/menubutton.htm">menubutton</a></b> manual
entry for details.</dd>

<dt><a name="M74"><b>Popup Menus</b></a></dt>

<dd>Popup menus typically post in response to a mouse button press
or keystroke. You create the popup menus and any cascaded submenus,
then you call the <b><a href="../TkCmd/popup.htm">tk_popup</a></b>
procedure at the appropriate time to post the top-level menu.</dd>

<dt><a name="M75"><b>Option Menus</b></a></dt>

<dd>An option menu consists of a menubutton with an associated menu
that allows you to select one of several values. The current value
is displayed in the menubutton and is also stored in a global
variable. Use the <b>tk_optionMenu</b> procedure to create option
menubuttons and their menus.</dd>

<dt><a name="M76"><b>Torn-off Menus</b></a></dt>

<dd>You create a torn-off menu by invoking the tear-off entry at
the top of an existing menu. The default bindings will create a new
menu that is a copy of the original menu and leave it permanently
posted as a top-level window. The torn-off menu behaves just the
same as the original menu.</dd>
</dl>

<h3><a name="M77">DEFAULT BINDINGS</a></h3>

<p>Tk automatically creates class bindings for menus that give them
the following default behavior:</p>

<dl>
<dt>[1]</dt>

<dd>When the mouse enters a menu, the entry underneath the mouse
cursor activates; as the mouse moves around the menu, the active
entry changes to track the mouse.</dd>

<dt>[2]</dt>

<dd>When the mouse leaves a menu all of the entries in the menu
deactivate, except in the special case where the mouse moves from a
menu to a cascaded submenu.</dd>

<dt>[3]</dt>

<dd>When a button is released over a menu, the active entry (if
any) is invoked. The menu also unposts unless it is a torn-off
menu.</dd>

<dt>[4]</dt>

<dd>The Space and Return keys invoke the active entry and unpost
the menu.</dd>

<dt>[5]</dt>

<dd>If any of the entries in a menu have letters underlined with
with <b>-underline</b> option, then pressing one of the underlined
letters (or its upper-case or lower-case equivalent) invokes that
entry and unposts the menu.</dd>

<dt>[6]</dt>

<dd>The Escape key aborts a menu selection in progress without
invoking any entry. It also unposts the menu unless it is a
torn-off menu.</dd>

<dt>[7]</dt>

<dd>The Up and Down keys activate the next higher or lower entry in
the menu. When one end of the menu is reached, the active entry
wraps around to the other end.</dd>

<dt>[8]</dt>

<dd>The Left key moves to the next menu to the left. If the current
menu is a cascaded submenu, then the submenu is unposted and the
current menu entry becomes the cascade entry in the parent. If the
current menu is a top-level menu posted from a menubutton, then the
current menubutton is unposted and the next menubutton to the left
is posted. Otherwise the key has no effect. The left-right order of
menubuttons is determined by their stacking order: Tk assumes that
the lowest menubutton (which by default is the first one created)
is on the left.</dd>

<dt>[9]</dt>

<dd>The Right key moves to the next menu to the right. If the
current entry is a cascade entry, then the submenu is posted and
the current menu entry becomes the first entry in the submenu.
Otherwise, if the current menu was posted from a menubutton, then
the current menubutton is unposted and the next menubutton to the
right is posted.</dd>
</dl>

<p>Disabled menu entries are non-responsive: they don't activate
and they ignore mouse button presses and releases.</p>

<p>Several of the bindings make use of the command
<b>tk_menuSetFocus</b>. It saves the current focus and sets the
focus to its <i>pathName</i> argument, which is a menu widget.</p>

<p>The behavior of menus can be changed by defining new bindings
for individual widgets or by redefining the class bindings.</p>

<h3><a name="M78">BUGS</a></h3>

<p>At present it isn't possible to use the option database to
specify values for the options to individual entries.</p>

<h3><a name="M79">KEYWORDS</a></h3>

<p><a href="../Keywords/M.htm#menu">menu</a>, <a href=
"../Keywords/W.htm#widget">widget</a></p>

<hr>
<pre>
<a href=
"../copyright.htm">Copyright</a> &copy; 1990-1994 The Regents of the University of California.
<a href=
"../copyright.htm">Copyright</a> &copy; 1994-1997 Sun Microsystems, Inc.
<a href=
"../copyright.htm">Copyright</a> &copy; 1995-1997 Roger E. Critchlow Jr.
</pre>
</body>
</html>

