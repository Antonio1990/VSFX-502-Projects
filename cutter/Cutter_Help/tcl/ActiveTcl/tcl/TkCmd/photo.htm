<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tk Built-In Commands - photo manual page</title>
</head>
<body>
<table width='100%' border='0' cellspacing='0' cellpadding='0'
bgcolor='EAE2BB'>
<tr>
<td><a target='_blank' href=
'http://www.ActiveState.com/Products/ActiveTcl'><img src=
'../../images/ActiveTcl.gif' border='0' align='left' height='61'
width='64'></a> </td>
<td>
<div align='center' class='heading'>ActiveTcl User Guide</div>
</td>
<td><a target='_blank' href='http://www.ActiveState.com'><img src=
'../../images/AS_logo.gif' border='0' align='right' height='48'
width='112'></a> </td>
</tr>

<tr>
<td class='lineColour' colspan='3'></td>
</tr>
</table>

<br>
<dl>
<dd><a href="photo.htm#M2" name="L959">NAME</a> 

<dl>
<dd>photo - Full-color images</dd>
</dl>
</dd>

<dd><a href="photo.htm#M3" name="L960">SYNOPSIS</a> 

<dl>
<dd><b>image create photo</b> ?<i>name</i>? ?<i>options</i>?</dd>
</dl>
</dd>

<dd><a href="photo.htm#M4" name="L961">DESCRIPTION</a></dd>

<dd><a href="photo.htm#M5" name="L962">CREATING PHOTOS</a> 

<dl>
<dd><a href="photo.htm#M6" name="L963"><b>-data</b>
<i>string</i></a></dd>

<dd><a href="photo.htm#M7" name="L964"><b>-format</b>
<i>format-name</i></a></dd>

<dd><a href="photo.htm#M8" name="L965"><b>-file</b>
<i>name</i></a></dd>

<dd><a href="photo.htm#M9" name="L966"><b>-gamma</b>
<i>value</i></a></dd>

<dd><a href="photo.htm#M10" name="L967"><b>-height</b>
<i>number</i></a></dd>

<dd><a href="photo.htm#M11" name="L968"><b>-palette</b>
<i>palette-spec</i></a></dd>

<dd><a href="photo.htm#M12" name="L969"><b>-width</b>
<i>number</i></a></dd>
</dl>
</dd>

<dd><a href="photo.htm#M13" name="L970">IMAGE COMMAND</a> 

<dl>
<dd><a href="photo.htm#M14" name="L971"><i>imageName</i>
<b>blank</b></a></dd>

<dd><a href="photo.htm#M15" name="L972"><i>imageName</i>
<b>cget</b> <i>option</i></a></dd>

<dd><a href="photo.htm#M16" name="L973"><i>imageName</i>
<b>configure</b> ?<i>option</i>? ?<i>value option value
...</i>?</a></dd>

<dd><a href="photo.htm#M17" name="L974"><i>imageName</i>
<b>copy</b> <i>sourceImage</i> ?<i>option value(s) ...</i>?</a> 

<dl>
<dd><a href="photo.htm#M18" name="L975"><b>-from</b> <i>x1 y1 x2
y2</i></a></dd>

<dd><a href="photo.htm#M19" name="L976"><b>-to</b> <i>x1 y1 x2
y2</i></a></dd>

<dd><a href="photo.htm#M20" name="L977"><b>-shrink</b></a></dd>

<dd><a href="photo.htm#M21" name="L978"><b>-zoom</b> <i>x
y</i></a></dd>

<dd><a href="photo.htm#M22" name="L979"><b>-subsample</b> <i>x
y</i></a></dd>

<dd><a href="photo.htm#M23" name="L980"><b>-compositingrule</b>
<i>rule</i></a></dd>
</dl>
</dd>

<dd><a href="photo.htm#M24" name="L981"><i>imageName</i> <b>data
?</b><i>option value(s) ...</i>?</a> 

<dl>
<dd><a href="photo.htm#M25" name="L982"><b>-background</b>
<i>color</i></a></dd>

<dd><a href="photo.htm#M26" name="L983"><b>-format</b>
<i>format-name</i></a></dd>

<dd><a href="photo.htm#M27" name="L984"><b>-from</b> <i>x1 y1 x2
y2</i></a></dd>

<dd><a href="photo.htm#M28" name="L985"><b>-grayscale</b></a></dd>
</dl>
</dd>

<dd><a href="photo.htm#M29" name="L986"><i>imageName</i> <b>get</b>
<i>x y</i></a></dd>

<dd><a href="photo.htm#M30" name="L987"><i>imageName</i> <b>put</b>
<i>data</i> ?<i>option value(s) ...</i>?</a> 

<dl>
<dd><a href="photo.htm#M31" name="L988"><b>-format</b>
<i>format-name</i></a></dd>

<dd><a href="photo.htm#M32" name="L989"><b>-to</b> <i>x1 y1</i>
?<i>x2 y2</i>?</a></dd>
</dl>
</dd>

<dd><a href="photo.htm#M33" name="L990"><i>imageName</i>
<b>read</b> <i>filename</i> ?<i>option value(s) ...</i>?</a> 

<dl>
<dd><a href="photo.htm#M34" name="L991"><b>-format</b>
<i>format-name</i></a></dd>

<dd><a href="photo.htm#M35" name="L992"><b>-from</b> <i>x1 y1 x2
y2</i></a></dd>

<dd><a href="photo.htm#M36" name="L993"><b>-shrink</b></a></dd>

<dd><a href="photo.htm#M37" name="L994"><b>-to</b> <i>x
y</i></a></dd>
</dl>
</dd>

<dd><a href="photo.htm#M38" name="L995"><i>imageName</i>
<b>redither</b></a></dd>

<dd><a href="photo.htm#M39" name="L996"><i>imageName</i>
<b>transparency</b> <i>subcommand ?arg arg ...?</i></a> 

<dl>
<dd><a href="photo.htm#M40" name="L997"><i>imageName</i>
<b>transparency get</b> <i>x y</i></a></dd>
</dl>
</dd>

<dd><a href="photo.htm#M41" name="L998"><i>imageName</i>
<b>write</b> <i>filename</i> ?<i>option value(s) ...</i>?</a> 

<dl>
<dd><a href="photo.htm#M42" name="L999"><b>-background</b>
<i>color</i></a></dd>

<dd><a href="photo.htm#M43" name="L1000"><b>-format</b>
<i>format-name</i></a></dd>

<dd><a href="photo.htm#M44" name="L1001"><b>-from</b> <i>x1 y1 x2
y2</i></a></dd>

<dd><a href="photo.htm#M45" name="L1002"><b>-grayscale</b></a></dd>
</dl>
</dd>
</dl>
</dd>

<dd><a href="photo.htm#M46" name="L1003">IMAGE FORMATS</a></dd>

<dd><a href="photo.htm#M47" name="L1004">COLOR ALLOCATION</a></dd>

<dd><a href="photo.htm#M48" name="L1005">CREDITS</a></dd>

<dd><a href="photo.htm#M49" name="L1006">KEYWORDS</a></dd>
</dl>

<hr>
<h3><a name="M2">NAME</a></h3>

<p>photo - Full-color images</p>

<h3><a name="M3">SYNOPSIS</a></h3>

<p><b>image create photo</b> ?<i>name</i>? ?<i>options</i>?<br>
</p>

<h3><a name="M4">DESCRIPTION</a></h3>

<p>A photo is an image whose pixels can display any color or be
transparent. A photo image is stored internally in full color (32
bits per pixel), and is displayed using dithering if necessary.
Image data for a photo image can be obtained from a file or a
string, or it can be supplied from C code through a procedural
interface. At present, only GIF and PPM/PGM formats are supported,
but an interface exists to allow additional image file formats to
be added easily. A photo image is transparent in regions where no
image data has been supplied or where it has been set transparent
by the <b>transparency set</b> subcommand.</p>

<h3><a name="M5">CREATING PHOTOS</a></h3>

<p>Like all images, photos are created using the <b><a href=
"../TkCmd/image.htm">image create</a></b> command. Photos support
the following <i>options</i>:</p>

<dl>
<dt><a name="M6"><b>-data</b> <i>string</i></a></dt>

<dd>Specifies the contents of the image as a string. The string can
contain base64 encoded data or binary data. The format of the
string must be one of those for which there is an image file format
handler that will accept string data. If both the <b>-data</b> and
<b>-file</b> options are specified, the <b>-file</b> option takes
precedence.</dd>

<dt><a name="M7"><b>-format</b> <i>format-name</i></a></dt>

<dd>Specifies the name of the file format for the data specified
with the <b>-data</b> or <b>-file</b> option.</dd>

<dt><a name="M8"><b>-file</b> <i>name</i></a></dt>

<dd><i>name</i> gives the name of a file that is to be read to
supply data for the photo image. The file format must be one of
those for which there is an image file format handler that can read
data.</dd>

<dt><a name="M9"><b>-gamma</b> <i>value</i></a></dt>

<dd>Specifies that the colors allocated for displaying this image
in a window should be corrected for a non-linear display with the
specified gamma exponent value. (The intensity produced by most CRT
displays is a power function of the input value, to a good
approximation; gamma is the exponent and is typically around 2).
The value specified must be greater than zero. The default value is
one (no correction). In general, values greater than one will make
the image lighter, and values less than one will make it
darker.</dd>

<dt><a name="M10"><b>-height</b> <i>number</i></a></dt>

<dd>Specifies the height of the image, in pixels. This option is
useful primarily in situations where the user wishes to build up
the contents of the image piece by piece. A value of zero (the
default) allows the image to expand or shrink vertically to fit the
data stored in it.</dd>

<dt><a name="M11"><b>-palette</b> <i>palette-spec</i></a></dt>

<dd>Specifies the resolution of the color cube to be allocated for
displaying this image, and thus the number of colors used from the
colormaps of the windows where it is displayed. The
<i>palette-spec</i> string may be either a single decimal number,
specifying the number of shades of gray to use, or three decimal
numbers separated by slashes (/), specifying the number of shades
of red, green and blue to use, respectively. If the first form (a
single number) is used, the image will be displayed in monochrome
(i.e., grayscale).</dd>

<dt><a name="M12"><b>-width</b> <i>number</i></a></dt>

<dd>Specifies the width of the image, in pixels. This option is
useful primarily in situations where the user wishes to build up
the contents of the image piece by piece. A value of zero (the
default) allows the image to expand or shrink horizontally to fit
the data stored in it.</dd>
</dl>

<h3><a name="M13">IMAGE COMMAND</a></h3>

<p>When a photo image is created, Tk also creates a new command
whose name is the same as the image. This command may be used to
invoke various operations on the image. It has the following
general form:</p>

<pre>
<i>imageName option</i> ?<i>arg arg ...</i>?
</pre>

<p><i>Option</i> and the <i>arg</i>s determine the exact behavior
of the command.</p>

<p>Those options that write data to the image generally expand the
size of the image, if necessary, to accommodate the data written to
the image, unless the user has specified non-zero values for the
<b>-width</b> and/or <b>-height</b> configuration options, in which
case the width and/or height, respectively, of the image will not
be changed.</p>

<p>The following commands are possible for photo images:</p>

<dl>
<dt><a name="M14"><i>imageName</i> <b>blank</b></a></dt>

<dd>Blank the image; that is, set the entire image to have no data,
so it will be displayed as transparent, and the background of
whatever window it is displayed in will show through.</dd>

<dt><a name="M15"><i>imageName</i> <b>cget</b>
<i>option</i></a></dt>

<dd>Returns the current value of the configuration option given by
<i>option</i>. <i>Option</i> may have any of the values accepted by
the <b>image create photo</b> command.</dd>

<dt><a name="M16"><i>imageName</i> <b>configure</b> ?<i>option</i>?
?<i>value option value ...</i>?</a></dt>

<dd>Query or modify the configuration options for the image. If no
<i>option</i> is specified, returns a list describing all of the
available options for <i>imageName</i> (see <b><a href=
"../TkLib/ConfigWidg.htm">Tk_ConfigureInfo</a></b> for information
on the format of this list). If <i>option</i> is specified with no
<i>value</i>, then the command returns a list describing the one
named option (this list will be identical to the corresponding
sublist of the value returned if no <i>option</i> is specified). If
one or more <i>option-value</i> pairs are specified, then the
command modifies the given option(s) to have the given value(s); in
this case the command returns an empty string. <i>Option</i> may
have any of the values accepted by the <b>image create photo</b>
command.</dd>

<dt><a name="M17"><i>imageName</i> <b>copy</b> <i>sourceImage</i>
?<i>option value(s) ...</i>?</a></dt>

<dd>Copies a region from the image called <i>sourceImage</i> (which
must be a photo image) to the image called <i>imageName</i>,
possibly with pixel zooming and/or subsampling. If no options are
specified, this command copies the whole of <i>sourceImage</i> into
<i>imageName</i>, starting at coordinates (0,0) in
<i>imageName</i>. The following options may be specified: 

<dl>
<dt><a name="M18"><b>-from</b> <i>x1 y1 x2 y2</i></a></dt>

<dd>Specifies a rectangular sub-region of the source image to be
copied. (<i>x1,y1</i>) and (<i>x2,y2</i>) specify diagonally
opposite corners of the rectangle. If <i>x2</i> and <i>y2</i> are
not specified, the default value is the bottom-right corner of the
source image. The pixels copied will include the left and top edges
of the specified rectangle but not the bottom or right edges. If
the <b>-from</b> option is not given, the default is the whole
source image.</dd>

<dt><a name="M19"><b>-to</b> <i>x1 y1 x2 y2</i></a></dt>

<dd>Specifies a rectangular sub-region of the destination image to
be affected. (<i>x1,y1</i>) and (<i>x2,y2</i>) specify diagonally
opposite corners of the rectangle. If <i>x2</i> and <i>y2</i> are
not specified, the default value is (<i>x1,y1</i>) plus the size of
the source region (after subsampling and zooming, if specified). If
<i>x2</i> and <i>y2</i> are specified, the source region will be
replicated if necessary to fill the destination region in a tiled
fashion.</dd>

<dt><a name="M20"><b>-shrink</b></a></dt>

<dd>Specifies that the size of the destination image should be
reduced, if necessary, so that the region being copied into is at
the bottom-right corner of the image. This option will not affect
the width or height of the image if the user has specified a
non-zero value for the <b>-width</b> or <b>-height</b>
configuration option, respectively.</dd>

<dt><a name="M21"><b>-zoom</b> <i>x y</i></a></dt>

<dd>Specifies that the source region should be magnified by a
factor of <i>x</i> in the X direction and <i>y</i> in the Y
direction. If <i>y</i> is not given, the default value is the same
as <i>x</i>. With this option, each pixel in the source image will
be expanded into a block of <i>x</i> x <i>y</i> pixels in the
destination image, all the same color. <i>x</i> and <i>y</i> must
be greater than 0.</dd>

<dt><a name="M22"><b>-subsample</b> <i>x y</i></a></dt>

<dd>Specifies that the source image should be reduced in size by
using only every <i>x</i>th pixel in the X direction and <i>y</i>th
pixel in the Y direction. Negative values will cause the image to
be flipped about the Y or X axes, respectively. If <i>y</i> is not
given, the default value is the same as <i>x</i>.</dd>

<dt><a name="M23"><b>-compositingrule</b> <i>rule</i></a></dt>

<dd>Specifies how transparent pixels in the source image are
combined with the destination image. When a compositing rule of
<i>overlay</i> is set, the old contents of the destination image
are visible, as if the source image were printed on a piece of
transparent film and placed over the top of the destination. When a
compositing rule of <i>set</i> is set, the old contents of the
destination image are discarded and the source image is used as-is.
The default compositing rule is <i>overlay</i>.</dd>
</dl>
</dd>

<dt><a name="M24"><i>imageName</i> <b>data ?</b><i>option value(s)
...</i>?</a></dt>

<dd>Returns image data in the form of a string. The following
options may be specified: 

<dl>
<dt><a name="M25"><b>-background</b> <i>color</i></a></dt>

<dd>If the color is specified, the data will not contain any
transparency information. In all transparent pixels the color will
be replaced by the specified color.</dd>

<dt><a name="M26"><b>-format</b> <i>format-name</i></a></dt>

<dd>Specifies the name of the image file format handler to be used.
Specifically, this subcommand searches for the first handler whose
name matches a initial substring of <i>format-name</i> and which
has the capability to read this image data. If this option is not
given, this subcommand uses the first handler that has the
capability to read the image data.</dd>

<dt><a name="M27"><b>-from</b> <i>x1 y1 x2 y2</i></a></dt>

<dd>Specifies a rectangular region of <i>imageName</i> to be
returned. If only <i>x1</i> and <i>y1</i> are specified, the region
extends from <i>(x1,y1)</i> to the bottom-right corner of
<i>imageName</i>. If all four coordinates are given, they specify
diagonally opposite corners of the rectangular region, including
x1,y1 and excluding x2,y2. The default, if this option is not
given, is the whole image.</dd>

<dt><a name="M28"><b>-grayscale</b></a></dt>

<dd>If this options is specified, the data will not contain color
information. All pixel data will be transformed into
grayscale.</dd>
</dl>
</dd>

<dt><a name="M29"><i>imageName</i> <b>get</b> <i>x y</i></a></dt>

<dd>Returns the color of the pixel at coordinates
(<i>x</i>,<i>y</i>) in the image as a list of three integers
between 0 and 255, representing the red, green and blue components
respectively.</dd>

<dt><a name="M30"><i>imageName</i> <b>put</b> <i>data</i>
?<i>option value(s) ...</i>?</a></dt>

<dd>Sets pixels in <i>imageName</i> to the data specified in
<i>data</i>. This command first searches the list of image file
format handlers for a handler that can interpret the data in
<i>data</i>, and then reads the image encoded within into
<i>imageName</i> (the destination image). Note that <i>data</i> may
also be a single color name if you wish to fill a rectangular
region with that color. The following options may be specified: 

<dl>
<dt><a name="M31"><b>-format</b> <i>format-name</i></a></dt>

<dd>Specifies the format of the image data in <i>data</i>.
Specifically, only image file format handlers whose names begin
with <i>format-name</i> will be used while searching for an image
data format handler to read the data.</dd>

<dt><a name="M32"><b>-to</b> <i>x1 y1</i> ?<i>x2 y2</i>?</a></dt>

<dd>Specifies the coordinates of the top-left corner
(<i>x1</i>,<i>y1</i>) of the region of <i>imageName</i> into which
data from <i>filename</i> are to be read. The default is (0,0). If
<i>x2</i>,<i>y2</i> is given and <i>data</i> is one color value,
then a region extending to the bottom-right corner represented by
(<i>x2</i>,<i>y2</i>) will be filled with that color.</dd>
</dl>
</dd>

<dt><a name="M33"><i>imageName</i> <b>read</b> <i>filename</i>
?<i>option value(s) ...</i>?</a></dt>

<dd>Reads image data from the file named <i>filename</i> into the
image. This command first searches the list of image file format
handlers for a handler that can interpret the data in
<i>filename</i>, and then reads the image in <i>filename</i> into
<i>imageName</i> (the destination image). The following options may
be specified: 

<dl>
<dt><a name="M34"><b>-format</b> <i>format-name</i></a></dt>

<dd>Specifies the format of the image data in <i>filename</i>.
Specifically, only image file format handlers whose names begin
with <i>format-name</i> will be used while searching for an image
data format handler to read the data.</dd>

<dt><a name="M35"><b>-from</b> <i>x1 y1 x2 y2</i></a></dt>

<dd>Specifies a rectangular sub-region of the image file data to be
copied to the destination image. If only <i>x1</i> and <i>y1</i>
are specified, the region extends from (<i>x1,y1</i>) to the
bottom-right corner of the image in the image file. If all four
coordinates are specified, they specify diagonally opposite corners
or the region. The default, if this option is not specified, is the
whole of the image in the image file.</dd>

<dt><a name="M36"><b>-shrink</b></a></dt>

<dd>If this option, the size of <i>imageName</i> will be reduced,
if necessary, so that the region into which the image file data are
read is at the bottom-right corner of the <i>imageName</i>. This
option will not affect the width or height of the image if the user
has specified a non-zero value for the <b>-width</b> or
<b>-height</b> configuration option, respectively.</dd>

<dt><a name="M37"><b>-to</b> <i>x y</i></a></dt>

<dd>Specifies the coordinates of the top-left corner of the region
of <i>imageName</i> into which data from <i>filename</i> are to be
read. The default is (0,0).</dd>
</dl>
</dd>

<dt><a name="M38"><i>imageName</i> <b>redither</b></a></dt>

<dd>The dithering algorithm used in displaying photo images
propagates quantization errors from one pixel to its neighbors. If
the image data for <i>imageName</i> is supplied in pieces, the
dithered image may not be exactly correct. Normally the difference
is not noticeable, but if it is a problem, this command can be used
to recalculate the dithered image in each window where the image is
displayed.</dd>

<dt><a name="M39"><i>imageName</i> <b>transparency</b>
<i>subcommand ?arg arg ...?</i></a></dt>

<dd>Allows examination and manipulation of the transparency
information in the photo image. Several subcommands are available: 

<dl>
<dt><a name="M40"><i>imageName</i> <b>transparency get</b> <i>x
y</i></a></dt>

<dd>Returns a boolean indicating if the pixel at
(<i>x</i>,<i>y</i>) is transparent. <i>imageName</i>
<b>transparency set</b> <i>x y boolean</i> Makes the pixel at
(<i>x</i>,<i>y</i>) transparent if <i>boolean</i> is true, and
makes that pixel opaque otherwise.</dd>
</dl>
</dd>

<dt><a name="M41"><i>imageName</i> <b>write</b> <i>filename</i>
?<i>option value(s) ...</i>?</a></dt>

<dd>Writes image data from <i>imageName</i> to a file named
<i>filename</i>. The following options may be specified: 

<dl>
<dt><a name="M42"><b>-background</b> <i>color</i></a></dt>

<dd>If the color is specified, the data will not contain any
transparency information. In all transparent pixels the color will
be replaced by the specified color.</dd>

<dt><a name="M43"><b>-format</b> <i>format-name</i></a></dt>

<dd>Specifies the name of the image file format handler to be used
to write the data to the file. Specifically, this subcommand
searches for the first handler whose name matches a initial
substring of <i>format-name</i> and which has the capability to
write an image file. If this option is not given, this subcommand
uses the first handler that has the capability to write an image
file.</dd>

<dt><a name="M44"><b>-from</b> <i>x1 y1 x2 y2</i></a></dt>

<dd>Specifies a rectangular region of <i>imageName</i> to be
written to the image file. If only <i>x1</i> and <i>y1</i> are
specified, the region extends from <i>(x1,y1)</i> to the
bottom-right corner of <i>imageName</i>. If all four coordinates
are given, they specify diagonally opposite corners of the
rectangular region. The default, if this option is not given, is
the whole image.</dd>

<dt><a name="M45"><b>-grayscale</b></a></dt>

<dd>If this options is specified, the data will not contain color
information. All pixel data will be transformed into
grayscale.</dd>
</dl>
</dd>
</dl>

<h3><a name="M46">IMAGE FORMATS</a></h3>

<p>The photo image code is structured to allow handlers for
additional image file formats to be added easily. The photo image
code maintains a list of these handlers. Handlers are added to the
list by registering them with a call to <b><a href=
"../TkLib/CrtPhImgFmt.htm">Tk_CreatePhotoImageFormat</a></b>. The
standard Tk distribution comes with handlers for PPM/PGM and GIF
formats, which are automatically registered on initialization.</p>

<p>When reading an image file or processing string data specified
with the <b>-data</b> configuration option, the photo image code
invokes each handler in turn until one is found that claims to be
able to read the data in the file or string. Usually this will find
the correct handler, but if it doesn't, the user may give a format
name with the <b>-format</b> option to specify which handler to
use. In fact the photo image code will try those handlers whose
names begin with the string specified for the <b>-format</b> option
(the comparison is case-insensitive). For example, if the user
specifies <b>-format gif</b>, then a handler named GIF87 or GIF89
may be invoked, but a handler named JPEG may not (assuming that
such handlers had been registered).</p>

<p>When writing image data to a file, the processing of the
<b>-format</b> option is slightly different: the string value given
for the <b>-format</b> option must begin with the complete name of
the requested handler, and may contain additional information
following that, which the handler can use, for example, to specify
which variant to use of the formats supported by the handler. Note
that not all image handlers may support writing transparency data
to a file, even where the target image format does.</p>

<h3><a name="M47">COLOR ALLOCATION</a></h3>

<p>When a photo image is displayed in a window, the photo image
code allocates colors to use to display the image and dithers the
image, if necessary, to display a reasonable approximation to the
image using the colors that are available. The colors are allocated
as a color cube, that is, the number of colors allocated is the
product of the number of shades of red, green and blue.</p>

<p>Normally, the number of colors allocated is chosen based on the
depth of the window. For example, in an 8-bit PseudoColor window,
the photo image code will attempt to allocate seven shades of red,
seven shades of green and four shades of blue, for a total of 198
colors. In a 1-bit StaticGray (monochrome) window, it will allocate
two colors, black and white. In a 24-bit DirectColor or TrueColor
window, it will allocate 256 shades each of red, green and blue.
Fortunately, because of the way that pixel values can be combined
in DirectColor and TrueColor windows, this only requires 256 colors
to be allocated. If not all of the colors can be allocated, the
photo image code reduces the number of shades of each primary color
and tries again.</p>

<p>The user can exercise some control over the number of colors
that a photo image uses with the <b>-palette</b> configuration
option. If this option is used, it specifies the maximum number of
shades of each primary color to try to allocate. It can also be
used to force the image to be displayed in shades of gray, even on
a color display, by giving a single number rather than three
numbers separated by slashes.</p>

<h3><a name="M48">CREDITS</a></h3>

<p>The photo image type was designed and implemented by Paul
Mackerras, based on his earlier photo widget and some suggestions
from John Ousterhout.</p>

<h3><a name="M49">KEYWORDS</a></h3>

<p><a href="../Keywords/P.htm#photo">photo</a>, <a href=
"../Keywords/I.htm#image">image</a>, <a href=
"../Keywords/C.htm#color">color</a></p>

<hr>
<pre>
<a href=
"../copyright.htm">Copyright</a> &copy; 1994 The Australian National University
<a href=
"../copyright.htm">Copyright</a> &copy; 1994-1997 Sun Microsystems, Inc.
<a href=
"../copyright.htm">Copyright</a> &copy; 1995-1997 Roger E. Critchlow Jr.
</pre>
</body>
</html>

