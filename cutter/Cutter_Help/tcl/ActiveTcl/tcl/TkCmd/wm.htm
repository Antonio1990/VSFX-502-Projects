<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tk Built-In Commands - wm manual page</title>
</head>
<body>
<table width='100%' border='0' cellspacing='0' cellpadding='0'
bgcolor='EAE2BB'>
<tr>
<td><a target='_blank' href=
'http://www.ActiveState.com/Products/ActiveTcl'><img src=
'../../images/ActiveTcl.gif' border='0' align='left' height='61'
width='64'></a> </td>
<td>
<div align='center' class='heading'>ActiveTcl User Guide</div>
</td>
<td><a target='_blank' href='http://www.ActiveState.com'><img src=
'../../images/AS_logo.gif' border='0' align='right' height='48'
width='112'></a> </td>
</tr>

<tr>
<td class='lineColour' colspan='3'></td>
</tr>
</table>

<br>
<dl>
<dd><a href="wm.htm#M2" name="L1475">NAME</a> 

<dl>
<dd>wm - Communicate with window manager</dd>
</dl>
</dd>

<dd><a href="wm.htm#M3" name="L1476">SYNOPSIS</a> 

<dl>
<dd><b>wm</b> <i>option window</i> ?<i>args</i>?</dd>
</dl>
</dd>

<dd><a href="wm.htm#M4" name="L1477">DESCRIPTION</a> 

<dl>
<dd><a href="wm.htm#M5" name="L1478"><b>wm aspect</b> <i>window</i>
?<i>minNumer minDenom maxNumer maxDenom</i>?</a></dd>

<dd><a href="wm.htm#M6" name="L1479"><b>wm attributes</b>
<i>window</i></a></dd>

<dd><a href="wm.htm#M7" name="L1480"><b>wm attributes</b>
<i>window</i> ?<b>option</b>?</a></dd>

<dd><a href="wm.htm#M8" name="L1481"><b>wm attributes</b>
<i>window</i> ?<b>option value option value...</b>?</a></dd>

<dd><a href="wm.htm#M9" name="L1482"><b>wm client</b> <i>window</i>
?<i>name</i>?</a></dd>

<dd><a href="wm.htm#M10" name="L1483"><b>wm colormapwindows</b>
<i>window</i> ?<i>windowList</i>?</a></dd>

<dd><a href="wm.htm#M11" name="L1484"><b>wm command</b>
<i>window</i> ?<i>value</i>?</a></dd>

<dd><a href="wm.htm#M12" name="L1485"><b>wm deiconify</b>
<i>window</i></a></dd>

<dd><a href="wm.htm#M13" name="L1486"><b>wm focusmodel</b>
<i>window</i> ?<b>active</b>|<b>passive</b>?</a></dd>

<dd><a href="wm.htm#M14" name="L1487"><b>wm frame</b>
<i>window</i></a></dd>

<dd><a href="wm.htm#M15" name="L1488"><b>wm geometry</b>
<i>window</i> ?<i>newGeometry</i>?</a></dd>

<dd><a href="wm.htm#M16" name="L1489"><b>wm grid</b> <i>window</i>
?<i>baseWidth baseHeight widthInc heightInc</i>?</a></dd>

<dd><a href="wm.htm#M17" name="L1490"><b>wm group</b> <i>window</i>
?<i>pathName</i>?</a></dd>

<dd><a href="wm.htm#M18" name="L1491"><b>wm iconbitmap</b>
<i>window</i> ?<i>bitmap</i>?</a></dd>

<dd><a href="wm.htm#M19" name="L1492"><b>wm iconify</b>
<i>window</i></a></dd>

<dd><a href="wm.htm#M20" name="L1493"><b>wm iconmask</b>
<i>window</i> ?<i>bitmap</i>?</a></dd>

<dd><a href="wm.htm#M21" name="L1494"><b>wm iconname</b>
<i>window</i> ?<i>newName</i>?</a></dd>

<dd><a href="wm.htm#M22" name="L1495"><b>wm iconposition</b>
<i>window</i> ?<i>x y</i>?</a></dd>

<dd><a href="wm.htm#M23" name="L1496"><b>wm iconwindow</b>
<i>window</i> ?<i>pathName</i>?</a></dd>

<dd><a href="wm.htm#M24" name="L1497"><b>wm maxsize</b>
<i>window</i> ?<i>width height</i>?</a></dd>

<dd><a href="wm.htm#M25" name="L1498"><b>wm minsize</b>
<i>window</i> ?<i>width height</i>?</a></dd>

<dd><a href="wm.htm#M26" name="L1499"><b>wm overrideredirect</b>
<i>window</i> ?<i>boolean</i>?</a></dd>

<dd><a href="wm.htm#M27" name="L1500"><b>wm positionfrom</b>
<i>window</i> ?<i>who</i>?</a></dd>

<dd><a href="wm.htm#M28" name="L1501"><b>wm protocol</b>
<i>window</i> ?<i>name</i>? ?<i>command</i>?</a></dd>

<dd><a href="wm.htm#M29" name="L1502"><b>wm resizable</b>
<i>window</i> ?<i>width height</i>?</a></dd>

<dd><a href="wm.htm#M30" name="L1503"><b>wm sizefrom</b>
<i>window</i> ?<i>who</i>?</a></dd>

<dd><a href="wm.htm#M31" name="L1504"><b>wm stackorder</b>
<i>window</i> ?<i>isabove|isbelow window</i>?</a></dd>

<dd><a href="wm.htm#M32" name="L1505"><b>wm state</b> <i>window</i>
?newstate?</a></dd>

<dd><a href="wm.htm#M33" name="L1506"><b>wm title</b> <i>window</i>
?<i>string</i>?</a></dd>

<dd><a href="wm.htm#M34" name="L1507"><b>wm transient</b>
<i>window</i> ?<i>master</i>?</a></dd>

<dd><a href="wm.htm#M35" name="L1508"><b>wm withdraw</b>
<i>window</i></a></dd>
</dl>
</dd>

<dd><a href="wm.htm#M36" name="L1509">GEOMETRY MANAGEMENT</a></dd>

<dd><a href="wm.htm#M37" name="L1510">GRIDDED GEOMETRY
MANAGEMENT</a></dd>

<dd><a href="wm.htm#M38" name="L1511">BUGS</a></dd>

<dd><a href="wm.htm#M39" name="L1512">KEYWORDS</a></dd>
</dl>

<hr>
<h3><a name="M2">NAME</a></h3>

<p>wm - Communicate with window manager</p>

<h3><a name="M3">SYNOPSIS</a></h3>

<p><b>wm</b> <i>option window</i> ?<i>args</i>?<br>
</p>

<h3><a name="M4">DESCRIPTION</a></h3>

<p>The <b>wm</b> command is used to interact with window managers
in order to control such things as the title for a window, its
geometry, or the increments in terms of which it may be resized.
The <b>wm</b> command can take any of a number of different forms,
depending on the <i>option</i> argument. All of the forms expect at
least one additional argument, <i>window</i>, which must be the
path name of a top-level window.</p>

<p>The legal forms for the <b>wm</b> command are:</p>

<dl>
<dt><a name="M5"><b>wm aspect</b> <i>window</i> ?<i>minNumer
minDenom maxNumer maxDenom</i>?</a></dt>

<dd>If <i>minNumer</i>, <i>minDenom</i>, <i>maxNumer</i>, and
<i>maxDenom</i> are all specified, then they will be passed to the
window manager and the window manager should use them to enforce a
range of acceptable aspect ratios for <i>window</i>. The aspect
ratio of <i>window</i> (width/length) will be constrained to lie
between <i>minNumer</i>/<i>minDenom</i> and
<i>maxNumer</i>/<i>maxDenom</i>. If <i>minNumer</i> etc. are all
specified as empty strings, then any existing aspect ratio
restrictions are removed. If <i>minNumer</i> etc. are specified,
then the command returns an empty string. Otherwise, it returns a
Tcl list containing four elements, which are the current values of
<i>minNumer</i>, <i>minDenom</i>, <i>maxNumer</i>, and
<i>maxDenom</i> (if no aspect restrictions are in effect, then an
empty string is returned).</dd>

<dt><a name="M6"><b>wm attributes</b> <i>window</i></a></dt>

<dt><a name="M7"><b>wm attributes</b> <i>window</i>
?<b>option</b>?</a></dt>

<dt><a name="M8"><b>wm attributes</b> <i>window</i> ?<b>option
value option value...</b>?</a></dt>

<dd>
<dl>
<dd>This subcommand returns or sets platform specific attributes
associated with a window. The first form returns a list of the
platform specific flags and their values. The second form returns
the value for the specific option. The third form sets one or more
of the values. The values are as follows: 

<p>On Windows, <b>-disabled</b> gets or sets whether the window is
in a disabled state. <b>-toolwindow</b> gets or sets the style of
the window to toolwindow (as defined in the MSDN). <b>-topmost</b>
gets or sets whether this is a topmost window (displays above all
other windows).</p>

<p>On Macintosh,</p>

<p>On Unix, there are currently no special attribute values.</p>
</dd>
</dl>
</dd>

<dt><a name="M9"><b>wm client</b> <i>window</i>
?<i>name</i>?</a></dt>

<dd>If <i>name</i> is specified, this command stores <i>name</i>
(which should be the name of the host on which the application is
executing) in <i>window</i>'s <b>WM_CLIENT_MACHINE</b> property for
use by the window manager or session manager. The command returns
an empty string in this case. If <i>name</i> isn't specified, the
command returns the last name set in a <b>wm client</b> command for
<i>window</i>. If <i>name</i> is specified as an empty string, the
command deletes the <b>WM_CLIENT_MACHINE</b> property from
<i>window</i>.</dd>

<dt><a name="M10"><b>wm colormapwindows</b> <i>window</i>
?<i>windowList</i>?</a></dt>

<dd>This command is used to manipulate the
<b>WM_COLORMAP_WINDOWS</b> property, which provides information to
the window managers about windows that have private colormaps. If
<i>windowList</i> isn't specified, the command returns a list whose
elements are the names of the windows in the
<b>WM_COLORMAP_WINDOWS</b> property. If <i>windowList</i> is
specified, it consists of a list of window path names; the command
overwrites the <b>WM_COLORMAP_WINDOWS</b> property with the given
windows and returns an empty string. The <b>WM_COLORMAP_WINDOWS</b>
property should normally contain a list of the internal windows
within <i>window</i> whose colormaps differ from their parents. The
order of the windows in the property indicates a priority order:
the window manager will attempt to install as many colormaps as
possible from the head of this list when <i>window</i> gets the
colormap focus. If <i>window</i> is not included among the windows
in <i>windowList</i>, Tk implicitly adds it at the end of the
<b>WM_COLORMAP_WINDOWS</b> property, so that its colormap is lowest
in priority. If <b>wm colormapwindows</b> is not invoked, Tk will
automatically set the property for each top-level window to all the
internal windows whose colormaps differ from their parents,
followed by the top-level itself; the order of the internal windows
is undefined. See the ICCCM documentation for more information on
the <b>WM_COLORMAP_WINDOWS</b> property.</dd>

<dt><a name="M11"><b>wm command</b> <i>window</i>
?<i>value</i>?</a></dt>

<dd>If <i>value</i> is specified, this command stores <i>value</i>
in <i>window</i>'s <b>WM_COMMAND</b> property for use by the window
manager or session manager and returns an empty string.
<i>Value</i> must have proper list structure; the elements should
contain the words of the command used to invoke the application. If
<i>value</i> isn't specified then the command returns the last
value set in a <b>wm command</b> command for <i>window</i>. If
<i>value</i> is specified as an empty string, the command deletes
the <b>WM_COMMAND</b> property from <i>window</i>.</dd>

<dt><a name="M12"><b>wm deiconify</b> <i>window</i></a></dt>

<dd>Arrange for <i>window</i> to be displayed in normal
(non-iconified) form. This is done by mapping the window. If the
window has never been mapped then this command will not map the
window, but it will ensure that when the window is first mapped it
will be displayed in de-iconified form. On Windows, a deiconified
window will also be raised and be given the focus (made the active
window). Returns an empty string.</dd>

<dt><a name="M13"><b>wm focusmodel</b> <i>window</i>
?<b>active</b>|<b>passive</b>?</a></dt>

<dd>If <b>active</b> or <b>passive</b> is supplied as an optional
argument to the command, then it specifies the focus model for
<i>window</i>. In this case the command returns an empty string. If
no additional argument is supplied, then the command returns the
current focus model for <i>window</i>. An <b>active</b> focus model
means that <i>window</i> will claim the input focus for itself or
its descendants, even at times when the focus is currently in some
other application. <b>Passive</b> means that <i>window</i> will
never claim the focus for itself: the window manager should give
the focus to <i>window</i> at appropriate times. However, once the
focus has been given to <i>window</i> or one of its descendants,
the application may re-assign the focus among <i>window</i>'s
descendants. The focus model defaults to <b>passive</b>, and Tk's
<b><a href="../TkCmd/focus.htm">focus</a></b> command assumes a
passive model of focusing.</dd>

<dt><a name="M14"><b>wm frame</b> <i>window</i></a></dt>

<dd>If <i>window</i> has been reparented by the window manager into
a decorative frame, the command returns the platform specific
window identifier for the outermost frame that contains
<i>window</i> (the window whose parent is the root or virtual
root). If <i>window</i> hasn't been reparented by the window
manager then the command returns the platform specific window
identifier for <i>window</i>.</dd>

<dt><a name="M15"><b>wm geometry</b> <i>window</i>
?<i>newGeometry</i>?</a></dt>

<dd>If <i>newGeometry</i> is specified, then the geometry of
<i>window</i> is changed and an empty string is returned. Otherwise
the current geometry for <i>window</i> is returned (this is the
most recent geometry specified either by manual resizing or in a
<b>wm geometry</b> command). <i>NewGeometry</i> has the form
<b>=</b><i>width</i><b>x</b><i>height</i><b>&plusmn;</b><i>x</i><b>&plusmn;</b><i>
y</i>, where any of <b>=</b>, <i>width</i><b>x</b><i>height</i>, or
<b>&plusmn;</b><i>x</i><b>&plusmn;</b><i>y</i> may be omitted.
<i>Width</i> and <i>height</i> are positive integers specifying the
desired dimensions of <i>window</i>. If <i>window</i> is gridded
(see GRIDDED GEOMETRY MANAGEMENT below) then the dimensions are
specified in grid units; otherwise they are specified in pixel
units. <i>X</i> and <i>y</i> specify the desired location of
<i>window</i> on the screen, in pixels. If <i>x</i> is preceded by
<b>+</b>, it specifies the number of pixels between the left edge
of the screen and the left edge of <i>window</i>'s border; if
preceded by <b>-</b> then <i>x</i> specifies the number of pixels
between the right edge of the screen and the right edge of
<i>window</i>'s border. If <i>y</i> is preceded by <b>+</b> then it
specifies the number of pixels between the top of the screen and
the top of <i>window</i>'s border; if <i>y</i> is preceded by
<b>-</b> then it specifies the number of pixels between the bottom
of <i>window</i>'s border and the bottom of the screen. If
<i>newGeometry</i> is specified as an empty string then any
existing user-specified geometry for <i>window</i> is cancelled,
and the window will revert to the size requested internally by its
widgets.</dd>

<dt><a name="M16"><b>wm grid</b> <i>window</i> ?<i>baseWidth
baseHeight widthInc heightInc</i>?</a></dt>

<dd>This command indicates that <i>window</i> is to be managed as a
gridded window. It also specifies the relationship between grid
units and pixel units. <i>BaseWidth</i> and <i>baseHeight</i>
specify the number of grid units corresponding to the pixel
dimensions requested internally by <i>window</i> using <b><a href=
"../TkLib/GeomReq.htm">Tk_GeometryRequest</a></b>. <i>WidthInc</i>
and <i>heightInc</i> specify the number of pixels in each
horizontal and vertical grid unit. These four values determine a
range of acceptable sizes for <i>window</i>, corresponding to
grid-based widths and heights that are non-negative integers. Tk
will pass this information to the window manager; during manual
resizing, the window manager will restrict the window's size to one
of these acceptable sizes. Furthermore, during manual resizing the
window manager will display the window's current size in terms of
grid units rather than pixels. If <i>baseWidth</i> etc. are all
specified as empty strings, then <i>window</i> will no longer be
managed as a gridded window. If <i>baseWidth</i> etc. are specified
then the return value is an empty string. Otherwise the return
value is a Tcl list containing four elements corresponding to the
current <i>baseWidth</i>, <i>baseHeight</i>, <i>widthInc</i>, and
<i>heightInc</i>; if <i>window</i> is not currently gridded, then
an empty string is returned. Note: this command should not be
needed very often, since the <b><a href=
"../TkLib/SetGrid.htm">Tk_SetGrid</a></b> library procedure and the
<b>setGrid</b> option provide easier access to the same
functionality.</dd>

<dt><a name="M17"><b>wm group</b> <i>window</i>
?<i>pathName</i>?</a></dt>

<dd>If <i>pathName</i> is specified, it gives the path name for the
leader of a group of related windows. The window manager may use
this information, for example, to unmap all of the windows in a
group when the group's leader is iconified. <i>PathName</i> may be
specified as an empty string to remove <i>window</i> from any group
association. If <i>pathName</i> is specified then the command
returns an empty string; otherwise it returns the path name of
<i>window</i>'s current group leader, or an empty string if
<i>window</i> isn't part of any group.</dd>

<dt><a name="M18"><b>wm iconbitmap</b> <i>window</i>
?<i>bitmap</i>?</a></dt>

<dd>If <i>bitmap</i> is specified, then it names a bitmap in the
standard forms accepted by Tk (see the <b><a href=
"../TkLib/GetBitmap.htm">Tk_GetBitmap</a></b> manual entry for
details). This bitmap is passed to the window manager to be
displayed in <i>window</i>'s icon, and the command returns an empty
string. If an empty string is specified for <i>bitmap</i>, then any
current icon bitmap is cancelled for <i>window</i>. If
<i>bitmap</i> is specified then the command returns an empty
string. Otherwise it returns the name of the current icon bitmap
associated with <i>window</i>, or an empty string if <i>window</i>
has no icon bitmap. On the Windows operating system, an additional
flag is supported: <b>wm iconbitmap</b> <i>window</i>
?<i>-default</i>? ?<i>image</i>?. If the <i>-default</i> flag is
given, the icon is applied to all toplevel windows (existing and
future) to which no other specific icon has yet been applied. In
addition to bitmap image types, a full path specification to any
file which contains a valid Windows icon is also accepted (usually
.ico or .icr files), or any file for which the shell has assigned
an icon. Tcl will first test if the file contains an icon, then if
it has an assigned icon, and finally, if that fails, test for a
bitmap.</dd>

<dt><a name="M19"><b>wm iconify</b> <i>window</i></a></dt>

<dd>Arrange for <i>window</i> to be iconified. It <i>window</i>
hasn't yet been mapped for the first time, this command will
arrange for it to appear in the iconified state when it is
eventually mapped.</dd>

<dt><a name="M20"><b>wm iconmask</b> <i>window</i>
?<i>bitmap</i>?</a></dt>

<dd>If <i>bitmap</i> is specified, then it names a bitmap in the
standard forms accepted by Tk (see the <b><a href=
"../TkLib/GetBitmap.htm">Tk_GetBitmap</a></b> manual entry for
details). This bitmap is passed to the window manager to be used as
a mask in conjunction with the <b>iconbitmap</b> option: where the
mask has zeroes no icon will be displayed; where it has ones, the
bits from the icon bitmap will be displayed. If an empty string is
specified for <i>bitmap</i> then any current icon mask is cancelled
for <i>window</i> (this is equivalent to specifying a bitmap of all
ones). If <i>bitmap</i> is specified then the command returns an
empty string. Otherwise it returns the name of the current icon
mask associated with <i>window</i>, or an empty string if no mask
is in effect.</dd>

<dt><a name="M21"><b>wm iconname</b> <i>window</i>
?<i>newName</i>?</a></dt>

<dd>If <i>newName</i> is specified, then it is passed to the window
manager; the window manager should display <i>newName</i> inside
the icon associated with <i>window</i>. In this case an empty
string is returned as result. If <i>newName</i> isn't specified
then the command returns the current icon name for <i>window</i>,
or an empty string if no icon name has been specified (in this case
the window manager will normally display the window's title, as
specified with the <b>wm title</b> command).</dd>

<dt><a name="M22"><b>wm iconposition</b> <i>window</i> ?<i>x
y</i>?</a></dt>

<dd>If <i>x</i> and <i>y</i> are specified, they are passed to the
window manager as a hint about where to position the icon for
<i>window</i>. In this case an empty string is returned. If
<i>x</i> and <i>y</i> are specified as empty strings then any
existing icon position hint is cancelled. If neither <i>x</i> nor
<i>y</i> is specified, then the command returns a Tcl list
containing two values, which are the current icon position hints
(if no hints are in effect then an empty string is returned).</dd>

<dt><a name="M23"><b>wm iconwindow</b> <i>window</i>
?<i>pathName</i>?</a></dt>

<dd>If <i>pathName</i> is specified, it is the path name for a
window to use as icon for <i>window</i>: when <i>window</i> is
iconified then <i>pathName</i> will be mapped to serve as icon, and
when <i>window</i> is de-iconified then <i>pathName</i> will be
unmapped again. If <i>pathName</i> is specified as an empty string
then any existing icon window association for <i>window</i> will be
cancelled. If the <i>pathName</i> argument is specified then an
empty string is returned. Otherwise the command returns the path
name of the current icon window for <i>window</i>, or an empty
string if there is no icon window currently specified for
<i>window</i>. Button press events are disabled for <i>window</i>
as long as it is an icon window; this is needed in order to allow
window managers to ``own'' those events. Note: not all window
managers support the notion of an icon window.</dd>

<dt><a name="M24"><b>wm maxsize</b> <i>window</i> ?<i>width
height</i>?</a></dt>

<dd>If <i>width</i> and <i>height</i> are specified, they give the
maximum permissible dimensions for <i>window</i>. For gridded
windows the dimensions are specified in grid units; otherwise they
are specified in pixel units. The window manager will restrict the
window's dimensions to be less than or equal to <i>width</i> and
<i>height</i>. If <i>width</i> and <i>height</i> are specified,
then the command returns an empty string. Otherwise it returns a
Tcl list with two elements, which are the maximum width and height
currently in effect. The maximum size defaults to the size of the
screen. If resizing has been disabled with the <b>wm resizable</b>
command, then this command has no effect. See the sections on
geometry management below for more information.</dd>

<dt><a name="M25"><b>wm minsize</b> <i>window</i> ?<i>width
height</i>?</a></dt>

<dd>If <i>width</i> and <i>height</i> are specified, they give the
minimum permissible dimensions for <i>window</i>. For gridded
windows the dimensions are specified in grid units; otherwise they
are specified in pixel units. The window manager will restrict the
window's dimensions to be greater than or equal to <i>width</i> and
<i>height</i>. If <i>width</i> and <i>height</i> are specified,
then the command returns an empty string. Otherwise it returns a
Tcl list with two elements, which are the minimum width and height
currently in effect. The minimum size defaults to one pixel in each
dimension. If resizing has been disabled with the <b>wm
resizable</b> command, then this command has no effect. See the
sections on geometry management below for more information.</dd>

<dt><a name="M26"><b>wm overrideredirect</b> <i>window</i>
?<i>boolean</i>?</a></dt>

<dd>If <i>boolean</i> is specified, it must have a proper boolean
form and the override-redirect flag for <i>window</i> is set to
that value. If <i>boolean</i> is not specified then <b>1</b> or
<b>0</b> is returned to indicate whether or not the
override-redirect flag is currently set for <i>window</i>. Setting
the override-redirect flag for a window causes it to be ignored by
the window manager; among other things, this means that the window
will not be reparented from the root window into a decorative frame
and the user will not be able to manipulate the window using the
normal window manager mechanisms.</dd>

<dt><a name="M27"><b>wm positionfrom</b> <i>window</i>
?<i>who</i>?</a></dt>

<dd>If <i>who</i> is specified, it must be either <b>program</b> or
<b>user</b>, or an abbreviation of one of these two. It indicates
whether <i>window</i>'s current position was requested by the
program or by the user. Many window managers ignore
program-requested initial positions and ask the user to manually
position the window; if <b>user</b> is specified then the window
manager should position the window at the given place without
asking the user for assistance. If <i>who</i> is specified as an
empty string, then the current position source is cancelled. If
<i>who</i> is specified, then the command returns an empty string.
Otherwise it returns <b>user</b> or <b>program</b> to indicate the
source of the window's current position, or an empty string if no
source has been specified yet. Most window managers interpret ``no
source'' as equivalent to <b>program</b>. Tk will automatically set
the position source to <b>user</b> when a <b>wm geometry</b>
command is invoked, unless the source has been set explicitly to
<b>program</b>.</dd>

<dt><a name="M28"><b>wm protocol</b> <i>window</i> ?<i>name</i>?
?<i>command</i>?</a></dt>

<dd>This command is used to manage window manager protocols such as
<b>WM_DELETE_WINDOW</b>. <i>Name</i> is the name of an atom
corresponding to a window manager protocol, such as
<b>WM_DELETE_WINDOW</b> or <b>WM_SAVE_YOURSELF</b> or
<b>WM_TAKE_FOCUS</b>. If both <i>name</i> and <i>command</i> are
specified, then <i>command</i> is associated with the protocol
specified by <i>name</i>. <i>Name</i> will be added to
<i>window</i>'s <b>WM_PROTOCOLS</b> property to tell the window
manager that the application has a protocol handler for
<i>name</i>, and <i>command</i> will be invoked in the future
whenever the window manager sends a message to the client for that
protocol. In this case the command returns an empty string. If
<i>name</i> is specified but <i>command</i> isn't, then the current
command for <i>name</i> is returned, or an empty string if there is
no handler defined for <i>name</i>. If <i>command</i> is specified
as an empty string then the current handler for <i>name</i> is
deleted and it is removed from the <b>WM_PROTOCOLS</b> property on
<i>window</i>; an empty string is returned. Lastly, if neither
<i>name</i> nor <i>command</i> is specified, the command returns a
list of all the protocols for which handlers are currently defined
for <i>window</i>. 

<p>Tk always defines a protocol handler for
<b>WM_DELETE_WINDOW</b>, even if you haven't asked for one with
<b>wm protocol</b>. If a <b>WM_DELETE_WINDOW</b> message arrives
when you haven't defined a handler, then Tk handles the message by
destroying the window for which it was received.</p>
</dd>

<dt><a name="M29"><b>wm resizable</b> <i>window</i> ?<i>width
height</i>?</a></dt>

<dd>This command controls whether or not the user may interactively
resize a top-level window. If <i>width</i> and <i>height</i> are
specified, they are boolean values that determine whether the width
and height of <i>window</i> may be modified by the user. In this
case the command returns an empty string. If <i>width</i> and
<i>height</i> are omitted then the command returns a list with two
0/1 elements that indicate whether the width and height of
<i>window</i> are currently resizable. By default, windows are
resizable in both dimensions. If resizing is disabled, then the
window's size will be the size from the most recent interactive
resize or <b>wm geometry</b> command. If there has been no such
operation then the window's natural size will be used.</dd>

<dt><a name="M30"><b>wm sizefrom</b> <i>window</i>
?<i>who</i>?</a></dt>

<dd>If <i>who</i> is specified, it must be either <b>program</b> or
<b>user</b>, or an abbreviation of one of these two. It indicates
whether <i>window</i>'s current size was requested by the program
or by the user. Some window managers ignore program-requested sizes
and ask the user to manually size the window; if <b>user</b> is
specified then the window manager should give the window its
specified size without asking the user for assistance. If
<i>who</i> is specified as an empty string, then the current size
source is cancelled. If <i>who</i> is specified, then the command
returns an empty string. Otherwise it returns <b>user</b> or
<b>window</b> to indicate the source of the window's current size,
or an empty string if no source has been specified yet. Most window
managers interpret ``no source'' as equivalent to
<b>program</b>.</dd>

<dt><a name="M31"><b>wm stackorder</b> <i>window</i>
?<i>isabove|isbelow window</i>?</a></dt>

<dd>The stackorder command returns a list of toplevel windows in
stacking order, from lowest to highest. When a single toplevel
window is passed, the returned list recursively includes all of the
window's children that are toplevels. Only those toplevels that are
currently mapped to the screen are returned. The stackorder command
can also be used to determine if one toplevel is positioned above
or below a second toplevel. When two window arguments separated by
either <i>isabove</i> or <i>isbelow</i> are passed, a boolean
result indicates whether or not the first window is currently above
or below the second window in the stacking order.</dd>

<dt><a name="M32"><b>wm state</b> <i>window</i> ?newstate?</a></dt>

<dd>If <i>newstate</i> is specified, the window will be set to the
new state, otherwise it returns the current state of <i>window</i>:
either <b>normal</b>, <b>iconic</b>, <b>withdrawn</b>, <b>icon</b>,
or (Windows only) <b>zoomed</b>. The difference between
<b>iconic</b> and <b>icon</b> is that <b>iconic</b> refers to a
window that has been iconified (e.g., with the <b>wm iconify</b>
command) while <b>icon</b> refers to a window whose only purpose is
to serve as the icon for some other window (via the <b>wm
iconwindow</b> command). The <b>icon</b> state cannot be set.</dd>

<dt><a name="M33"><b>wm title</b> <i>window</i>
?<i>string</i>?</a></dt>

<dd>If <i>string</i> is specified, then it will be passed to the
window manager for use as the title for <i>window</i> (the window
manager should display this string in <i>window</i>'s title bar).
In this case the command returns an empty string. If <i>string</i>
isn't specified then the command returns the current title for the
<i>window</i>. The title for a window defaults to its name.</dd>

<dt><a name="M34"><b>wm transient</b> <i>window</i>
?<i>master</i>?</a></dt>

<dd>If <i>master</i> is specified, then the window manager is
informed that <i>window</i> is a transient window (e.g. pull-down
menu) working on behalf of <i>master</i> (where <i>master</i> is
the path name for a top-level window). If <i>master</i> is
specified as an empty string then <i>window</i> is marked as not
being a transient window any more. Otherwise the command returns
the path name of <i>window</i>'s current master, or an empty string
if <i>window</i> isn't currently a transient window. A transient
window will mirror state changes in the master and inherit the
state of the master when initially mapped. It is an error to
attempt to make a window a transient of itself.</dd>

<dt><a name="M35"><b>wm withdraw</b> <i>window</i></a></dt>

<dd>Arranges for <i>window</i> to be withdrawn from the screen.
This causes the window to be unmapped and forgotten about by the
window manager. If the window has never been mapped, then this
command causes the window to be mapped in the withdrawn state. Not
all window managers appear to know how to handle windows that are
mapped in the withdrawn state. Note: it sometimes seems to be
necessary to withdraw a window and then re-map it (e.g. with <b>wm
deiconify</b>) to get some window managers to pay attention to
changes in window attributes such as group.</dd>
</dl>

<h3><a name="M36">GEOMETRY MANAGEMENT</a></h3>

<p>By default a top-level window appears on the screen in its
<i>natural size</i>, which is the one determined internally by its
widgets and geometry managers. If the natural size of a top-level
window changes, then the window's size changes to match. A
top-level window can be given a size other than its natural size in
two ways. First, the user can resize the window manually using the
facilities of the window manager, such as resize handles. Second,
the application can request a particular size for a top-level
window using the <b>wm geometry</b> command. These two cases are
handled identically by Tk; in either case, the requested size
overrides the natural size. You can return the window to its
natural by invoking <b>wm geometry</b> with an empty
<i>geometry</i> string.</p>

<p>Normally a top-level window can have any size from one pixel in
each dimension up to the size of its screen. However, you can use
the <b>wm minsize</b> and <b>wm maxsize</b> commands to limit the
range of allowable sizes. The range set by <b>wm minsize</b> and
<b>wm maxsize</b> applies to all forms of resizing, including the
window's natural size as well as manual resizes and the <b>wm
geometry</b> command. You can also use the command <b>wm
resizable</b> to completely disable interactive resizing in one or
both dimensions.</p>

<h3><a name="M37">GRIDDED GEOMETRY MANAGEMENT</a></h3>

<p>Gridded geometry management occurs when one of the widgets of an
application supports a range of useful sizes. This occurs, for
example, in a text editor where the scrollbars, menus, and other
adornments are fixed in size but the edit widget can support any
number of lines of text or characters per line. In this case, it is
usually desirable to let the user specify the number of lines or
characters-per-line, either with the <b>wm geometry</b> command or
by interactively resizing the window. In the case of text, and in
other interesting cases also, only discrete sizes of the window
make sense, such as integral numbers of lines and
characters-per-line; arbitrary pixel sizes are not useful.</p>

<p>Gridded geometry management provides support for this kind of
application. Tk (and the window manager) assume that there is a
grid of some sort within the application and that the application
should be resized in terms of <i>grid units</i> rather than pixels.
Gridded geometry management is typically invoked by turning on the
<b>setGrid</b> option for a widget; it can also be invoked with the
<b>wm grid</b> command or by calling <b><a href=
"../TkLib/SetGrid.htm">Tk_SetGrid</a></b>. In each of these
approaches the particular widget (or sometimes code in the
application as a whole) specifies the relationship between integral
grid sizes for the window and pixel sizes. To return to non-gridded
geometry management, invoke <b>wm grid</b> with empty argument
strings.</p>

<p>When gridded geometry management is enabled then all the
dimensions specified in <b>wm minsize</b>, <b>wm maxsize</b>, and
<b>wm geometry</b> commands are treated as grid units rather than
pixel units. Interactive resizing is also carried out in even
numbers of grid units rather than pixels.</p>

<h3><a name="M38">BUGS</a></h3>

<p>Most existing window managers appear to have bugs that affect
the operation of the <b>wm</b> command. For example, some changes
won't take effect if the window is already active: the window will
have to be withdrawn and de-iconified in order to make the change
happen.</p>

<h3><a name="M39">KEYWORDS</a></h3>

<p><a href="../Keywords/A.htm#aspect ratio">aspect ratio</a>, <a
href="../Keywords/D.htm#deiconify">deiconify</a>, <a href=
"../Keywords/F.htm#focus model">focus model</a>, <a href=
"../Keywords/G.htm#geometry">geometry</a>, <a href=
"../Keywords/G.htm#grid">grid</a>, <a href=
"../Keywords/G.htm#group">group</a>, <a href=
"../Keywords/I.htm#icon">icon</a>, <a href=
"../Keywords/I.htm#iconify">iconify</a>, <a href=
"../Keywords/I.htm#increments">increments</a>, <a href=
"../Keywords/P.htm#position">position</a>, <a href=
"../Keywords/S.htm#size">size</a>, <a href=
"../Keywords/T.htm#title">title</a>, <a href=
"../Keywords/T.htm#top-level window">top-level window</a>, <a href=
"../Keywords/U.htm#units">units</a>, <a href=
"../Keywords/W.htm#window manager">window manager</a></p>

<hr>
<pre>
<a href=
"../copyright.htm">Copyright</a> &copy; 1991-1994 The Regents of the University of California.
<a href=
"../copyright.htm">Copyright</a> &copy; 1994-1996 Sun Microsystems, Inc.
<a href=
"../copyright.htm">Copyright</a> &copy; 1995-1997 Roger E. Critchlow Jr.
</pre>
</body>
</html>

