<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tk Library Procedures - Tk_CreateClientMessageHandler manual
page</title>
</head>
<body>
<table width='100%' border='0' cellspacing='0' cellpadding='0'
bgcolor='EAE2BB'>
<tr>
<td><a target='_blank' href=
'http://www.ActiveState.com/Products/ActiveTcl'><img src=
'../../images/ActiveTcl.gif' border='0' align='left' height='61'
width='64'></a> </td>
<td>
<div align='center' class='heading'>ActiveTcl User Guide</div>
</td>
<td><a target='_blank' href='http://www.ActiveState.com'><img src=
'../../images/AS_logo.gif' border='0' align='right' height='48'
width='112'></a> </td>
</tr>

<tr>
<td class='lineColour' colspan='3'></td>
</tr>
</table>

<br>
<h3><a name="M2">NAME</a></h3>

<p>Tk_CreateClientMessageHandler, Tk_DeleteClientMessageHandler -
associate procedure callback with ClientMessage type X events</p>

<h3><a name="M3">SYNOPSIS</a></h3>

<p><b>#include &lt;tk.h&gt;</b><br>
<b>Tk_CreateClientMessageHandler</b>(<i>proc</i>)<br>
<b>Tk_DeleteClientMessageHandler</b>(<i>proc</i>)<br>
</p>

<h3><a name="M4">ARGUMENTS</a></h3>

<dl>
<dt>Tk_ClientMessageProc <b>*proc</b> (in)</dt>

<dd>Procedure to invoke whenever a ClientMessage X event occurs on
any display.</dd>
</dl>

<h3><a name="M5">DESCRIPTION</a></h3>

<p><b>Tk_CreateClientMessageHandler</b> arranges for <i>proc</i> to
be invoked in the future whenever a ClientMessage X event occurs
that isn't handled by <b>WM_PROTOCOL</b>.
<b>Tk_CreateClientMessageHandler</b> is intended for use by
applications which need to watch X ClientMessage events, such as
drag and drop applications.</p>

<p>The callback to <i>proc</i> will be made by <b><a href=
"../TkLib/HandleEvent.htm">Tk_HandleEvent</a></b>; this mechanism
only works in programs that dispatch events through <b><a href=
"../TkLib/HandleEvent.htm">Tk_HandleEvent</a></b> (or through other
Tk procedures that call <b><a href=
"../TkLib/HandleEvent.htm">Tk_HandleEvent</a></b>, such as
<b>Tk_DoOneEvent</b> or <b><a href=
"../TkLib/MainLoop.htm">Tk_MainLoop</a></b>).</p>

<p><i>Proc</i> should have arguments and result that match the type
<b>Tk_ClientMessageProc</b>:</p>

<pre>
typedef int Tk_ClientMessageProc(
    Tk_Window <i>tkwin</i>,
    XEvent *<i>eventPtr</i>);
</pre>

<p>The <i>tkwin</i> parameter to <i>proc</i> is the Tk window which
is associated with this event. <i>EventPtr</i> is a pointer to the
X event.</p>

<p>Whenever an X ClientMessage event is processed by <b><a href=
"../TkLib/HandleEvent.htm">Tk_HandleEvent</a></b>, the <i>proc</i>
is called if it wasn't handled as a <b>WM_PROTOCOL</b>. The return
value from <i>proc</i> is normally 0. A non-zero return value
indicates that the event is not to be handled further; that is,
<i>proc</i> has done all processing that is to be allowed for the
event.</p>

<p>If there are multiple ClientMessage event handlers, each one is
called for each event, in the order in which they were
established.</p>

<p><b>Tk_DeleteClientMessageHandler</b> may be called to delete a
previously-created ClientMessage event handler: it deletes each
handler it finds that matches the <i>proc</i> argument. If no such
handler exists, then <b>Tk_DeleteClientMessageHandler</b> returns
without doing anything. Although Tk supports it, it's probably a
bad idea to have more than one callback with the same <i>proc</i>
argument.</p>

<h3><a name="M6">KEYWORDS</a></h3>

<p><a href="../Keywords/B.htm#bind">bind</a>, <a href=
"../Keywords/C.htm#callback">callback</a>, <a href=
"../Keywords/E.htm#event">event</a>, <a href=
"../Keywords/H.htm#handler">handler</a></p>

<hr>
<pre>
<a href=
"../copyright.htm">Copyright</a> &copy; 2000 Ajuba Solutions.
<a href=
"../copyright.htm">Copyright</a> &copy; 1995-1997 Roger E. Critchlow Jr.
</pre>
</body>
</html>

