<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta name='Author' content='ActiveState'>
<link rel='stylesheet' type='text/css' href='../../aspn.css'>
<title>Tk Library Procedures - Tk_GetDash manual page</title>
</head>
<body>
<table width='100%' border='0' cellspacing='0' cellpadding='0'
bgcolor='EAE2BB'>
<tr>
<td><a target='_blank' href=
'http://www.ActiveState.com/Products/ActiveTcl'><img src=
'../../images/ActiveTcl.gif' border='0' align='left' height='61'
width='64'></a> </td>
<td>
<div align='center' class='heading'>ActiveTcl User Guide</div>
</td>
<td><a target='_blank' href='http://www.ActiveState.com'><img src=
'../../images/AS_logo.gif' border='0' align='right' height='48'
width='112'></a> </td>
</tr>

<tr>
<td class='lineColour' colspan='3'></td>
</tr>
</table>

<br>
<h3><a name="M2">NAME</a></h3>

<p>Tk_GetDash - convert from string to valid dash structure.</p>

<h3><a name="M3">SYNOPSIS</a></h3>

<p><b>#include &lt;tk.h&gt;</b><br>
int<br>
<b>Tk_GetDash</b>(<i>interp, string, dashPtr</i>)<br>
</p>

<h3><a name="M4">ARGUMENTS</a></h3>

<dl>
<dt><a href="../TclLib/Interp.htm">Tcl_Interp</a> <b>*interp</b>
(in)</dt>

<dd>Interpreter to use for error reporting.</dd>

<dt>CONST char * <b><a href="../TclCmd/string.htm">string</a></b>
(in)</dt>

<dd>Textual value to be converted.</dd>

<dt>Tk_Dash <b>*dashPtr</b> (out)</dt>

<dd>Points to place to store the dash pattern value converted from
<i>string</i>.</dd>
</dl>

<h3><a name="M5">DESCRIPTION</a></h3>

<p>These procedure parses the string and fills in the result in the
Tk_Dash structure. The string can be a list of integers or a
character string containing only <b>[.,-_]</b> or spaces. If all
goes well, TCL_OK is returned. If <i>string</i> doesn't have the
proper syntax then TCL_ERROR is returned, an error message is left
in the interpreter's result, and nothing is stored at
*<i>dashPtr</i>.</p>

<p>The first possible syntax is a list of integers. Each element
represents the number of pixels of a line segment. Only the odd
segments are drawn using the "outline" color. The other segments
are drawn transparent.</p>

<p>The second possible syntax is a character list containing only 5
possible characters <b>[.,-_ ]</b>. The space can be used to
enlarge the space between other line elements, and can not occur as
the first posibion in the string. Some examples: -dash . = -dash {2
4} -dash - = -dash {6 4} -dash -. = -dash {6 4 2 4} -dash -.. =
-dash {6 4 2 4 2 4} -dash {. } = -dash {2 8} -dash , = -dash {4
4}</p>

<p>The main difference of this syntax with the previous is that it
it shape-conserving. This means that all values in the dash list
will be multiplied by the line width before display. This assures
that "." will always be displayed as a dot and "-" always as a dash
regardless of the line width.</p>

<p>On systems where only a limited set of dash patterns, the dash
pattern will be displayed as the most close dash pattern that is
available. For example, on Windows only the first 4 of the above
examples are available. The last 2 examples will be displayed
identically as the first one.</p>

<h3><a name="M6">KEYWORDS</a></h3>

<p><a href="../Keywords/D.htm#dash">dash</a>, <a href=
"../Keywords/C.htm#conversion">conversion</a></p>

<hr>
<pre>
<a href=
"../copyright.htm">Copyright</a> &copy; 1989-1993 The Regents of the University of California.
<a href=
"../copyright.htm">Copyright</a> &copy; 1994-1996 Sun Microsystems, Inc.
<a href=
"../copyright.htm">Copyright</a> &copy; 1995-1997 Roger E. Critchlow Jr.
</pre>
</body>
</html>

